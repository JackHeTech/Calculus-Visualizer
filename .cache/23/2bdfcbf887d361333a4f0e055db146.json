{"id":"node_modules/mathjs/es/function/utils/typeOf.js","dependencies":[{"name":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\package.json","includedInParent":true,"mtime":1579751683112},{"name":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\node_modules\\mathjs\\package.json","includedInParent":true,"mtime":1579751683012},{"name":"../../utils/factory","loc":{"line":1,"column":24},"parent":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\node_modules\\mathjs\\es\\function\\utils\\typeOf.js","resolved":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\node_modules\\mathjs\\es\\utils\\factory.js"},{"name":"../../utils/is","loc":{"line":2,"column":34},"parent":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\node_modules\\mathjs\\es\\function\\utils\\typeOf.js","resolved":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\node_modules\\mathjs\\es\\utils\\is.js"},{"name":"../../utils/log","loc":{"line":3,"column":25},"parent":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\node_modules\\mathjs\\es\\function\\utils\\typeOf.js","resolved":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\node_modules\\mathjs\\es\\utils\\log.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createDeprecatedTypeof = exports.createTypeOf = void 0;\n\nvar _factory = require(\"../../utils/factory\");\n\nvar _is = require(\"../../utils/is\");\n\nvar _log = require(\"../../utils/log\");\n\nvar name = 'typeOf';\nvar dependencies = ['typed'];\nvar createTypeOf =\n/* #__PURE__ */\n(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n  /**\n   * Determine the type of a variable.\n   *\n   * Function `typeOf` recognizes the following types of objects:\n   *\n   * Object                 | Returns       | Example\n   * ---------------------- | ------------- | ------------------------------------------\n   * null                   | `'null'`      | `math.typeOf(null)`\n   * number                 | `'number'`    | `math.typeOf(3.5)`\n   * boolean                | `'boolean'`   | `math.typeOf(true)`\n   * string                 | `'string'`    | `math.typeOf('hello world')`\n   * Array                  | `'Array'`     | `math.typeOf([1, 2, 3])`\n   * Date                   | `'Date'`      | `math.typeOf(new Date())`\n   * Function               | `'Function'`  | `math.typeOf(function () {})`\n   * Object                 | `'Object'`    | `math.typeOf({a: 2, b: 3})`\n   * RegExp                 | `'RegExp'`    | `math.typeOf(/a regexp/)`\n   * undefined              | `'undefined'` | `math.typeOf(undefined)`\n   * math.BigNumber         | `'BigNumber'` | `math.typeOf(math.bignumber('2.3e500'))`\n   * math.Chain             | `'Chain'`     | `math.typeOf(math.chain(2))`\n   * math.Complex           | `'Complex'`   | `math.typeOf(math.complex(2, 3))`\n   * math.Fraction          | `'Fraction'`  | `math.typeOf(math.fraction(1, 3))`\n   * math.Help              | `'Help'`      | `math.typeOf(math.help('sqrt'))`\n   * math.Help              | `'Help'`      | `math.typeOf(math.help('sqrt'))`\n   * math.Index             | `'Index'`     | `math.typeOf(math.index(1, 3))`\n   * math.Matrix            | `'Matrix'`    | `math.typeOf(math.matrix([[1,2], [3, 4]]))`\n   * math.Range             | `'Range'`     | `math.typeOf(math.range(0, 10))`\n   * math.ResultSet         | `'ResultSet'` | `math.typeOf(math.evaluate('a=2\\nb=3'))`\n   * math.Unit              | `'Unit'`      | `math.typeOf(math.unit('45 deg'))`\n   * math.AccessorNode            | `'AccessorNode'`            | `math.typeOf(math.parse('A[2]'))`\n   * math.ArrayNode               | `'ArrayNode'`               | `math.typeOf(math.parse('[1,2,3]'))`\n   * math.AssignmentNode          | `'AssignmentNode'`          | `math.typeOf(math.parse('x=2'))`\n   * math.BlockNode               | `'BlockNode'`               | `math.typeOf(math.parse('a=2; b=3'))`\n   * math.ConditionalNode         | `'ConditionalNode'`         | `math.typeOf(math.parse('x<0 ? -x : x'))`\n   * math.ConstantNode            | `'ConstantNode'`            | `math.typeOf(math.parse('2.3'))`\n   * math.FunctionAssignmentNode  | `'FunctionAssignmentNode'`  | `math.typeOf(math.parse('f(x)=x^2'))`\n   * math.FunctionNode            | `'FunctionNode'`            | `math.typeOf(math.parse('sqrt(4)'))`\n   * math.IndexNode               | `'IndexNode'`               | `math.typeOf(math.parse('A[2]').index)`\n   * math.ObjectNode              | `'ObjectNode'`              | `math.typeOf(math.parse('{a:2}'))`\n   * math.ParenthesisNode         | `'ParenthesisNode'`         | `math.typeOf(math.parse('(2+3)'))`\n   * math.RangeNode               | `'RangeNode'`               | `math.typeOf(math.parse('1:10'))`\n   * math.SymbolNode              | `'SymbolNode'`              | `math.typeOf(math.parse('x'))`\n   *\n   * Syntax:\n   *\n   *    math.typeOf(x)\n   *\n   * Examples:\n   *\n   *    math.typeOf(3.5)                     // returns 'number'\n   *    math.typeOf(math.complex('2-4i'))    // returns 'Complex'\n   *    math.typeOf(math.unit('45 deg'))     // returns 'Unit'\n   *    math.typeOf('hello world')           // returns 'string'\n   *\n   * @param {*} x     The variable for which to test the type.\n   * @return {string} Returns the name of the type. Primitive types are lower case,\n   *                  non-primitive types are upper-camel-case.\n   *                  For example 'number', 'string', 'Array', 'Date'.\n   */\n\n  return typed(name, {\n    any: _is.typeOf\n  });\n}); // For backward compatibility, deprecated since version 6.0.0. Date: 2018-11-06\n\nexports.createTypeOf = createTypeOf;\nvar createDeprecatedTypeof =\n/* #__PURE__ */\n(0, _factory.factory)('typeof', [], function () {\n  return function () {\n    (0, _log.warnOnce)('Function \"typeof\" has been renamed to \"typeOf\" in v6.0.0, please use the new function instead.');\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _is.typeOf.apply(_is.typeOf, args);\n  };\n});\nexports.createDeprecatedTypeof = createDeprecatedTypeof;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":4,"column":0}},{"name":"name","generated":{"line":14,"column":4},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":4,"column":4}},{"generated":{"line":14,"column":8},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":4,"column":8}},{"generated":{"line":14,"column":11},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":4,"column":11}},{"generated":{"line":14,"column":19},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":4,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":5,"column":0}},{"name":"dependencies","generated":{"line":15,"column":4},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":5,"column":4}},{"generated":{"line":15,"column":16},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":5,"column":16}},{"generated":{"line":15,"column":19},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":5,"column":19}},{"generated":{"line":15,"column":20},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":5,"column":20}},{"generated":{"line":15,"column":27},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":5,"column":19}},{"generated":{"line":15,"column":28},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":5,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":6,"column":7}},{"name":"createTypeOf","generated":{"line":16,"column":4},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":6,"column":11}},{"generated":{"line":16,"column":16},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":6,"column":23}},{"generated":{"line":17,"column":0},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":7,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":8,"column":0}},{"name":"name","generated":{"line":18,"column":22},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":8,"column":8}},{"generated":{"line":18,"column":26},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":8,"column":0}},{"name":"dependencies","generated":{"line":18,"column":28},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":8,"column":14}},{"generated":{"line":18,"column":40},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":8,"column":0}},{"generated":{"line":18,"column":42},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":8,"column":28}},{"name":"_ref","generated":{"line":18,"column":52},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":8,"column":38}},{"generated":{"line":18,"column":56},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":8,"column":28}},{"generated":{"line":18,"column":58},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":8,"column":44}},{"generated":{"line":19,"column":0},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":9,"column":2}},{"name":"typed","generated":{"line":19,"column":6},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":9,"column":6}},{"generated":{"line":19,"column":11},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":9,"column":11}},{"name":"_ref","generated":{"line":19,"column":14},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":9,"column":14}},{"generated":{"line":19,"column":18},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":9,"column":18}},{"name":"typed","generated":{"line":19,"column":19},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":9,"column":19}},{"generated":{"line":19,"column":24},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":9,"column":2}},{"generated":{"line":20,"column":0},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":11,"column":2}},{"generated":{"line":79,"column":0},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":69,"column":2}},{"name":"typed","generated":{"line":79,"column":9},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":69,"column":9}},{"generated":{"line":79,"column":14},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":69,"column":14}},{"name":"name","generated":{"line":79,"column":15},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":69,"column":15}},{"generated":{"line":79,"column":19},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":69,"column":14}},{"generated":{"line":79,"column":21},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":69,"column":21}},{"name":"any","generated":{"line":80,"column":0},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":70,"column":4}},{"name":"any","generated":{"line":80,"column":4},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":70,"column":4}},{"generated":{"line":80,"column":7},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":70,"column":7}},{"name":"_typeOf","generated":{"line":80,"column":9},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":70,"column":9}},{"generated":{"line":81,"column":0},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":69,"column":21}},{"generated":{"line":81,"column":3},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":69,"column":14}},{"generated":{"line":81,"column":4},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":69,"column":2}},{"generated":{"line":82,"column":0},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":72,"column":1}},{"generated":{"line":82,"column":1},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":8,"column":0}},{"generated":{"line":82,"column":2},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":6,"column":7}},{"generated":{"line":82,"column":4},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":72,"column":4}},{"generated":{"line":85,"column":0},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":74,"column":7}},{"name":"createDeprecatedTypeof","generated":{"line":85,"column":4},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":74,"column":11}},{"generated":{"line":85,"column":26},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":74,"column":33}},{"generated":{"line":86,"column":0},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":75,"column":0}},{"generated":{"line":87,"column":0},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":76,"column":0}},{"generated":{"line":87,"column":22},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":76,"column":8}},{"generated":{"line":87,"column":30},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":76,"column":0}},{"generated":{"line":87,"column":32},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":76,"column":18}},{"generated":{"line":87,"column":34},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":76,"column":0}},{"generated":{"line":87,"column":36},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":76,"column":22}},{"generated":{"line":87,"column":48},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":76,"column":34}},{"generated":{"line":88,"column":0},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":77,"column":2}},{"generated":{"line":88,"column":9},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":77,"column":9}},{"generated":{"line":88,"column":21},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":77,"column":21}},{"generated":{"line":89,"column":0},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":78,"column":4}},{"generated":{"line":89,"column":23},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":78,"column":13}},{"generated":{"line":89,"column":119},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":78,"column":4}},{"generated":{"line":91,"column":0},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":80,"column":4}},{"generated":{"line":91,"column":9},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":80,"column":9}},{"name":"_len","generated":{"line":91,"column":13},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":80,"column":13}},{"generated":{"line":91,"column":17},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":80,"column":17}},{"name":"arguments","generated":{"line":91,"column":20},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":80,"column":20}},{"generated":{"line":91,"column":29},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":80,"column":29}},{"name":"length","generated":{"line":91,"column":30},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":80,"column":30}},{"generated":{"line":91,"column":36},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":80,"column":9}},{"name":"args","generated":{"line":91,"column":38},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":80,"column":38}},{"generated":{"line":91,"column":42},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":80,"column":42}},{"generated":{"line":91,"column":45},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":80,"column":45}},{"name":"Array","generated":{"line":91,"column":49},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":80,"column":49}},{"generated":{"line":91,"column":54},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":80,"column":45}},{"name":"_len","generated":{"line":91,"column":55},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":80,"column":55}},{"generated":{"line":91,"column":59},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":80,"column":45}},{"generated":{"line":91,"column":60},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":80,"column":9}},{"name":"_key","generated":{"line":91,"column":62},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":80,"column":62}},{"generated":{"line":91,"column":66},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":80,"column":66}},{"generated":{"line":91,"column":69},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":80,"column":69}},{"generated":{"line":91,"column":70},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":80,"column":4}},{"name":"_key","generated":{"line":91,"column":72},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":80,"column":72}},{"generated":{"line":91,"column":76},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":80,"column":76}},{"name":"_len","generated":{"line":91,"column":79},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":80,"column":79}},{"generated":{"line":91,"column":83},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":80,"column":4}},{"name":"_key","generated":{"line":91,"column":85},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":80,"column":85}},{"generated":{"line":91,"column":89},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":80,"column":89}},{"generated":{"line":91,"column":91},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":80,"column":4}},{"generated":{"line":91,"column":93},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":80,"column":93}},{"name":"args","generated":{"line":92,"column":0},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":81,"column":6}},{"name":"args","generated":{"line":92,"column":6},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":81,"column":6}},{"generated":{"line":92,"column":10},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":81,"column":10}},{"name":"_key","generated":{"line":92,"column":11},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":81,"column":11}},{"generated":{"line":92,"column":15},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":81,"column":10}},{"generated":{"line":92,"column":16},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":81,"column":6}},{"name":"arguments","generated":{"line":92,"column":19},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":81,"column":19}},{"generated":{"line":92,"column":28},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":81,"column":28}},{"name":"_key","generated":{"line":92,"column":29},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":81,"column":29}},{"generated":{"line":92,"column":33},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":81,"column":28}},{"generated":{"line":92,"column":34},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":81,"column":6}},{"generated":{"line":93,"column":0},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":82,"column":5}},{"generated":{"line":95,"column":0},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":84,"column":4}},{"name":"_typeOf","generated":{"line":95,"column":11},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":84,"column":11}},{"name":"apply","generated":{"line":95,"column":22},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":84,"column":19}},{"generated":{"line":95,"column":27},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":84,"column":11}},{"name":"_typeOf","generated":{"line":95,"column":28},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":84,"column":25}},{"generated":{"line":95,"column":38},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":84,"column":11}},{"name":"args","generated":{"line":95,"column":40},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":84,"column":34}},{"generated":{"line":95,"column":44},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":84,"column":11}},{"generated":{"line":95,"column":45},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":84,"column":4}},{"generated":{"line":96,"column":0},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":85,"column":3}},{"generated":{"line":96,"column":3},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":77,"column":2}},{"generated":{"line":97,"column":0},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":86,"column":1}},{"generated":{"line":97,"column":1},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":76,"column":0}},{"generated":{"line":97,"column":2},"source":"node_modules/mathjs/es/function/utils/typeOf.js","original":{"line":74,"column":7}}],"sources":{"node_modules/mathjs/es/function/utils/typeOf.js":"import { factory } from '../../utils/factory';\nimport { typeOf as _typeOf } from '../../utils/is';\nimport { warnOnce } from '../../utils/log';\nvar name = 'typeOf';\nvar dependencies = ['typed'];\nexport var createTypeOf =\n/* #__PURE__ */\nfactory(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Determine the type of a variable.\n   *\n   * Function `typeOf` recognizes the following types of objects:\n   *\n   * Object                 | Returns       | Example\n   * ---------------------- | ------------- | ------------------------------------------\n   * null                   | `'null'`      | `math.typeOf(null)`\n   * number                 | `'number'`    | `math.typeOf(3.5)`\n   * boolean                | `'boolean'`   | `math.typeOf(true)`\n   * string                 | `'string'`    | `math.typeOf('hello world')`\n   * Array                  | `'Array'`     | `math.typeOf([1, 2, 3])`\n   * Date                   | `'Date'`      | `math.typeOf(new Date())`\n   * Function               | `'Function'`  | `math.typeOf(function () {})`\n   * Object                 | `'Object'`    | `math.typeOf({a: 2, b: 3})`\n   * RegExp                 | `'RegExp'`    | `math.typeOf(/a regexp/)`\n   * undefined              | `'undefined'` | `math.typeOf(undefined)`\n   * math.BigNumber         | `'BigNumber'` | `math.typeOf(math.bignumber('2.3e500'))`\n   * math.Chain             | `'Chain'`     | `math.typeOf(math.chain(2))`\n   * math.Complex           | `'Complex'`   | `math.typeOf(math.complex(2, 3))`\n   * math.Fraction          | `'Fraction'`  | `math.typeOf(math.fraction(1, 3))`\n   * math.Help              | `'Help'`      | `math.typeOf(math.help('sqrt'))`\n   * math.Help              | `'Help'`      | `math.typeOf(math.help('sqrt'))`\n   * math.Index             | `'Index'`     | `math.typeOf(math.index(1, 3))`\n   * math.Matrix            | `'Matrix'`    | `math.typeOf(math.matrix([[1,2], [3, 4]]))`\n   * math.Range             | `'Range'`     | `math.typeOf(math.range(0, 10))`\n   * math.ResultSet         | `'ResultSet'` | `math.typeOf(math.evaluate('a=2\\nb=3'))`\n   * math.Unit              | `'Unit'`      | `math.typeOf(math.unit('45 deg'))`\n   * math.AccessorNode            | `'AccessorNode'`            | `math.typeOf(math.parse('A[2]'))`\n   * math.ArrayNode               | `'ArrayNode'`               | `math.typeOf(math.parse('[1,2,3]'))`\n   * math.AssignmentNode          | `'AssignmentNode'`          | `math.typeOf(math.parse('x=2'))`\n   * math.BlockNode               | `'BlockNode'`               | `math.typeOf(math.parse('a=2; b=3'))`\n   * math.ConditionalNode         | `'ConditionalNode'`         | `math.typeOf(math.parse('x<0 ? -x : x'))`\n   * math.ConstantNode            | `'ConstantNode'`            | `math.typeOf(math.parse('2.3'))`\n   * math.FunctionAssignmentNode  | `'FunctionAssignmentNode'`  | `math.typeOf(math.parse('f(x)=x^2'))`\n   * math.FunctionNode            | `'FunctionNode'`            | `math.typeOf(math.parse('sqrt(4)'))`\n   * math.IndexNode               | `'IndexNode'`               | `math.typeOf(math.parse('A[2]').index)`\n   * math.ObjectNode              | `'ObjectNode'`              | `math.typeOf(math.parse('{a:2}'))`\n   * math.ParenthesisNode         | `'ParenthesisNode'`         | `math.typeOf(math.parse('(2+3)'))`\n   * math.RangeNode               | `'RangeNode'`               | `math.typeOf(math.parse('1:10'))`\n   * math.SymbolNode              | `'SymbolNode'`              | `math.typeOf(math.parse('x'))`\n   *\n   * Syntax:\n   *\n   *    math.typeOf(x)\n   *\n   * Examples:\n   *\n   *    math.typeOf(3.5)                     // returns 'number'\n   *    math.typeOf(math.complex('2-4i'))    // returns 'Complex'\n   *    math.typeOf(math.unit('45 deg'))     // returns 'Unit'\n   *    math.typeOf('hello world')           // returns 'string'\n   *\n   * @param {*} x     The variable for which to test the type.\n   * @return {string} Returns the name of the type. Primitive types are lower case,\n   *                  non-primitive types are upper-camel-case.\n   *                  For example 'number', 'string', 'Array', 'Date'.\n   */\n  return typed(name, {\n    any: _typeOf\n  });\n}); // For backward compatibility, deprecated since version 6.0.0. Date: 2018-11-06\n\nexport var createDeprecatedTypeof =\n/* #__PURE__ */\nfactory('typeof', [], function () {\n  return function () {\n    warnOnce('Function \"typeof\" has been renamed to \"typeOf\" in v6.0.0, please use the new function instead.');\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _typeOf.apply(_typeOf, args);\n  };\n});"},"lineCount":null}},"error":null,"hash":"90b81cb4b892bd399cae883f0776699a","cacheData":{"env":{}}}