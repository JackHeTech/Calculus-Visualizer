{"id":"node_modules/mathjs/es/utils/polyfills.js","dependencies":[{"name":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\package.json","includedInParent":true,"mtime":1579751683112},{"name":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\node_modules\\mathjs\\package.json","includedInParent":true,"mtime":1579751683012}],"generated":{"js":"// TODO: remove these polyfills as soon as we have a build process that transpiles the code to ES5\n// Polyfill for IE 11 (Number.isFinite is used in `complex.js`)\n// source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite\nNumber.isFinite = Number.isFinite || function (value) {\n  return typeof value === 'number' && isFinite(value);\n}; // Polyfill for IE 11\n// source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\n\n\nNumber.isNaN = Number.isNaN || function (value) {\n  return value !== value; // eslint-disable-line no-self-compare\n};"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":2,"column":0}},{"generated":{"line":3,"column":0},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":3,"column":0}},{"name":"Number","generated":{"line":4,"column":0},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":4,"column":0}},{"generated":{"line":4,"column":6},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":4,"column":6}},{"name":"isFinite","generated":{"line":4,"column":7},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":4,"column":7}},{"generated":{"line":4,"column":15},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":4,"column":0}},{"name":"Number","generated":{"line":4,"column":18},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":4,"column":18}},{"generated":{"line":4,"column":24},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":4,"column":24}},{"name":"isFinite","generated":{"line":4,"column":25},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":4,"column":25}},{"generated":{"line":4,"column":33},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":4,"column":18}},{"generated":{"line":4,"column":37},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":4,"column":37}},{"name":"value","generated":{"line":4,"column":47},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":4,"column":47}},{"generated":{"line":4,"column":52},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":4,"column":37}},{"generated":{"line":4,"column":54},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":4,"column":54}},{"generated":{"line":5,"column":0},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":5,"column":2}},{"generated":{"line":5,"column":9},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":5,"column":9}},{"name":"value","generated":{"line":5,"column":16},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":5,"column":16}},{"generated":{"line":5,"column":21},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":5,"column":9}},{"generated":{"line":5,"column":26},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":5,"column":26}},{"generated":{"line":5,"column":34},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":5,"column":9}},{"name":"isFinite","generated":{"line":5,"column":38},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":5,"column":38}},{"generated":{"line":5,"column":46},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":5,"column":46}},{"name":"value","generated":{"line":5,"column":47},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":5,"column":47}},{"generated":{"line":5,"column":52},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":5,"column":46}},{"generated":{"line":5,"column":53},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":5,"column":2}},{"generated":{"line":6,"column":0},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":6,"column":1}},{"generated":{"line":6,"column":1},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":4,"column":0}},{"generated":{"line":6,"column":3},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":6,"column":3}},{"generated":{"line":7,"column":0},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":7,"column":0}},{"name":"Number","generated":{"line":10,"column":0},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":10,"column":0}},{"generated":{"line":10,"column":6},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":10,"column":6}},{"name":"isNaN","generated":{"line":10,"column":7},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":10,"column":7}},{"generated":{"line":10,"column":12},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":10,"column":0}},{"name":"Number","generated":{"line":10,"column":15},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":10,"column":15}},{"generated":{"line":10,"column":21},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":10,"column":21}},{"name":"isNaN","generated":{"line":10,"column":22},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":10,"column":22}},{"generated":{"line":10,"column":27},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":10,"column":15}},{"generated":{"line":10,"column":31},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":10,"column":31}},{"name":"value","generated":{"line":10,"column":41},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":10,"column":41}},{"generated":{"line":10,"column":46},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":10,"column":31}},{"generated":{"line":10,"column":48},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":10,"column":48}},{"generated":{"line":11,"column":0},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":11,"column":2}},{"name":"value","generated":{"line":11,"column":9},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":11,"column":9}},{"generated":{"line":11,"column":14},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":11,"column":14}},{"name":"value","generated":{"line":11,"column":19},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":11,"column":19}},{"generated":{"line":11,"column":24},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":11,"column":2}},{"generated":{"line":11,"column":25},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":10,"column":48}},{"generated":{"line":11,"column":26},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":11,"column":26}},{"generated":{"line":12,"column":0},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":12,"column":1}},{"generated":{"line":12,"column":1},"source":"node_modules/mathjs/es/utils/polyfills.js","original":{"line":10,"column":0}}],"sources":{"node_modules/mathjs/es/utils/polyfills.js":"// TODO: remove these polyfills as soon as we have a build process that transpiles the code to ES5\n// Polyfill for IE 11 (Number.isFinite is used in `complex.js`)\n// source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite\nNumber.isFinite = Number.isFinite || function (value) {\n  return typeof value === 'number' && isFinite(value);\n}; // Polyfill for IE 11\n// source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\n\n\nNumber.isNaN = Number.isNaN || function (value) {\n  return value !== value; // eslint-disable-line no-self-compare\n};"},"lineCount":null}},"error":null,"hash":"a6a970da7df6adec313b24c39ff8a1ca","cacheData":{"env":{}}}