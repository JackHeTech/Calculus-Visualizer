{"id":"node_modules/seed-random/index.js","dependencies":[{"name":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\package.json","includedInParent":true,"mtime":1579751683112},{"name":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\node_modules\\seed-random\\package.json","includedInParent":true,"mtime":1579751682411}],"generated":{"js":"var global = arguments[3];\n'use strict';\r\n\r\nvar width = 256;// each RC4 output is 0 <= x < 256\r\nvar chunks = 6;// at least six RC4 outputs for each double\r\nvar digits = 52;// there are 52 significant digits in a double\r\nvar pool = [];// pool: entropy pool starts empty\r\nvar GLOBAL = typeof global === 'undefined' ? window : global;\r\n\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\nvar startdenom = Math.pow(width, chunks),\r\n    significance = Math.pow(2, digits),\r\n    overflow = significance * 2,\r\n    mask = width - 1;\r\n\r\n\r\nvar oldRandom = Math.random;\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\nmodule.exports = function(seed, options) {\r\n  if (options && options.global === true) {\r\n    options.global = false;\r\n    Math.random = module.exports(seed, options);\r\n    options.global = true;\r\n    return Math.random;\r\n  }\r\n  var use_entropy = (options && options.entropy) || false;\r\n  var key = [];\r\n\r\n  // Flatten the seed string or build one from local entropy if needed.\r\n  var shortseed = mixkey(flatten(\r\n    use_entropy ? [seed, tostring(pool)] :\r\n    0 in arguments ? seed : autoseed(), 3), key);\r\n\r\n  // Use the seed to initialize an ARC4 generator.\r\n  var arc4 = new ARC4(key);\r\n\r\n  // Mix the randomness into accumulated entropy.\r\n  mixkey(tostring(arc4.S), pool);\r\n\r\n  // Override Math.random\r\n\r\n  // This function returns a random double in [0, 1) that contains\r\n  // randomness in every bit of the mantissa of the IEEE 754 value.\r\n\r\n  return function() {         // Closure to return a random double:\r\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n        x = 0;                          //   and no 'extra last byte'.\r\n    while (n < significance) {          // Fill up all significant digits by\r\n      n = (n + x) * width;              //   shifting numerator and\r\n      d *= width;                       //   denominator and generating a\r\n      x = arc4.g(1);                    //   new least-significant-byte.\r\n    }\r\n    while (n >= overflow) {             // To avoid rounding up, before adding\r\n      n /= 2;                           //   last byte, shift everything\r\n      d /= 2;                           //   right using integer Math until\r\n      x >>>= 1;                         //   we have exactly the desired bits.\r\n    }\r\n    return (n + x) / d;                 // Form the number within [0, 1).\r\n  };\r\n};\r\n\r\nmodule.exports.resetGlobal = function () {\r\n  Math.random = oldRandom;\r\n};\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n/** @constructor */\r\nfunction ARC4(key) {\r\n  var t, keylen = key.length,\r\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n  // The empty key [] is treated as [0].\r\n  if (!keylen) { key = [keylen++]; }\r\n\r\n  // Set up S using the standard key scheduling algorithm.\r\n  while (i < width) {\r\n    s[i] = i++;\r\n  }\r\n  for (i = 0; i < width; i++) {\r\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n    s[j] = t;\r\n  }\r\n\r\n  // The \"g\" method returns the next (count) outputs as one number.\r\n  (me.g = function(count) {\r\n    // Using instance members instead of closure state nearly doubles speed.\r\n    var t, r = 0,\r\n        i = me.i, j = me.j, s = me.S;\r\n    while (count--) {\r\n      t = s[i = mask & (i + 1)];\r\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n    }\r\n    me.i = i; me.j = j;\r\n    return r;\r\n    // For robust unpredictability discard an initial batch of values.\r\n    // See http://www.rsa.com/rsalabs/node.asp?id=2009\r\n  })(width);\r\n}\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\nfunction flatten(obj, depth) {\r\n  var result = [], typ = (typeof obj)[0], prop;\r\n  if (depth && typ == 'o') {\r\n    for (prop in obj) {\r\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n    }\r\n  }\r\n  return (result.length ? result : typ == 's' ? obj : obj + '\\0');\r\n}\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\nfunction mixkey(seed, key) {\r\n  var stringseed = seed + '', smear, j = 0;\r\n  while (j < stringseed.length) {\r\n    key[mask & j] =\r\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n  }\r\n  return tostring(key);\r\n}\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto if available.\r\n//\r\n/** @param {Uint8Array=} seed */\r\nfunction autoseed(seed) {\r\n  try {\r\n    GLOBAL.crypto.getRandomValues(seed = new Uint8Array(width));\r\n    return tostring(seed);\r\n  } catch (e) {\r\n    return [+new Date, GLOBAL, GLOBAL.navigator && GLOBAL.navigator.plugins,\r\n            GLOBAL.screen, tostring(pool)];\r\n  }\r\n}\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\nfunction tostring(a) {\r\n  return String.fromCharCode.apply(0, a);\r\n}\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to intefere with determinstic PRNG state later,\r\n// seedrandom will not call Math.random on its own again after\r\n// initialization.\r\n//\r\nmixkey(Math.random(), pool);\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/seed-random/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/seed-random/index.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}}],"sources":{"node_modules/seed-random/index.js":"'use strict';\r\n\r\nvar width = 256;// each RC4 output is 0 <= x < 256\r\nvar chunks = 6;// at least six RC4 outputs for each double\r\nvar digits = 52;// there are 52 significant digits in a double\r\nvar pool = [];// pool: entropy pool starts empty\r\nvar GLOBAL = typeof global === 'undefined' ? window : global;\r\n\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\nvar startdenom = Math.pow(width, chunks),\r\n    significance = Math.pow(2, digits),\r\n    overflow = significance * 2,\r\n    mask = width - 1;\r\n\r\n\r\nvar oldRandom = Math.random;\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\nmodule.exports = function(seed, options) {\r\n  if (options && options.global === true) {\r\n    options.global = false;\r\n    Math.random = module.exports(seed, options);\r\n    options.global = true;\r\n    return Math.random;\r\n  }\r\n  var use_entropy = (options && options.entropy) || false;\r\n  var key = [];\r\n\r\n  // Flatten the seed string or build one from local entropy if needed.\r\n  var shortseed = mixkey(flatten(\r\n    use_entropy ? [seed, tostring(pool)] :\r\n    0 in arguments ? seed : autoseed(), 3), key);\r\n\r\n  // Use the seed to initialize an ARC4 generator.\r\n  var arc4 = new ARC4(key);\r\n\r\n  // Mix the randomness into accumulated entropy.\r\n  mixkey(tostring(arc4.S), pool);\r\n\r\n  // Override Math.random\r\n\r\n  // This function returns a random double in [0, 1) that contains\r\n  // randomness in every bit of the mantissa of the IEEE 754 value.\r\n\r\n  return function() {         // Closure to return a random double:\r\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n        x = 0;                          //   and no 'extra last byte'.\r\n    while (n < significance) {          // Fill up all significant digits by\r\n      n = (n + x) * width;              //   shifting numerator and\r\n      d *= width;                       //   denominator and generating a\r\n      x = arc4.g(1);                    //   new least-significant-byte.\r\n    }\r\n    while (n >= overflow) {             // To avoid rounding up, before adding\r\n      n /= 2;                           //   last byte, shift everything\r\n      d /= 2;                           //   right using integer Math until\r\n      x >>>= 1;                         //   we have exactly the desired bits.\r\n    }\r\n    return (n + x) / d;                 // Form the number within [0, 1).\r\n  };\r\n};\r\n\r\nmodule.exports.resetGlobal = function () {\r\n  Math.random = oldRandom;\r\n};\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n/** @constructor */\r\nfunction ARC4(key) {\r\n  var t, keylen = key.length,\r\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n  // The empty key [] is treated as [0].\r\n  if (!keylen) { key = [keylen++]; }\r\n\r\n  // Set up S using the standard key scheduling algorithm.\r\n  while (i < width) {\r\n    s[i] = i++;\r\n  }\r\n  for (i = 0; i < width; i++) {\r\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n    s[j] = t;\r\n  }\r\n\r\n  // The \"g\" method returns the next (count) outputs as one number.\r\n  (me.g = function(count) {\r\n    // Using instance members instead of closure state nearly doubles speed.\r\n    var t, r = 0,\r\n        i = me.i, j = me.j, s = me.S;\r\n    while (count--) {\r\n      t = s[i = mask & (i + 1)];\r\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n    }\r\n    me.i = i; me.j = j;\r\n    return r;\r\n    // For robust unpredictability discard an initial batch of values.\r\n    // See http://www.rsa.com/rsalabs/node.asp?id=2009\r\n  })(width);\r\n}\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\nfunction flatten(obj, depth) {\r\n  var result = [], typ = (typeof obj)[0], prop;\r\n  if (depth && typ == 'o') {\r\n    for (prop in obj) {\r\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n    }\r\n  }\r\n  return (result.length ? result : typ == 's' ? obj : obj + '\\0');\r\n}\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\nfunction mixkey(seed, key) {\r\n  var stringseed = seed + '', smear, j = 0;\r\n  while (j < stringseed.length) {\r\n    key[mask & j] =\r\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n  }\r\n  return tostring(key);\r\n}\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto if available.\r\n//\r\n/** @param {Uint8Array=} seed */\r\nfunction autoseed(seed) {\r\n  try {\r\n    GLOBAL.crypto.getRandomValues(seed = new Uint8Array(width));\r\n    return tostring(seed);\r\n  } catch (e) {\r\n    return [+new Date, GLOBAL, GLOBAL.navigator && GLOBAL.navigator.plugins,\r\n            GLOBAL.screen, tostring(pool)];\r\n  }\r\n}\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\nfunction tostring(a) {\r\n  return String.fromCharCode.apply(0, a);\r\n}\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to intefere with determinstic PRNG state later,\r\n// seedrandom will not call Math.random on its own again after\r\n// initialization.\r\n//\r\nmixkey(Math.random(), pool);\r\n"},"lineCount":175}},"error":null,"hash":"2c3e2278bd3a1172cb60ec09914177b7","cacheData":{"env":{}}}