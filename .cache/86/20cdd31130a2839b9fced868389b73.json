{"id":"node_modules/mathjs/es/expression/Parser.js","dependencies":[{"name":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\package.json","includedInParent":true,"mtime":1579751683112},{"name":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\node_modules\\mathjs\\package.json","includedInParent":true,"mtime":1579751683012},{"name":"../utils/factory","loc":{"line":1,"column":24},"parent":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\node_modules\\mathjs\\es\\expression\\Parser.js","resolved":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\node_modules\\mathjs\\es\\utils\\factory.js"},{"name":"../utils/object","loc":{"line":2,"column":39},"parent":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\node_modules\\mathjs\\es\\expression\\Parser.js","resolved":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\node_modules\\mathjs\\es\\utils\\object.js"},{"name":"../utils/customs","loc":{"line":3,"column":49},"parent":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\node_modules\\mathjs\\es\\expression\\Parser.js","resolved":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\node_modules\\mathjs\\es\\utils\\customs.js"},{"name":"../utils/log","loc":{"line":4,"column":25},"parent":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\node_modules\\mathjs\\es\\expression\\Parser.js","resolved":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\node_modules\\mathjs\\es\\utils\\log.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createParserClass = void 0;\n\nvar _factory = require(\"../utils/factory\");\n\nvar _object = require(\"../utils/object\");\n\nvar _customs = require(\"../utils/customs\");\n\nvar _log = require(\"../utils/log\");\n\nvar name = 'Parser';\nvar dependencies = ['parse'];\nvar createParserClass =\n/* #__PURE__ */\n(0, _factory.factory)(name, dependencies, function (_ref) {\n  var parse = _ref.parse;\n  /**\n   * @constructor Parser\n   * Parser contains methods to evaluate or parse expressions, and has a number\n   * of convenience methods to get, set, and remove variables from memory. Parser\n   * keeps a scope containing variables in memory, which is used for all\n   * evaluations.\n   *\n   * Methods:\n   *    const result = parser.evaluate(expr)  // evaluate an expression\n   *    const value = parser.get(name)        // retrieve a variable from the parser\n   *    const values = parser.getAll()        // retrieve all defined variables\n   *    parser.set(name, value)               // set a variable in the parser\n   *    parser.remove(name)                   // clear a variable from the\n   *                                          // parsers scope\n   *    parser.clear()                        // clear the parsers scope\n   *\n   * Example usage:\n   *    const parser = new Parser()\n   *    // Note: there is a convenience method which can be used instead:\n   *    // const parser = new math.parser()\n   *\n   *    // evaluate expressions\n   *    parser.evaluate('sqrt(3^2 + 4^2)')        // 5\n   *    parser.evaluate('sqrt(-4)')               // 2i\n   *    parser.evaluate('2 inch in cm')           // 5.08 cm\n   *    parser.evaluate('cos(45 deg)')            // 0.7071067811865476\n   *\n   *    // define variables and functions\n   *    parser.evaluate('x = 7 / 2')              // 3.5\n   *    parser.evaluate('x + 3')                  // 6.5\n   *    parser.evaluate('function f(x, y) = x^y') // f(x, y)\n   *    parser.evaluate('f(2, 3)')                // 8\n   *\n   *    // get and set variables and functions\n   *    const x = parser.get('x')                 // 7\n   *    const f = parser.get('f')                 // function\n   *    const g = f(3, 2)                         // 9\n   *    parser.set('h', 500)\n   *    const i = parser.evaluate('h / 2')        // 250\n   *    parser.set('hello', function (name) {\n   *        return 'hello, ' + name + '!'\n   *    })\n   *    parser.evaluate('hello(\"user\")')          // \"hello, user!\"\n   *\n   *    // clear defined functions and variables\n   *    parser.clear()\n   *\n   */\n\n  function Parser() {\n    if (!(this instanceof Parser)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    this.scope = {};\n  }\n  /**\n   * Attach type information\n   */\n\n\n  Parser.prototype.type = 'Parser';\n  Parser.prototype.isParser = true;\n  /**\n   * Parse an expression and return the parsed function node.\n   * The node tree can be compiled via `code = node.compile(math)`,\n   * and the compiled code can be executed as `code.evaluate([scope])`\n   * @param {string} expr\n   * @return {Node} node\n   * @throws {Error}\n   */\n\n  Parser.prototype.parse = function (expr) {\n    throw new Error('Parser.parse is deprecated. Use math.parse instead.');\n  };\n  /**\n   * Parse and compile an expression, return the compiled javascript code.\n   * The node can be evaluated via code.evaluate([scope])\n   * @param {string} expr\n   * @return {{evaluate: function}} code\n   * @throws {Error}\n   */\n\n\n  Parser.prototype.compile = function (expr) {\n    throw new Error('Parser.compile is deprecated. Use math.compile instead.');\n  };\n  /**\n   * Parse and evaluate the given expression\n   * @param {string} expr   A string containing an expression, for example \"2+3\"\n   * @return {*} result     The result, or undefined when the expression was empty\n   * @throws {Error}\n   */\n\n\n  Parser.prototype.evaluate = function (expr) {\n    // TODO: validate arguments\n    return parse(expr).compile().evaluate(this.scope);\n  };\n  /**\n   * Parse and evaluate the given expression\n   * @param {string} expr   A string containing an expression, for example \"2+3\"\n   * @return {*} result     The result, or undefined when the expression was empty\n   * @throws {Error}\n   */\n  // TODO: Deprecated since v6.0.0. Clean up some day\n\n\n  Parser.prototype.eval = function (expr) {\n    (0, _log.warnOnce)('Method Parser.eval is renamed to Parser.evaluate. Please use the new method name.');\n    return this.evaluate(expr);\n  };\n  /**\n   * Get a variable (a function or variable) by name from the parsers scope.\n   * Returns undefined when not found\n   * @param {string} name\n   * @return {* | undefined} value\n   */\n\n\n  Parser.prototype.get = function (name) {\n    // TODO: validate arguments\n    return name in this.scope ? (0, _customs.getSafeProperty)(this.scope, name) : undefined;\n  };\n  /**\n   * Get a map with all defined variables\n   * @return {Object} values\n   */\n\n\n  Parser.prototype.getAll = function () {\n    return (0, _object.extend)({}, this.scope);\n  };\n  /**\n   * Set a symbol (a function or variable) by name from the parsers scope.\n   * @param {string} name\n   * @param {* | undefined} value\n   */\n\n\n  Parser.prototype.set = function (name, value) {\n    // TODO: validate arguments\n    return (0, _customs.setSafeProperty)(this.scope, name, value);\n  };\n  /**\n   * Remove a variable from the parsers scope\n   * @param {string} name\n   */\n\n\n  Parser.prototype.remove = function (name) {\n    // TODO: validate arguments\n    delete this.scope[name];\n  };\n  /**\n   * Clear the scope with variables and functions\n   */\n\n\n  Parser.prototype.clear = function () {\n    for (var _name in this.scope) {\n      if ((0, _object.hasOwnProperty)(this.scope, _name)) {\n        delete this.scope[_name];\n      }\n    }\n  };\n\n  return Parser;\n}, {\n  isClass: true\n});\nexports.createParserClass = createParserClass;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":4,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":5,"column":0}},{"name":"name","generated":{"line":16,"column":4},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":5,"column":4}},{"generated":{"line":16,"column":8},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":5,"column":8}},{"generated":{"line":16,"column":11},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":5,"column":11}},{"generated":{"line":16,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":5,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":6,"column":0}},{"name":"dependencies","generated":{"line":17,"column":4},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":6,"column":4}},{"generated":{"line":17,"column":16},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":6,"column":16}},{"generated":{"line":17,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":6,"column":19}},{"generated":{"line":17,"column":20},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":6,"column":20}},{"generated":{"line":17,"column":27},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":6,"column":19}},{"generated":{"line":17,"column":28},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":6,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":7,"column":7}},{"name":"createParserClass","generated":{"line":18,"column":4},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":7,"column":11}},{"generated":{"line":18,"column":21},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":7,"column":28}},{"generated":{"line":19,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":8,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":9,"column":0}},{"name":"name","generated":{"line":20,"column":22},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":9,"column":8}},{"generated":{"line":20,"column":26},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":9,"column":0}},{"name":"dependencies","generated":{"line":20,"column":28},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":9,"column":14}},{"generated":{"line":20,"column":40},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":9,"column":0}},{"generated":{"line":20,"column":42},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":9,"column":28}},{"name":"_ref","generated":{"line":20,"column":52},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":9,"column":38}},{"generated":{"line":20,"column":56},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":9,"column":28}},{"generated":{"line":20,"column":58},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":9,"column":44}},{"generated":{"line":21,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":10,"column":2}},{"name":"parse","generated":{"line":21,"column":6},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":10,"column":6}},{"generated":{"line":21,"column":11},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":10,"column":11}},{"name":"_ref","generated":{"line":21,"column":14},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":10,"column":14}},{"generated":{"line":21,"column":18},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":10,"column":18}},{"name":"parse","generated":{"line":21,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":10,"column":19}},{"generated":{"line":21,"column":24},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":10,"column":2}},{"generated":{"line":22,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":12,"column":2}},{"generated":{"line":71,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":60,"column":2}},{"name":"Parser","generated":{"line":71,"column":11},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":60,"column":11}},{"generated":{"line":71,"column":17},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":60,"column":2}},{"generated":{"line":71,"column":20},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":60,"column":20}},{"generated":{"line":72,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":61,"column":4}},{"generated":{"line":72,"column":8},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":61,"column":8}},{"generated":{"line":72,"column":10},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":61,"column":10}},{"name":"Parser","generated":{"line":72,"column":26},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":61,"column":26}},{"generated":{"line":72,"column":32},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":61,"column":8}},{"generated":{"line":72,"column":33},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":61,"column":4}},{"generated":{"line":72,"column":35},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":61,"column":35}},{"generated":{"line":73,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":62,"column":6}},{"generated":{"line":73,"column":12},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":62,"column":12}},{"name":"SyntaxError","generated":{"line":73,"column":16},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":62,"column":16}},{"generated":{"line":73,"column":27},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":62,"column":12}},{"generated":{"line":73,"column":28},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":62,"column":28}},{"generated":{"line":73,"column":78},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":62,"column":12}},{"generated":{"line":73,"column":79},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":62,"column":6}},{"generated":{"line":74,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":63,"column":5}},{"generated":{"line":76,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":65,"column":4}},{"name":"scope","generated":{"line":76,"column":9},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":65,"column":9}},{"generated":{"line":76,"column":14},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":65,"column":4}},{"generated":{"line":76,"column":17},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":65,"column":17}},{"generated":{"line":76,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":65,"column":4}},{"generated":{"line":77,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":66,"column":3}},{"generated":{"line":78,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":67,"column":2}},{"name":"Parser","generated":{"line":83,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":72,"column":2}},{"name":"Parser","generated":{"line":83,"column":2},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":72,"column":2}},{"generated":{"line":83,"column":8},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":72,"column":8}},{"name":"prototype","generated":{"line":83,"column":9},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":72,"column":9}},{"generated":{"line":83,"column":18},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":72,"column":2}},{"name":"type","generated":{"line":83,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":72,"column":19}},{"generated":{"line":83,"column":23},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":72,"column":2}},{"generated":{"line":83,"column":26},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":72,"column":26}},{"generated":{"line":83,"column":34},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":72,"column":2}},{"name":"Parser","generated":{"line":84,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":73,"column":2}},{"name":"Parser","generated":{"line":84,"column":2},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":73,"column":2}},{"generated":{"line":84,"column":8},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":73,"column":8}},{"name":"prototype","generated":{"line":84,"column":9},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":73,"column":9}},{"generated":{"line":84,"column":18},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":73,"column":2}},{"name":"isParser","generated":{"line":84,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":73,"column":19}},{"generated":{"line":84,"column":27},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":73,"column":2}},{"generated":{"line":84,"column":30},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":73,"column":30}},{"generated":{"line":84,"column":34},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":73,"column":2}},{"generated":{"line":85,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":74,"column":2}},{"name":"Parser","generated":{"line":94,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":83,"column":2}},{"name":"Parser","generated":{"line":94,"column":2},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":83,"column":2}},{"generated":{"line":94,"column":8},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":83,"column":8}},{"name":"prototype","generated":{"line":94,"column":9},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":83,"column":9}},{"generated":{"line":94,"column":18},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":83,"column":2}},{"name":"parse","generated":{"line":94,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":83,"column":19}},{"generated":{"line":94,"column":24},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":83,"column":2}},{"generated":{"line":94,"column":27},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":83,"column":27}},{"name":"expr","generated":{"line":94,"column":37},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":83,"column":37}},{"generated":{"line":94,"column":41},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":83,"column":27}},{"generated":{"line":94,"column":43},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":83,"column":43}},{"generated":{"line":95,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":84,"column":4}},{"generated":{"line":95,"column":10},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":84,"column":10}},{"name":"Error","generated":{"line":95,"column":14},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":84,"column":14}},{"generated":{"line":95,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":84,"column":10}},{"generated":{"line":95,"column":20},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":84,"column":20}},{"generated":{"line":95,"column":73},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":84,"column":10}},{"generated":{"line":95,"column":74},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":84,"column":4}},{"generated":{"line":96,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":85,"column":3}},{"generated":{"line":96,"column":3},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":83,"column":2}},{"generated":{"line":97,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":86,"column":2}},{"name":"Parser","generated":{"line":106,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":95,"column":2}},{"name":"Parser","generated":{"line":106,"column":2},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":95,"column":2}},{"generated":{"line":106,"column":8},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":95,"column":8}},{"name":"prototype","generated":{"line":106,"column":9},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":95,"column":9}},{"generated":{"line":106,"column":18},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":95,"column":2}},{"name":"compile","generated":{"line":106,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":95,"column":19}},{"generated":{"line":106,"column":26},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":95,"column":2}},{"generated":{"line":106,"column":29},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":95,"column":29}},{"name":"expr","generated":{"line":106,"column":39},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":95,"column":39}},{"generated":{"line":106,"column":43},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":95,"column":29}},{"generated":{"line":106,"column":45},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":95,"column":45}},{"generated":{"line":107,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":96,"column":4}},{"generated":{"line":107,"column":10},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":96,"column":10}},{"name":"Error","generated":{"line":107,"column":14},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":96,"column":14}},{"generated":{"line":107,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":96,"column":10}},{"generated":{"line":107,"column":20},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":96,"column":20}},{"generated":{"line":107,"column":77},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":96,"column":10}},{"generated":{"line":107,"column":78},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":96,"column":4}},{"generated":{"line":108,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":97,"column":3}},{"generated":{"line":108,"column":3},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":95,"column":2}},{"generated":{"line":109,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":98,"column":2}},{"name":"Parser","generated":{"line":117,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":106,"column":2}},{"name":"Parser","generated":{"line":117,"column":2},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":106,"column":2}},{"generated":{"line":117,"column":8},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":106,"column":8}},{"name":"prototype","generated":{"line":117,"column":9},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":106,"column":9}},{"generated":{"line":117,"column":18},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":106,"column":2}},{"name":"evaluate","generated":{"line":117,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":106,"column":19}},{"generated":{"line":117,"column":27},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":106,"column":2}},{"generated":{"line":117,"column":30},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":106,"column":30}},{"name":"expr","generated":{"line":117,"column":40},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":106,"column":40}},{"generated":{"line":117,"column":44},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":106,"column":30}},{"generated":{"line":117,"column":46},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":106,"column":46}},{"generated":{"line":118,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":107,"column":4}},{"generated":{"line":119,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":108,"column":4}},{"name":"parse","generated":{"line":119,"column":11},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":108,"column":11}},{"generated":{"line":119,"column":16},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":108,"column":16}},{"name":"expr","generated":{"line":119,"column":17},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":108,"column":17}},{"generated":{"line":119,"column":21},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":108,"column":16}},{"generated":{"line":119,"column":22},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":108,"column":11}},{"name":"compile","generated":{"line":119,"column":23},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":108,"column":23}},{"generated":{"line":119,"column":30},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":108,"column":11}},{"name":"evaluate","generated":{"line":119,"column":33},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":108,"column":33}},{"generated":{"line":119,"column":41},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":108,"column":11}},{"generated":{"line":119,"column":42},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":108,"column":42}},{"name":"scope","generated":{"line":119,"column":47},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":108,"column":47}},{"generated":{"line":119,"column":52},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":108,"column":11}},{"generated":{"line":119,"column":53},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":108,"column":4}},{"generated":{"line":120,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":109,"column":3}},{"generated":{"line":120,"column":3},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":106,"column":2}},{"generated":{"line":121,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":110,"column":2}},{"generated":{"line":127,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":116,"column":2}},{"name":"Parser","generated":{"line":130,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":119,"column":2}},{"name":"Parser","generated":{"line":130,"column":2},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":119,"column":2}},{"generated":{"line":130,"column":8},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":119,"column":8}},{"name":"prototype","generated":{"line":130,"column":9},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":119,"column":9}},{"generated":{"line":130,"column":18},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":119,"column":2}},{"name":"eval","generated":{"line":130,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":119,"column":19}},{"generated":{"line":130,"column":23},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":119,"column":2}},{"generated":{"line":130,"column":26},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":119,"column":26}},{"name":"expr","generated":{"line":130,"column":36},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":119,"column":36}},{"generated":{"line":130,"column":40},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":119,"column":26}},{"generated":{"line":130,"column":42},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":119,"column":42}},{"generated":{"line":131,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":120,"column":4}},{"generated":{"line":131,"column":23},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":120,"column":13}},{"generated":{"line":131,"column":106},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":120,"column":4}},{"generated":{"line":132,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":121,"column":4}},{"generated":{"line":132,"column":11},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":121,"column":11}},{"name":"evaluate","generated":{"line":132,"column":16},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":121,"column":16}},{"generated":{"line":132,"column":24},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":121,"column":11}},{"name":"expr","generated":{"line":132,"column":25},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":121,"column":25}},{"generated":{"line":132,"column":29},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":121,"column":11}},{"generated":{"line":132,"column":30},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":121,"column":4}},{"generated":{"line":133,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":122,"column":3}},{"generated":{"line":133,"column":3},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":119,"column":2}},{"generated":{"line":134,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":123,"column":2}},{"name":"Parser","generated":{"line":142,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":131,"column":2}},{"name":"Parser","generated":{"line":142,"column":2},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":131,"column":2}},{"generated":{"line":142,"column":8},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":131,"column":8}},{"name":"prototype","generated":{"line":142,"column":9},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":131,"column":9}},{"generated":{"line":142,"column":18},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":131,"column":2}},{"name":"get","generated":{"line":142,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":131,"column":19}},{"generated":{"line":142,"column":22},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":131,"column":2}},{"generated":{"line":142,"column":25},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":131,"column":25}},{"name":"name","generated":{"line":142,"column":35},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":131,"column":35}},{"generated":{"line":142,"column":39},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":131,"column":25}},{"generated":{"line":142,"column":41},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":131,"column":41}},{"generated":{"line":143,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":132,"column":4}},{"generated":{"line":144,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":133,"column":4}},{"name":"name","generated":{"line":144,"column":11},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":133,"column":11}},{"generated":{"line":144,"column":15},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":133,"column":15}},{"generated":{"line":144,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":133,"column":19}},{"name":"scope","generated":{"line":144,"column":24},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":133,"column":24}},{"generated":{"line":144,"column":29},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":133,"column":11}},{"generated":{"line":144,"column":32},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":133,"column":32}},{"generated":{"line":144,"column":62},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":133,"column":48}},{"name":"scope","generated":{"line":144,"column":67},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":133,"column":53}},{"generated":{"line":144,"column":72},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":133,"column":32}},{"name":"name","generated":{"line":144,"column":74},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":133,"column":60}},{"generated":{"line":144,"column":78},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":133,"column":32}},{"generated":{"line":144,"column":79},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":133,"column":11}},{"name":"undefined","generated":{"line":144,"column":82},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":133,"column":68}},{"generated":{"line":144,"column":91},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":133,"column":4}},{"generated":{"line":145,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":134,"column":3}},{"generated":{"line":145,"column":3},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":131,"column":2}},{"generated":{"line":146,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":135,"column":2}},{"name":"Parser","generated":{"line":152,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":141,"column":2}},{"name":"Parser","generated":{"line":152,"column":2},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":141,"column":2}},{"generated":{"line":152,"column":8},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":141,"column":8}},{"name":"prototype","generated":{"line":152,"column":9},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":141,"column":9}},{"generated":{"line":152,"column":18},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":141,"column":2}},{"name":"getAll","generated":{"line":152,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":141,"column":19}},{"generated":{"line":152,"column":25},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":141,"column":2}},{"generated":{"line":152,"column":28},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":141,"column":28}},{"generated":{"line":152,"column":40},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":141,"column":40}},{"generated":{"line":153,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":142,"column":4}},{"generated":{"line":153,"column":11},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":142,"column":11}},{"generated":{"line":153,"column":31},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":142,"column":18}},{"generated":{"line":153,"column":33},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":142,"column":11}},{"generated":{"line":153,"column":35},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":142,"column":22}},{"name":"scope","generated":{"line":153,"column":40},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":142,"column":27}},{"generated":{"line":153,"column":45},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":142,"column":11}},{"generated":{"line":153,"column":46},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":142,"column":4}},{"generated":{"line":154,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":143,"column":3}},{"generated":{"line":154,"column":3},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":141,"column":2}},{"generated":{"line":155,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":144,"column":2}},{"name":"Parser","generated":{"line":162,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":151,"column":2}},{"name":"Parser","generated":{"line":162,"column":2},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":151,"column":2}},{"generated":{"line":162,"column":8},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":151,"column":8}},{"name":"prototype","generated":{"line":162,"column":9},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":151,"column":9}},{"generated":{"line":162,"column":18},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":151,"column":2}},{"name":"set","generated":{"line":162,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":151,"column":19}},{"generated":{"line":162,"column":22},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":151,"column":2}},{"generated":{"line":162,"column":25},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":151,"column":25}},{"name":"name","generated":{"line":162,"column":35},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":151,"column":35}},{"generated":{"line":162,"column":39},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":151,"column":25}},{"name":"value","generated":{"line":162,"column":41},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":151,"column":41}},{"generated":{"line":162,"column":46},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":151,"column":25}},{"generated":{"line":162,"column":48},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":151,"column":48}},{"generated":{"line":163,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":152,"column":4}},{"generated":{"line":164,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":153,"column":4}},{"generated":{"line":164,"column":11},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":153,"column":11}},{"generated":{"line":164,"column":41},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":153,"column":27}},{"name":"scope","generated":{"line":164,"column":46},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":153,"column":32}},{"generated":{"line":164,"column":51},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":153,"column":11}},{"name":"name","generated":{"line":164,"column":53},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":153,"column":39}},{"generated":{"line":164,"column":57},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":153,"column":11}},{"name":"value","generated":{"line":164,"column":59},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":153,"column":45}},{"generated":{"line":164,"column":64},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":153,"column":11}},{"generated":{"line":164,"column":65},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":153,"column":4}},{"generated":{"line":165,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":154,"column":3}},{"generated":{"line":165,"column":3},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":151,"column":2}},{"generated":{"line":166,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":155,"column":2}},{"name":"Parser","generated":{"line":172,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":161,"column":2}},{"name":"Parser","generated":{"line":172,"column":2},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":161,"column":2}},{"generated":{"line":172,"column":8},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":161,"column":8}},{"name":"prototype","generated":{"line":172,"column":9},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":161,"column":9}},{"generated":{"line":172,"column":18},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":161,"column":2}},{"name":"remove","generated":{"line":172,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":161,"column":19}},{"generated":{"line":172,"column":25},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":161,"column":2}},{"generated":{"line":172,"column":28},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":161,"column":28}},{"name":"name","generated":{"line":172,"column":38},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":161,"column":38}},{"generated":{"line":172,"column":42},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":161,"column":28}},{"generated":{"line":172,"column":44},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":161,"column":44}},{"generated":{"line":173,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":162,"column":4}},{"generated":{"line":174,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":163,"column":4}},{"generated":{"line":174,"column":11},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":163,"column":11}},{"name":"scope","generated":{"line":174,"column":16},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":163,"column":16}},{"generated":{"line":174,"column":21},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":163,"column":11}},{"name":"name","generated":{"line":174,"column":22},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":163,"column":22}},{"generated":{"line":174,"column":26},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":163,"column":11}},{"generated":{"line":174,"column":27},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":163,"column":4}},{"generated":{"line":175,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":164,"column":3}},{"generated":{"line":175,"column":3},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":161,"column":2}},{"generated":{"line":176,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":165,"column":2}},{"name":"Parser","generated":{"line":181,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":170,"column":2}},{"name":"Parser","generated":{"line":181,"column":2},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":170,"column":2}},{"generated":{"line":181,"column":8},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":170,"column":8}},{"name":"prototype","generated":{"line":181,"column":9},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":170,"column":9}},{"generated":{"line":181,"column":18},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":170,"column":2}},{"name":"clear","generated":{"line":181,"column":19},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":170,"column":19}},{"generated":{"line":181,"column":24},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":170,"column":2}},{"generated":{"line":181,"column":27},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":170,"column":27}},{"generated":{"line":181,"column":39},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":170,"column":39}},{"generated":{"line":182,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":171,"column":4}},{"generated":{"line":182,"column":9},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":171,"column":9}},{"name":"_name","generated":{"line":182,"column":13},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":171,"column":13}},{"generated":{"line":182,"column":18},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":171,"column":4}},{"generated":{"line":182,"column":22},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":171,"column":22}},{"name":"scope","generated":{"line":182,"column":27},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":171,"column":27}},{"generated":{"line":182,"column":32},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":171,"column":4}},{"generated":{"line":182,"column":34},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":171,"column":34}},{"generated":{"line":183,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":172,"column":6}},{"generated":{"line":183,"column":10},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":172,"column":10}},{"generated":{"line":183,"column":38},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":172,"column":25}},{"name":"scope","generated":{"line":183,"column":43},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":172,"column":30}},{"generated":{"line":183,"column":48},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":172,"column":10}},{"name":"_name","generated":{"line":183,"column":50},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":172,"column":37}},{"generated":{"line":183,"column":55},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":172,"column":10}},{"generated":{"line":183,"column":56},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":172,"column":6}},{"generated":{"line":183,"column":58},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":172,"column":45}},{"generated":{"line":184,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":173,"column":8}},{"generated":{"line":184,"column":15},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":173,"column":15}},{"name":"scope","generated":{"line":184,"column":20},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":173,"column":20}},{"generated":{"line":184,"column":25},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":173,"column":15}},{"name":"_name","generated":{"line":184,"column":26},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":173,"column":26}},{"generated":{"line":184,"column":31},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":173,"column":15}},{"generated":{"line":184,"column":32},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":173,"column":8}},{"generated":{"line":185,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":174,"column":7}},{"generated":{"line":186,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":175,"column":5}},{"generated":{"line":187,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":176,"column":3}},{"generated":{"line":187,"column":3},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":170,"column":2}},{"generated":{"line":189,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":178,"column":2}},{"name":"Parser","generated":{"line":189,"column":9},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":178,"column":9}},{"generated":{"line":189,"column":15},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":178,"column":2}},{"generated":{"line":190,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":179,"column":1}},{"generated":{"line":190,"column":1},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":9,"column":0}},{"generated":{"line":190,"column":3},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":179,"column":3}},{"name":"isClass","generated":{"line":191,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":180,"column":2}},{"name":"isClass","generated":{"line":191,"column":2},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":180,"column":2}},{"generated":{"line":191,"column":9},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":180,"column":9}},{"generated":{"line":191,"column":11},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":180,"column":11}},{"generated":{"line":192,"column":0},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":179,"column":3}},{"generated":{"line":192,"column":1},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":9,"column":0}},{"generated":{"line":192,"column":2},"source":"node_modules/mathjs/es/expression/Parser.js","original":{"line":7,"column":7}}],"sources":{"node_modules/mathjs/es/expression/Parser.js":"import { factory } from '../utils/factory';\nimport { extend, hasOwnProperty } from '../utils/object';\nimport { getSafeProperty, setSafeProperty } from '../utils/customs';\nimport { warnOnce } from '../utils/log';\nvar name = 'Parser';\nvar dependencies = ['parse'];\nexport var createParserClass =\n/* #__PURE__ */\nfactory(name, dependencies, function (_ref) {\n  var parse = _ref.parse;\n\n  /**\n   * @constructor Parser\n   * Parser contains methods to evaluate or parse expressions, and has a number\n   * of convenience methods to get, set, and remove variables from memory. Parser\n   * keeps a scope containing variables in memory, which is used for all\n   * evaluations.\n   *\n   * Methods:\n   *    const result = parser.evaluate(expr)  // evaluate an expression\n   *    const value = parser.get(name)        // retrieve a variable from the parser\n   *    const values = parser.getAll()        // retrieve all defined variables\n   *    parser.set(name, value)               // set a variable in the parser\n   *    parser.remove(name)                   // clear a variable from the\n   *                                          // parsers scope\n   *    parser.clear()                        // clear the parsers scope\n   *\n   * Example usage:\n   *    const parser = new Parser()\n   *    // Note: there is a convenience method which can be used instead:\n   *    // const parser = new math.parser()\n   *\n   *    // evaluate expressions\n   *    parser.evaluate('sqrt(3^2 + 4^2)')        // 5\n   *    parser.evaluate('sqrt(-4)')               // 2i\n   *    parser.evaluate('2 inch in cm')           // 5.08 cm\n   *    parser.evaluate('cos(45 deg)')            // 0.7071067811865476\n   *\n   *    // define variables and functions\n   *    parser.evaluate('x = 7 / 2')              // 3.5\n   *    parser.evaluate('x + 3')                  // 6.5\n   *    parser.evaluate('function f(x, y) = x^y') // f(x, y)\n   *    parser.evaluate('f(2, 3)')                // 8\n   *\n   *    // get and set variables and functions\n   *    const x = parser.get('x')                 // 7\n   *    const f = parser.get('f')                 // function\n   *    const g = f(3, 2)                         // 9\n   *    parser.set('h', 500)\n   *    const i = parser.evaluate('h / 2')        // 250\n   *    parser.set('hello', function (name) {\n   *        return 'hello, ' + name + '!'\n   *    })\n   *    parser.evaluate('hello(\"user\")')          // \"hello, user!\"\n   *\n   *    // clear defined functions and variables\n   *    parser.clear()\n   *\n   */\n  function Parser() {\n    if (!(this instanceof Parser)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    this.scope = {};\n  }\n  /**\n   * Attach type information\n   */\n\n\n  Parser.prototype.type = 'Parser';\n  Parser.prototype.isParser = true;\n  /**\n   * Parse an expression and return the parsed function node.\n   * The node tree can be compiled via `code = node.compile(math)`,\n   * and the compiled code can be executed as `code.evaluate([scope])`\n   * @param {string} expr\n   * @return {Node} node\n   * @throws {Error}\n   */\n\n  Parser.prototype.parse = function (expr) {\n    throw new Error('Parser.parse is deprecated. Use math.parse instead.');\n  };\n  /**\n   * Parse and compile an expression, return the compiled javascript code.\n   * The node can be evaluated via code.evaluate([scope])\n   * @param {string} expr\n   * @return {{evaluate: function}} code\n   * @throws {Error}\n   */\n\n\n  Parser.prototype.compile = function (expr) {\n    throw new Error('Parser.compile is deprecated. Use math.compile instead.');\n  };\n  /**\n   * Parse and evaluate the given expression\n   * @param {string} expr   A string containing an expression, for example \"2+3\"\n   * @return {*} result     The result, or undefined when the expression was empty\n   * @throws {Error}\n   */\n\n\n  Parser.prototype.evaluate = function (expr) {\n    // TODO: validate arguments\n    return parse(expr).compile().evaluate(this.scope);\n  };\n  /**\n   * Parse and evaluate the given expression\n   * @param {string} expr   A string containing an expression, for example \"2+3\"\n   * @return {*} result     The result, or undefined when the expression was empty\n   * @throws {Error}\n   */\n  // TODO: Deprecated since v6.0.0. Clean up some day\n\n\n  Parser.prototype.eval = function (expr) {\n    warnOnce('Method Parser.eval is renamed to Parser.evaluate. Please use the new method name.');\n    return this.evaluate(expr);\n  };\n  /**\n   * Get a variable (a function or variable) by name from the parsers scope.\n   * Returns undefined when not found\n   * @param {string} name\n   * @return {* | undefined} value\n   */\n\n\n  Parser.prototype.get = function (name) {\n    // TODO: validate arguments\n    return name in this.scope ? getSafeProperty(this.scope, name) : undefined;\n  };\n  /**\n   * Get a map with all defined variables\n   * @return {Object} values\n   */\n\n\n  Parser.prototype.getAll = function () {\n    return extend({}, this.scope);\n  };\n  /**\n   * Set a symbol (a function or variable) by name from the parsers scope.\n   * @param {string} name\n   * @param {* | undefined} value\n   */\n\n\n  Parser.prototype.set = function (name, value) {\n    // TODO: validate arguments\n    return setSafeProperty(this.scope, name, value);\n  };\n  /**\n   * Remove a variable from the parsers scope\n   * @param {string} name\n   */\n\n\n  Parser.prototype.remove = function (name) {\n    // TODO: validate arguments\n    delete this.scope[name];\n  };\n  /**\n   * Clear the scope with variables and functions\n   */\n\n\n  Parser.prototype.clear = function () {\n    for (var _name in this.scope) {\n      if (hasOwnProperty(this.scope, _name)) {\n        delete this.scope[_name];\n      }\n    }\n  };\n\n  return Parser;\n}, {\n  isClass: true\n});"},"lineCount":null}},"error":null,"hash":"7d8bf8c93cbc07d619a792a0031218ad","cacheData":{"env":{}}}