{"id":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","dependencies":[{"name":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\package.json","includedInParent":true,"mtime":1579751683112},{"name":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\node_modules\\mathjs\\package.json","includedInParent":true,"mtime":1579751683012},{"name":"../../../utils/is","loc":{"line":1,"column":29},"parent":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\node_modules\\mathjs\\es\\expression\\transform\\utils\\compileInlineExpression.js","resolved":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\node_modules\\mathjs\\es\\utils\\is.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.compileInlineExpression = compileInlineExpression;\n\nvar _is = require(\"../../../utils/is\");\n\n/**\n * Compile an inline expression like \"x > 0\"\n * @param {Node} expression\n * @param {Object} math\n * @param {Object} scope\n * @return {function} Returns a function with one argument which fills in the\n *                    undefined variable (like \"x\") and evaluates the expression\n */\nfunction compileInlineExpression(expression, math, scope) {\n  // find an undefined symbol\n  var symbol = expression.filter(function (node) {\n    return (0, _is.isSymbolNode)(node) && !(node.name in math) && !(node.name in scope);\n  })[0];\n\n  if (!symbol) {\n    throw new Error('No undefined variable found in inline expression \"' + expression + '\"');\n  } // create a test function for this equation\n\n\n  var name = symbol.name; // variable name\n\n  var subScope = Object.create(scope);\n  var eq = expression.compile();\n  return function inlineExpression(x) {\n    subScope[name] = x;\n    return eq.evaluate(subScope);\n  };\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":2,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":11,"column":7}},{"name":"compileInlineExpression","generated":{"line":18,"column":9},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":11,"column":16}},{"generated":{"line":18,"column":32},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":11,"column":7}},{"name":"expression","generated":{"line":18,"column":33},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":11,"column":40}},{"generated":{"line":18,"column":43},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":11,"column":7}},{"name":"math","generated":{"line":18,"column":45},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":11,"column":52}},{"generated":{"line":18,"column":49},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":11,"column":7}},{"name":"scope","generated":{"line":18,"column":51},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":11,"column":58}},{"generated":{"line":18,"column":56},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":11,"column":7}},{"generated":{"line":18,"column":58},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":11,"column":65}},{"generated":{"line":19,"column":0},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":12,"column":2}},{"generated":{"line":20,"column":0},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":13,"column":2}},{"name":"symbol","generated":{"line":20,"column":6},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":13,"column":6}},{"generated":{"line":20,"column":12},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":13,"column":12}},{"name":"expression","generated":{"line":20,"column":15},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":13,"column":15}},{"generated":{"line":20,"column":25},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":13,"column":25}},{"name":"filter","generated":{"line":20,"column":26},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":13,"column":26}},{"generated":{"line":20,"column":32},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":13,"column":15}},{"generated":{"line":20,"column":33},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":13,"column":33}},{"name":"node","generated":{"line":20,"column":43},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":13,"column":43}},{"generated":{"line":20,"column":47},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":13,"column":33}},{"generated":{"line":20,"column":49},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":13,"column":49}},{"generated":{"line":21,"column":0},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":14,"column":4}},{"generated":{"line":21,"column":11},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":14,"column":11}},{"name":"node","generated":{"line":21,"column":33},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":14,"column":24}},{"generated":{"line":21,"column":37},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":14,"column":11}},{"generated":{"line":21,"column":42},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":14,"column":33}},{"name":"node","generated":{"line":21,"column":44},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":14,"column":35}},{"generated":{"line":21,"column":48},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":14,"column":39}},{"name":"name","generated":{"line":21,"column":49},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":14,"column":40}},{"generated":{"line":21,"column":53},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":14,"column":35}},{"name":"math","generated":{"line":21,"column":57},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":14,"column":48}},{"generated":{"line":21,"column":61},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":14,"column":33}},{"generated":{"line":21,"column":62},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":14,"column":11}},{"generated":{"line":21,"column":66},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":14,"column":57}},{"name":"node","generated":{"line":21,"column":68},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":14,"column":59}},{"generated":{"line":21,"column":72},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":14,"column":63}},{"name":"name","generated":{"line":21,"column":73},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":14,"column":64}},{"generated":{"line":21,"column":77},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":14,"column":59}},{"name":"scope","generated":{"line":21,"column":81},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":14,"column":72}},{"generated":{"line":21,"column":86},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":14,"column":57}},{"generated":{"line":21,"column":87},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":14,"column":4}},{"generated":{"line":22,"column":0},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":15,"column":3}},{"generated":{"line":22,"column":3},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":13,"column":15}},{"generated":{"line":22,"column":5},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":15,"column":5}},{"generated":{"line":22,"column":6},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":13,"column":15}},{"generated":{"line":22,"column":7},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":13,"column":2}},{"generated":{"line":24,"column":0},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":17,"column":2}},{"generated":{"line":24,"column":6},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":17,"column":6}},{"name":"symbol","generated":{"line":24,"column":7},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":17,"column":7}},{"generated":{"line":24,"column":13},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":17,"column":2}},{"generated":{"line":24,"column":15},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":17,"column":15}},{"generated":{"line":25,"column":0},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":18,"column":4}},{"generated":{"line":25,"column":10},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":18,"column":10}},{"name":"Error","generated":{"line":25,"column":14},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":18,"column":14}},{"generated":{"line":25,"column":19},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":18,"column":10}},{"generated":{"line":25,"column":20},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":18,"column":20}},{"name":"expression","generated":{"line":25,"column":75},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":18,"column":75}},{"generated":{"line":25,"column":85},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":18,"column":20}},{"generated":{"line":25,"column":88},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":18,"column":88}},{"generated":{"line":25,"column":91},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":18,"column":10}},{"generated":{"line":25,"column":92},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":18,"column":4}},{"generated":{"line":26,"column":0},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":19,"column":3}},{"generated":{"line":26,"column":3},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":11,"column":65}},{"generated":{"line":26,"column":4},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":19,"column":4}},{"generated":{"line":29,"column":0},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":22,"column":2}},{"name":"name","generated":{"line":29,"column":6},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":22,"column":6}},{"generated":{"line":29,"column":10},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":22,"column":10}},{"name":"symbol","generated":{"line":29,"column":13},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":22,"column":13}},{"generated":{"line":29,"column":19},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":22,"column":19}},{"name":"name","generated":{"line":29,"column":20},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":22,"column":20}},{"generated":{"line":29,"column":24},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":22,"column":2}},{"generated":{"line":29,"column":25},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":11,"column":65}},{"generated":{"line":29,"column":26},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":22,"column":26}},{"generated":{"line":31,"column":0},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":24,"column":2}},{"name":"subScope","generated":{"line":31,"column":6},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":24,"column":6}},{"generated":{"line":31,"column":14},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":24,"column":14}},{"name":"Object","generated":{"line":31,"column":17},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":24,"column":17}},{"generated":{"line":31,"column":23},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":24,"column":23}},{"name":"create","generated":{"line":31,"column":24},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":24,"column":24}},{"generated":{"line":31,"column":30},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":24,"column":17}},{"name":"scope","generated":{"line":31,"column":31},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":24,"column":31}},{"generated":{"line":31,"column":36},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":24,"column":17}},{"generated":{"line":31,"column":37},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":24,"column":2}},{"generated":{"line":32,"column":0},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":25,"column":2}},{"name":"eq","generated":{"line":32,"column":6},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":25,"column":6}},{"generated":{"line":32,"column":8},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":25,"column":8}},{"name":"expression","generated":{"line":32,"column":11},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":25,"column":11}},{"generated":{"line":32,"column":21},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":25,"column":21}},{"name":"compile","generated":{"line":32,"column":22},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":25,"column":22}},{"generated":{"line":32,"column":29},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":25,"column":11}},{"generated":{"line":32,"column":31},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":25,"column":2}},{"generated":{"line":33,"column":0},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":26,"column":2}},{"generated":{"line":33,"column":9},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":26,"column":9}},{"name":"inlineExpression","generated":{"line":33,"column":18},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":26,"column":18}},{"generated":{"line":33,"column":34},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":26,"column":9}},{"name":"x","generated":{"line":33,"column":35},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":26,"column":35}},{"generated":{"line":33,"column":36},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":26,"column":9}},{"generated":{"line":33,"column":38},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":26,"column":38}},{"name":"subScope","generated":{"line":34,"column":0},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":27,"column":4}},{"name":"subScope","generated":{"line":34,"column":4},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":27,"column":4}},{"generated":{"line":34,"column":12},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":27,"column":12}},{"name":"name","generated":{"line":34,"column":13},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":27,"column":13}},{"generated":{"line":34,"column":17},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":27,"column":12}},{"generated":{"line":34,"column":18},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":27,"column":4}},{"name":"x","generated":{"line":34,"column":21},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":27,"column":21}},{"generated":{"line":34,"column":22},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":27,"column":4}},{"generated":{"line":35,"column":0},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":28,"column":4}},{"name":"eq","generated":{"line":35,"column":11},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":28,"column":11}},{"generated":{"line":35,"column":13},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":28,"column":13}},{"name":"evaluate","generated":{"line":35,"column":14},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":28,"column":14}},{"generated":{"line":35,"column":22},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":28,"column":11}},{"name":"subScope","generated":{"line":35,"column":23},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":28,"column":23}},{"generated":{"line":35,"column":31},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":28,"column":11}},{"generated":{"line":35,"column":32},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":28,"column":4}},{"generated":{"line":36,"column":0},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":29,"column":3}},{"generated":{"line":36,"column":3},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":26,"column":2}},{"generated":{"line":37,"column":0},"source":"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js","original":{"line":30,"column":1}}],"sources":{"node_modules/mathjs/es/expression/transform/utils/compileInlineExpression.js":"import { isSymbolNode } from '../../../utils/is';\n/**\n * Compile an inline expression like \"x > 0\"\n * @param {Node} expression\n * @param {Object} math\n * @param {Object} scope\n * @return {function} Returns a function with one argument which fills in the\n *                    undefined variable (like \"x\") and evaluates the expression\n */\n\nexport function compileInlineExpression(expression, math, scope) {\n  // find an undefined symbol\n  var symbol = expression.filter(function (node) {\n    return isSymbolNode(node) && !(node.name in math) && !(node.name in scope);\n  })[0];\n\n  if (!symbol) {\n    throw new Error('No undefined variable found in inline expression \"' + expression + '\"');\n  } // create a test function for this equation\n\n\n  var name = symbol.name; // variable name\n\n  var subScope = Object.create(scope);\n  var eq = expression.compile();\n  return function inlineExpression(x) {\n    subScope[name] = x;\n    return eq.evaluate(subScope);\n  };\n}"},"lineCount":null}},"error":null,"hash":"581f6e96fe0bb0f6f40cb62d5528f382","cacheData":{"env":{}}}