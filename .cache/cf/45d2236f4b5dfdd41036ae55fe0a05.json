{"id":"node_modules/decimal.js/decimal.js","dependencies":[{"name":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\package.json","includedInParent":true,"mtime":1579751683112},{"name":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\node_modules\\decimal.js\\package.json","includedInParent":true,"mtime":1579751682411}],"generated":{"js":"var define;\n;(function (globalScope) {\r\n  'use strict';\r\n\r\n\r\n  /*\r\n   *  decimal.js v10.2.0\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js\r\n   *  Copyright (c) 2019 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Licence\r\n   */\r\n\r\n\r\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n    // The maximum exponent magnitude.\r\n    // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\r\n  var EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n    // The limit on the value of `precision`, and on the value of the first argument to\r\n    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n    MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n    // Base conversion alphabet.\r\n    NUMERALS = '0123456789abcdef',\r\n\r\n    // The natural logarithm of 10 (1025 digits).\r\n    LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\r\n\r\n    // Pi (1025 digits).\r\n    PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\r\n\r\n\r\n    // The initial configuration properties of the Decimal constructor.\r\n    DEFAULTS = {\r\n\r\n      // These values must be integers within the stated ranges (inclusive).\r\n      // Most of these values can be changed at run-time using the `Decimal.config` method.\r\n\r\n      // The maximum number of significant digits of the result of a calculation or base conversion.\r\n      // E.g. `Decimal.config({ precision: 20 });`\r\n      precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n      // The rounding mode used when rounding to `precision`.\r\n      //\r\n      // ROUND_UP         0 Away from zero.\r\n      // ROUND_DOWN       1 Towards zero.\r\n      // ROUND_CEIL       2 Towards +Infinity.\r\n      // ROUND_FLOOR      3 Towards -Infinity.\r\n      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      //\r\n      // E.g.\r\n      // `Decimal.rounding = 4;`\r\n      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n      rounding: 4,                           // 0 to 8\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\r\n      // FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN  6 The IEEE 754 remainder function.\r\n      // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\r\n      //\r\n      // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\r\n      // division (9) are commonly used for the modulus operation. The other rounding modes can also\r\n      // be used, but they may not give useful results.\r\n      modulo: 1,                             // 0 to 9\r\n\r\n      // The exponent value at and beneath which `toString` returns exponential notation.\r\n      // JavaScript numbers: -7\r\n      toExpNeg: -7,                          // 0 to -EXP_LIMIT\r\n\r\n      // The exponent value at and above which `toString` returns exponential notation.\r\n      // JavaScript numbers: 21\r\n      toExpPos:  21,                         // 0 to EXP_LIMIT\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // JavaScript numbers: -324  (5e-324)\r\n      minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // JavaScript numbers: 308  (1.7976931348623157e+308)\r\n      maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      crypto: false                          // true/false\r\n    },\r\n\r\n\r\n  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n    Decimal, inexact, noConflict, quadrant,\r\n    external = true,\r\n\r\n    decimalError = '[DecimalError] ',\r\n    invalidArgument = decimalError + 'Invalid argument: ',\r\n    precisionLimitExceeded = decimalError + 'Precision limit exceeded',\r\n    cryptoUnavailable = decimalError + 'crypto unavailable',\r\n\r\n    mathfloor = Math.floor,\r\n    mathpow = Math.pow,\r\n\r\n    isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\r\n    isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\r\n    isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\r\n    isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n    BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_SAFE_INTEGER = 9007199254740991,\r\n\r\n    LN10_PRECISION = LN10.length - 1,\r\n    PI_PRECISION = PI.length - 1,\r\n\r\n    // Decimal.prototype object\r\n    P = { name: '[object Decimal]' };\r\n\r\n\r\n  // Decimal prototype methods\r\n\r\n\r\n  /*\r\n   *  absoluteValue             abs\r\n   *  ceil\r\n   *  comparedTo                cmp\r\n   *  cosine                    cos\r\n   *  cubeRoot                  cbrt\r\n   *  decimalPlaces             dp\r\n   *  dividedBy                 div\r\n   *  dividedToIntegerBy        divToInt\r\n   *  equals                    eq\r\n   *  floor\r\n   *  greaterThan               gt\r\n   *  greaterThanOrEqualTo      gte\r\n   *  hyperbolicCosine          cosh\r\n   *  hyperbolicSine            sinh\r\n   *  hyperbolicTangent         tanh\r\n   *  inverseCosine             acos\r\n   *  inverseHyperbolicCosine   acosh\r\n   *  inverseHyperbolicSine     asinh\r\n   *  inverseHyperbolicTangent  atanh\r\n   *  inverseSine               asin\r\n   *  inverseTangent            atan\r\n   *  isFinite\r\n   *  isInteger                 isInt\r\n   *  isNaN\r\n   *  isNegative                isNeg\r\n   *  isPositive                isPos\r\n   *  isZero\r\n   *  lessThan                  lt\r\n   *  lessThanOrEqualTo         lte\r\n   *  logarithm                 log\r\n   *  [maximum]                 [max]\r\n   *  [minimum]                 [min]\r\n   *  minus                     sub\r\n   *  modulo                    mod\r\n   *  naturalExponential        exp\r\n   *  naturalLogarithm          ln\r\n   *  negated                   neg\r\n   *  plus                      add\r\n   *  precision                 sd\r\n   *  round\r\n   *  sine                      sin\r\n   *  squareRoot                sqrt\r\n   *  tangent                   tan\r\n   *  times                     mul\r\n   *  toBinary\r\n   *  toDecimalPlaces           toDP\r\n   *  toExponential\r\n   *  toFixed\r\n   *  toFraction\r\n   *  toHexadecimal             toHex\r\n   *  toNearest\r\n   *  toNumber\r\n   *  toOctal\r\n   *  toPower                   pow\r\n   *  toPrecision\r\n   *  toSignificantDigits       toSD\r\n   *  toString\r\n   *  truncated                 trunc\r\n   *  valueOf                   toJSON\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of this Decimal.\r\n   *\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of positive Infinity.\r\n   *\r\n   */\r\n  P.ceil = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if the value of this Decimal is greater than the value of `y`,\r\n   *  -1    if the value of this Decimal is less than the value of `y`,\r\n   *   0    if they have the same value,\r\n   *   NaN  if the value of either Decimal is NaN.\r\n   *\r\n   */\r\n  P.comparedTo = P.cmp = function (y) {\r\n    var i, j, xdL, ydL,\r\n      x = this,\r\n      xd = x.d,\r\n      yd = (y = new x.constructor(y)).d,\r\n      xs = x.s,\r\n      ys = y.s;\r\n\r\n    // Either NaN or ±Infinity?\r\n    if (!xd || !yd) {\r\n      return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Either zero?\r\n    if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\r\n\r\n    // Signs differ?\r\n    if (xs !== ys) return xs;\r\n\r\n    // Compare exponents.\r\n    if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\r\n\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n      if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * cos(0)         = 1\r\n   * cos(-0)        = 1\r\n   * cos(Infinity)  = NaN\r\n   * cos(-Infinity) = NaN\r\n   * cos(NaN)       = NaN\r\n   *\r\n   */\r\n  P.cosine = P.cos = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.d) return new Ctor(NaN);\r\n\r\n    // cos(0) = cos(-0) = 1\r\n    if (!x.d[0]) return new Ctor(1);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *\r\n   * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   *  cbrt(0)  =  0\r\n   *  cbrt(-0) = -0\r\n   *  cbrt(1)  =  1\r\n   *  cbrt(-1) = -1\r\n   *  cbrt(N)  =  N\r\n   *  cbrt(-I) = -I\r\n   *  cbrt(I)  =  I\r\n   *\r\n   * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n   *\r\n   */\r\n  P.cubeRoot = P.cbrt = function () {\r\n    var e, m, n, r, rep, s, sd, t, t3, t3plusx,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = x.s * mathpow(x.s * x, 1 / 3);\r\n\r\n     // Math.cbrt underflow/overflow?\r\n     // Pass x to Math.pow as integer, then adjust the exponent of the result.\r\n    if (!s || Math.abs(s) == 1 / 0) {\r\n      n = digitsToString(x.d);\r\n      e = x.e;\r\n\r\n      // Adjust n exponent so it is a multiple of 3 away from x exponent.\r\n      if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\r\n      s = mathpow(n, 1 / 3);\r\n\r\n      // Rarely, e may be one less than the result exponent value.\r\n      e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n      r.s = x.s;\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Halley's method.\r\n    // TODO? Compare Newton's method.\r\n    for (;;) {\r\n      t = r;\r\n      t3 = t.times(t).times(t);\r\n      t3plusx = t3.plus(x);\r\n      r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\r\n        // , i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of decimal places of the value of this Decimal.\r\n   *\r\n   */\r\n  P.decimalPlaces = P.dp = function () {\r\n    var w,\r\n      d = this.d,\r\n      n = NaN;\r\n\r\n    if (d) {\r\n      w = d.length - 1;\r\n      n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      w = d[w];\r\n      if (w) for (; w % 10 == 0; w /= 10) n--;\r\n      if (n < 0) n = 0;\r\n    }\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedBy = P.div = function (y) {\r\n    return divide(this, new this.constructor(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n   * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedToIntegerBy = P.divToInt = function (y) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.equals = P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of negative Infinity.\r\n   *\r\n   */\r\n  P.floor = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 3);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n   * false.\r\n   *\r\n   */\r\n  P.greaterThan = P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  P.greaterThanOrEqualTo = P.gte = function (y) {\r\n    var k = this.cmp(y);\r\n    return k == 1 || k === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [1, Infinity]\r\n   *\r\n   * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n   *\r\n   * cosh(0)         = 1\r\n   * cosh(-0)        = 1\r\n   * cosh(Infinity)  = Infinity\r\n   * cosh(-Infinity) = Infinity\r\n   * cosh(NaN)       = NaN\r\n   *\r\n   *  x        time taken (ms)   result\r\n   * 1000      9                 9.8503555700852349694e+433\r\n   * 10000     25                4.4034091128314607936e+4342\r\n   * 100000    171               1.4033316802130615897e+43429\r\n   * 1000000   3817              1.5166076984010437725e+434294\r\n   * 10000000  abandoned after 2 minute wait\r\n   *\r\n   * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicCosine = P.cosh = function () {\r\n    var k, n, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      one = new Ctor(1);\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\r\n    if (x.isZero()) return one;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\r\n    // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    // TODO? Estimation reused from cosine() and may not be optimal here.\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      n = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      n = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\r\n\r\n    // Reverse argument reduction\r\n    var cosh2_x,\r\n      i = k,\r\n      d8 = new Ctor(8);\r\n    for (; i--;) {\r\n      cosh2_x = x.times(x);\r\n      x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\r\n    }\r\n\r\n    return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n   *\r\n   * sinh(0)         = 0\r\n   * sinh(-0)        = -0\r\n   * sinh(Infinity)  = Infinity\r\n   * sinh(-Infinity) = -Infinity\r\n   * sinh(NaN)       = NaN\r\n   *\r\n   * x        time taken (ms)\r\n   * 10       2 ms\r\n   * 100      5 ms\r\n   * 1000     14 ms\r\n   * 10000    82 ms\r\n   * 100000   886 ms            1.4033316802130615897e+43429\r\n   * 200000   2613 ms\r\n   * 300000   5407 ms\r\n   * 400000   8824 ms\r\n   * 500000   13026 ms          8.7080643612718084129e+217146\r\n   * 1000000  48543 ms\r\n   *\r\n   * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicSine = P.sinh = function () {\r\n    var k, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n    } else {\r\n\r\n      // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\r\n      // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\r\n      // 3 multiplications and 1 addition\r\n\r\n      // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\r\n      // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\r\n      // 4 multiplications and 2 additions\r\n\r\n      // Estimate the optimum number of times to use the argument reduction.\r\n      k = 1.4 * Math.sqrt(len);\r\n      k = k > 16 ? 16 : k | 0;\r\n\r\n      x = x.times(1 / tinyPow(5, k));\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n\r\n      // Reverse argument reduction\r\n      var sinh2_x,\r\n        d5 = new Ctor(5),\r\n        d16 = new Ctor(16),\r\n        d20 = new Ctor(20);\r\n      for (; k--;) {\r\n        sinh2_x = x.times(x);\r\n        x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\r\n      }\r\n    }\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * tanh(x) = sinh(x) / cosh(x)\r\n   *\r\n   * tanh(0)         = 0\r\n   * tanh(-0)        = -0\r\n   * tanh(Infinity)  = 1\r\n   * tanh(-Infinity) = -1\r\n   * tanh(NaN)       = NaN\r\n   *\r\n   */\r\n  P.hyperbolicTangent = P.tanh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 7;\r\n    Ctor.rounding = 1;\r\n\r\n    return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n   * this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [0, pi]\r\n   *\r\n   * acos(x) = pi/2 - asin(x)\r\n   *\r\n   * acos(0)       = pi/2\r\n   * acos(-0)      = pi/2\r\n   * acos(1)       = 0\r\n   * acos(-1)      = pi\r\n   * acos(1/2)     = pi/3\r\n   * acos(-1/2)    = 2*pi/3\r\n   * acos(|x| > 1) = NaN\r\n   * acos(NaN)     = NaN\r\n   *\r\n   */\r\n  P.inverseCosine = P.acos = function () {\r\n    var halfPi,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      k = x.abs().cmp(1),\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n      return k === 0\r\n        // |x| is 1\r\n        ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\r\n        // |x| > 1 or x is NaN\r\n        : new Ctor(NaN);\r\n    }\r\n\r\n    if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.asin();\r\n    halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return halfPi.minus(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [1, Infinity]\r\n   * Range: [0, Infinity]\r\n   *\r\n   * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n   *\r\n   * acosh(x < 1)     = NaN\r\n   * acosh(NaN)       = NaN\r\n   * acosh(Infinity)  = Infinity\r\n   * acosh(-Infinity) = NaN\r\n   * acosh(0)         = NaN\r\n   * acosh(-0)        = NaN\r\n   * acosh(1)         = 0\r\n   * acosh(-1)        = NaN\r\n   *\r\n   */\r\n  P.inverseHyperbolicCosine = P.acosh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\r\n    if (!x.isFinite()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).minus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n   *\r\n   * asinh(NaN)       = NaN\r\n   * asinh(Infinity)  = Infinity\r\n   * asinh(-Infinity) = -Infinity\r\n   * asinh(0)         = 0\r\n   * asinh(-0)        = -0\r\n   *\r\n   */\r\n  P.inverseHyperbolicSine = P.asinh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).plus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n   *\r\n   * atanh(|x| > 1)   = NaN\r\n   * atanh(NaN)       = NaN\r\n   * atanh(Infinity)  = NaN\r\n   * atanh(-Infinity) = NaN\r\n   * atanh(0)         = 0\r\n   * atanh(-0)        = -0\r\n   * atanh(1)         = Infinity\r\n   * atanh(-1)        = -Infinity\r\n   *\r\n   */\r\n  P.inverseHyperbolicTangent = P.atanh = function () {\r\n    var pr, rm, wpr, xsd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    xsd = x.sd();\r\n\r\n    if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\r\n\r\n    Ctor.precision = wpr = xsd - x.e;\r\n\r\n    x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\r\n\r\n    Ctor.precision = pr + 4;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.ln();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(0.5);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n   *\r\n   * asin(0)       = 0\r\n   * asin(-0)      = -0\r\n   * asin(1/2)     = pi/6\r\n   * asin(-1/2)    = -pi/6\r\n   * asin(1)       = pi/2\r\n   * asin(-1)      = -pi/2\r\n   * asin(|x| > 1) = NaN\r\n   * asin(NaN)     = NaN\r\n   *\r\n   * TODO? Compare performance of Taylor series.\r\n   *\r\n   */\r\n  P.inverseSine = P.asin = function () {\r\n    var halfPi, k,\r\n      pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    k = x.abs().cmp(1);\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n\r\n      // |x| is 1\r\n      if (k === 0) {\r\n        halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        halfPi.s = x.s;\r\n        return halfPi;\r\n      }\r\n\r\n      // |x| > 1 or x is NaN\r\n      return new Ctor(NaN);\r\n    }\r\n\r\n    // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n   *\r\n   * atan(0)         = 0\r\n   * atan(-0)        = -0\r\n   * atan(1)         = pi/4\r\n   * atan(-1)        = -pi/4\r\n   * atan(Infinity)  = pi/2\r\n   * atan(-Infinity) = -pi/2\r\n   * atan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.inverseTangent = P.atan = function () {\r\n    var i, j, k, n, px, t, r, wpr, x2,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (!x.isFinite()) {\r\n      if (!x.s) return new Ctor(NaN);\r\n      if (pr + 4 <= PI_PRECISION) {\r\n        r = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        r.s = x.s;\r\n        return r;\r\n      }\r\n    } else if (x.isZero()) {\r\n      return new Ctor(x);\r\n    } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\r\n      r = getPi(Ctor, pr + 4, rm).times(0.25);\r\n      r.s = x.s;\r\n      return r;\r\n    }\r\n\r\n    Ctor.precision = wpr = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\r\n\r\n    // Argument reduction\r\n    // Ensure |x| < 0.42\r\n    // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\r\n\r\n    k = Math.min(28, wpr / LOG_BASE + 2 | 0);\r\n\r\n    for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\r\n\r\n    external = false;\r\n\r\n    j = Math.ceil(wpr / LOG_BASE);\r\n    n = 1;\r\n    x2 = x.times(x);\r\n    r = new Ctor(x);\r\n    px = x;\r\n\r\n    // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n    for (; i !== -1;) {\r\n      px = px.times(x2);\r\n      t = r.minus(px.div(n += 2));\r\n\r\n      px = px.times(x2);\r\n      r = t.plus(px.div(n += 2));\r\n\r\n      if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\r\n    }\r\n\r\n    if (k) r = r.times(2 << (k - 1));\r\n\r\n    external = true;\r\n\r\n    return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n   *\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.d;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is an integer, otherwise return false.\r\n   *\r\n   */\r\n  P.isInteger = P.isInt = function () {\r\n    return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is NaN, otherwise return false.\r\n   *\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is negative, otherwise return false.\r\n   *\r\n   */\r\n  P.isNegative = P.isNeg = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is positive, otherwise return false.\r\n   *\r\n   */\r\n  P.isPositive = P.isPos = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n   *\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.d && this.d[0] === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThan = P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThanOrEqualTo = P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * If no base is specified, return log[10](arg).\r\n   *\r\n   * log[base](arg) = ln(arg) / ln(base)\r\n   *\r\n   * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n   * otherwise:\r\n   *\r\n   * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n   * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n   * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n   *\r\n   * log[-b](a)       = NaN\r\n   * log[0](a)        = NaN\r\n   * log[1](a)        = NaN\r\n   * log[NaN](a)      = NaN\r\n   * log[Infinity](a) = NaN\r\n   * log[b](0)        = -Infinity\r\n   * log[b](-0)       = -Infinity\r\n   * log[b](-a)       = NaN\r\n   * log[b](1)        = 0\r\n   * log[b](Infinity) = Infinity\r\n   * log[b](NaN)      = NaN\r\n   *\r\n   * [base] {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  P.logarithm = P.log = function (base) {\r\n    var isBase10, d, denominator, k, inf, num, sd, r,\r\n      arg = this,\r\n      Ctor = arg.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding,\r\n      guard = 5;\r\n\r\n    // Default base is 10.\r\n    if (base == null) {\r\n      base = new Ctor(10);\r\n      isBase10 = true;\r\n    } else {\r\n      base = new Ctor(base);\r\n      d = base.d;\r\n\r\n      // Return NaN if base is negative, or non-finite, or is 0 or 1.\r\n      if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\r\n\r\n      isBase10 = base.eq(10);\r\n    }\r\n\r\n    d = arg.d;\r\n\r\n    // Is arg negative, non-finite, 0 or 1?\r\n    if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\r\n      return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\r\n    }\r\n\r\n    // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\r\n    // integer power of 10.\r\n    if (isBase10) {\r\n      if (d.length > 1) {\r\n        inf = true;\r\n      } else {\r\n        for (k = d[0]; k % 10 === 0;) k /= 10;\r\n        inf = k !== 1;\r\n      }\r\n    }\r\n\r\n    external = false;\r\n    sd = pr + guard;\r\n    num = naturalLogarithm(arg, sd);\r\n    denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n\r\n    // The result will have 5 rounding digits.\r\n    r = divide(num, denominator, sd, 1);\r\n\r\n    // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n    // calculate 10 further digits.\r\n    //\r\n    // If the result is known to have an infinite decimal expansion, repeat this until it is clear\r\n    // that the result is above or below the boundary. Otherwise, if after calculating the 10\r\n    // further digits, the last 14 are nines, round up and assume the result is exact.\r\n    // Also assume the result is exact if the last 14 are zero.\r\n    //\r\n    // Example of a result that will be incorrectly rounded:\r\n    // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n    // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\r\n    // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\r\n    // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\r\n    // place is still 2.6.\r\n    if (checkRoundingDigits(r.d, k = pr, rm)) {\r\n\r\n      do {\r\n        sd += 10;\r\n        num = naturalLogarithm(arg, sd);\r\n        denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n        r = divide(num, denominator, sd, 1);\r\n\r\n        if (!inf) {\r\n\r\n          // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n          if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\r\n            r = finalise(r, pr + 1, 0);\r\n          }\r\n\r\n          break;\r\n        }\r\n      } while (checkRoundingDigits(r.d, k += 10, rm));\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.max = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'lt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.min = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'gt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return y negated if x is finite and y is ±Infinity.\r\n      else if (x.d) y.s = -y.s;\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with different signs.\r\n      // Return NaN if both are ±Infinity with the same sign.\r\n      else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n    // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.plus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return y negated if x is zero and y is non-zero.\r\n      if (yd[0]) y.s = -y.s;\r\n\r\n      // Return x if y is zero and x is non-zero.\r\n      else if (xd[0]) y = new Ctor(x);\r\n\r\n      // Return zero if both are zero.\r\n      // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\r\n      else return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    e = mathfloor(y.e / LOG_BASE);\r\n    xe = mathfloor(x.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    k = xe - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (k) {\r\n      xLTy = k < 0;\r\n\r\n      if (xLTy) {\r\n        d = xd;\r\n        k = -k;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = xe;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Numbers with massively different exponents would result in a very high number of\r\n      // zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n      // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n      if (k > i) {\r\n        k = i;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      d.reverse();\r\n      for (i = k; i--;) d.push(0);\r\n      d.reverse();\r\n\r\n    // Base 1e7 exponents equal.\r\n    } else {\r\n\r\n      // Check digits to determine which is the bigger number.\r\n\r\n      i = xd.length;\r\n      len = yd.length;\r\n      xLTy = i < len;\r\n      if (xLTy) len = i;\r\n\r\n      for (i = 0; i < len; i++) {\r\n        if (xd[i] != yd[i]) {\r\n          xLTy = xd[i] < yd[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      k = 0;\r\n    }\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      xd = yd;\r\n      yd = d;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    len = xd.length;\r\n\r\n    // Append zeros to `xd` if shorter.\r\n    // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\r\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n    // Subtract yd from xd.\r\n    for (i = yd.length; i > k;) {\r\n\r\n      if (xd[--i] < yd[i]) {\r\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n        --xd[j];\r\n        xd[i] += BASE;\r\n      }\r\n\r\n      xd[i] -= yd[i];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] === 0;) xd.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n    // Zero?\r\n    if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * The result depends on the modulo mode.\r\n   *\r\n   */\r\n  P.modulo = P.mod = function (y) {\r\n    var q,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // Return NaN if x is ±Infinity or NaN, or y is NaN or ±0.\r\n    if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\r\n\r\n    // Return x if y is ±Infinity or x is ±0.\r\n    if (!y.d || x.d && !x.d[0]) {\r\n      return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\r\n    }\r\n\r\n    // Prevent rounding of intermediate calculations.\r\n    external = false;\r\n\r\n    if (Ctor.modulo == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // result = x - q * y    where  0 <= result < abs(y)\r\n      q = divide(x, y.abs(), 0, 3, 1);\r\n      q.s *= y.s;\r\n    } else {\r\n      q = divide(x, y, 0, Ctor.modulo, 1);\r\n    }\r\n\r\n    q = q.times(y);\r\n\r\n    external = true;\r\n\r\n    return x.minus(q);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n   * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalExponential = P.exp = function () {\r\n    return naturalExponential(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalLogarithm = P.ln = function () {\r\n    return naturalLogarithm(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n   * -1.\r\n   *\r\n   */\r\n  P.negated = P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var carry, d, e, i, k, len, pr, rm, xd, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with the same sign.\r\n      // Return NaN if both are ±Infinity with different signs.\r\n      // Return y if x is finite and y is ±Infinity.\r\n      else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n     // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return x if y is zero.\r\n      // Return y if y is non-zero.\r\n      if (!yd[0]) y = new Ctor(x);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    k = mathfloor(x.e / LOG_BASE);\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    i = k - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (i) {\r\n\r\n      if (i < 0) {\r\n        d = xd;\r\n        i = -i;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = k;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n      k = Math.ceil(pr / LOG_BASE);\r\n      len = k > len ? k + 1 : len + 1;\r\n\r\n      if (i > len) {\r\n        i = len;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n      d.reverse();\r\n      for (; i--;) d.push(0);\r\n      d.reverse();\r\n    }\r\n\r\n    len = xd.length;\r\n    i = yd.length;\r\n\r\n    // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n    if (len - i < 0) {\r\n      i = len;\r\n      d = yd;\r\n      yd = xd;\r\n      xd = d;\r\n    }\r\n\r\n    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n    for (carry = 0; i;) {\r\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n      xd[i] %= BASE;\r\n    }\r\n\r\n    if (carry) {\r\n      xd.unshift(carry);\r\n      ++e;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of significant digits of the value of this Decimal.\r\n   *\r\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n   *\r\n   */\r\n  P.precision = P.sd = function (z) {\r\n    var k,\r\n      x = this;\r\n\r\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n    if (x.d) {\r\n      k = getPrecision(x.d);\r\n      if (z && x.e + 1 > k) k = x.e + 1;\r\n    } else {\r\n      k = NaN;\r\n    }\r\n\r\n    return k;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n   * rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.round = function () {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   *\r\n   * sin(0)         = 0\r\n   * sin(-0)        = -0\r\n   * sin(Infinity)  = NaN\r\n   * sin(-Infinity) = NaN\r\n   * sin(NaN)       = NaN\r\n   *\r\n   */\r\n  P.sine = P.sin = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = sine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N)  =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I)  =  I\r\n   *  sqrt(0)  =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, sd, r, rep, t,\r\n      x = this,\r\n      d = x.d,\r\n      e = x.e,\r\n      s = x.s,\r\n      Ctor = x.constructor;\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !d || !d[0]) {\r\n      return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\r\n    }\r\n\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+x);\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = digitsToString(d);\r\n\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(n);\r\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '1e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Newton-Raphson iteration.\r\n    for (;;) {\r\n      t = r;\r\n      r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * tan(0)         = 0\r\n   * tan(-0)        = -0\r\n   * tan(Infinity)  = NaN\r\n   * tan(-Infinity) = NaN\r\n   * tan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.tangent = P.tan = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.sin();\r\n    x.s = 1;\r\n    x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var carry, e, i, k, r, rL, t, xdL, ydL,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      xd = x.d,\r\n      yd = (y = new Ctor(y)).d;\r\n\r\n    y.s *= x.s;\r\n\r\n     // If either is NaN, ±Infinity or ±0...\r\n    if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n      return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\r\n\r\n        // Return NaN if either is NaN.\r\n        // Return NaN if x is ±0 and y is ±Infinity, or y is ±0 and x is ±Infinity.\r\n        ? NaN\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        // Return ±0 if either is ±0.\r\n        : !xd || !yd ? y.s / 0 : y.s * 0);\r\n    }\r\n\r\n    e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Ensure xd points to the longer array.\r\n    if (xdL < ydL) {\r\n      r = xd;\r\n      xd = yd;\r\n      yd = r;\r\n      rL = xdL;\r\n      xdL = ydL;\r\n      ydL = rL;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    r = [];\r\n    rL = xdL + ydL;\r\n    for (i = rL; i--;) r.push(0);\r\n\r\n    // Multiply!\r\n    for (i = ydL; --i >= 0;) {\r\n      carry = 0;\r\n      for (k = xdL + i; k > i;) {\r\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n        r[k--] = t % BASE | 0;\r\n        carry = t / BASE | 0;\r\n      }\r\n\r\n      r[k] = (r[k] + carry) % BASE | 0;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; !r[--rL];) r.pop();\r\n\r\n    if (carry) ++e;\r\n    else r.shift();\r\n\r\n    y.d = r;\r\n    y.e = getBase10Exponent(r, e);\r\n\r\n    return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toBinary = function (sd, rm) {\r\n    return toStringBinary(this, 2, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n   *\r\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toDecimalPlaces = P.toDP = function (dp, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n    if (dp === void 0) return x;\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    return finalise(x, dp + x.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in exponential notation rounded to\r\n   * `dp` fixed decimal places using rounding mode `rounding`.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x, true);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), dp + 1, rm);\r\n      str = finiteToString(x, true, dp + 1);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n   * omitted.\r\n   *\r\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   * (-0).toFixed(3) is '0.000'.\r\n   * (-0.5).toFixed(0) is '-0'.\r\n   *\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var str, y,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      y = finalise(new Ctor(x), dp + x.e + 1, rm);\r\n      str = finiteToString(y, false, dp + y.e + 1);\r\n    }\r\n\r\n    // To determine whether to add the minus sign look at the value before it was rounded,\r\n    // i.e. look at `x` rather than `y`.\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n   * numerator and an integer denominator.\r\n   *\r\n   * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n   * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n   * value necessary to represent the number exactly.\r\n   *\r\n   * [maxD] {number|string|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n   *\r\n   */\r\n  P.toFraction = function (maxD) {\r\n    var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\r\n      x = this,\r\n      xd = x.d,\r\n      Ctor = x.constructor;\r\n\r\n    if (!xd) return new Ctor(x);\r\n\r\n    n1 = d0 = new Ctor(1);\r\n    d1 = n0 = new Ctor(0);\r\n\r\n    d = new Ctor(d1);\r\n    e = d.e = getPrecision(xd) - x.e - 1;\r\n    k = e % LOG_BASE;\r\n    d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\r\n\r\n    if (maxD == null) {\r\n\r\n      // d is 10**e, the minimum max-denominator needed.\r\n      maxD = e > 0 ? d : n1;\r\n    } else {\r\n      n = new Ctor(maxD);\r\n      if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\r\n      maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\r\n    }\r\n\r\n    external = false;\r\n    n = new Ctor(digitsToString(xd));\r\n    pr = Ctor.precision;\r\n    Ctor.precision = e = xd.length * LOG_BASE * 2;\r\n\r\n    for (;;)  {\r\n      q = divide(n, d, 0, 1, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.cmp(maxD) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      d2 = n1;\r\n      n1 = n0.plus(q.times(d2));\r\n      n0 = d2;\r\n      d2 = d;\r\n      d = n.minus(q.times(d2));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n    r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\r\n        ? [n1, d1] : [n0, d0];\r\n\r\n    Ctor.precision = pr;\r\n    external = true;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toHexadecimal = P.toHex = function (sd, rm) {\r\n    return toStringBinary(this, 16, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\r\n   * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\r\n   *\r\n   * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n   * or `y` is NaN, in which case the return value will be also be NaN.\r\n   *\r\n   * The return value is not affected by the value of `precision`.\r\n   *\r\n   * y {number|string|Decimal} The magnitude to round to a multiple of.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toNearest() rounding mode not an integer: {rm}'\r\n   * 'toNearest() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toNearest = function (y, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (y == null) {\r\n\r\n      // If x is not finite, return x.\r\n      if (!x.d) return x;\r\n\r\n      y = new Ctor(1);\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      y = new Ctor(y);\r\n      if (rm === void 0) {\r\n        rm = Ctor.rounding;\r\n      } else {\r\n        checkInt32(rm, 0, 8);\r\n      }\r\n\r\n      // If x is not finite, return x if y is not NaN, else NaN.\r\n      if (!x.d) return y.s ? x : y;\r\n\r\n      // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\r\n      if (!y.d) {\r\n        if (y.s) y.s = x.s;\r\n        return y;\r\n      }\r\n    }\r\n\r\n    // If y is not zero, calculate the nearest multiple of y to x.\r\n    if (y.d[0]) {\r\n      external = false;\r\n      x = divide(x, y, 0, rm, 1).times(y);\r\n      external = true;\r\n      finalise(x);\r\n\r\n    // If y is zero, return zero with the sign of x.\r\n    } else {\r\n      y.s = x.s;\r\n      x = y;\r\n    }\r\n\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Decimal converted to a number primitive.\r\n   * Zero keeps its sign.\r\n   *\r\n   */\r\n  P.toNumber = function () {\r\n    return +this;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toOctal = function (sd, rm) {\r\n    return toStringBinary(this, 8, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n   * to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * ECMAScript compliant.\r\n   *\r\n   *   pow(x, NaN)                           = NaN\r\n   *   pow(x, ±0)                            = 1\r\n\r\n   *   pow(NaN, non-zero)                    = NaN\r\n   *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n   *   pow(abs(x) > 1, -Infinity)            = +0\r\n   *   pow(abs(x) == 1, ±Infinity)           = NaN\r\n   *   pow(abs(x) < 1, +Infinity)            = +0\r\n   *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n   *   pow(+Infinity, y > 0)                 = +Infinity\r\n   *   pow(+Infinity, y < 0)                 = +0\r\n   *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n   *   pow(-Infinity, even integer > 0)      = +Infinity\r\n   *   pow(-Infinity, odd integer < 0)       = -0\r\n   *   pow(-Infinity, even integer < 0)      = +0\r\n   *   pow(+0, y > 0)                        = +0\r\n   *   pow(+0, y < 0)                        = +Infinity\r\n   *   pow(-0, odd integer > 0)              = -0\r\n   *   pow(-0, even integer > 0)             = +0\r\n   *   pow(-0, odd integer < 0)              = -Infinity\r\n   *   pow(-0, even integer < 0)             = +Infinity\r\n   *   pow(finite x < 0, finite non-integer) = NaN\r\n   *\r\n   * For non-integer or very large exponents pow(x, y) is calculated using\r\n   *\r\n   *   x^y = exp(y*ln(x))\r\n   *\r\n   * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n   * probability of an incorrectly rounded result\r\n   * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n   * i.e. 1 in 250,000,000,000,000\r\n   *\r\n   * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n   *\r\n   * y {number|string|Decimal} The power to which to raise this Decimal.\r\n   *\r\n   */\r\n  P.toPower = P.pow = function (y) {\r\n    var e, k, pr, r, rm, s,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      yn = +(y = new Ctor(y));\r\n\r\n    // Either ±Infinity, NaN or ±0?\r\n    if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (x.eq(1)) return x;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (y.eq(1)) return finalise(x, pr, rm);\r\n\r\n    // y exponent\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n    if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n      r = intPow(Ctor, x, k, pr);\r\n      return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\r\n    }\r\n\r\n    s = x.s;\r\n\r\n    // if x is negative\r\n    if (s < 0) {\r\n\r\n      // if y is not an integer\r\n      if (e < y.d.length - 1) return new Ctor(NaN);\r\n\r\n      // Result is positive if x is negative and the last digit of integer y is even.\r\n      if ((y.d[e] & 1) == 0) s = 1;\r\n\r\n      // if x.eq(-1)\r\n      if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\r\n        x.s = s;\r\n        return x;\r\n      }\r\n    }\r\n\r\n    // Estimate result exponent.\r\n    // x^y = 10^e,  where e = y * log10(x)\r\n    // log10(x) = log10(x_significand) + x_exponent\r\n    // log10(x_significand) = ln(x_significand) / ln(10)\r\n    k = mathpow(+x, yn);\r\n    e = k == 0 || !isFinite(k)\r\n      ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\r\n      : new Ctor(k + '').e;\r\n\r\n    // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\r\n\r\n    // Overflow/underflow?\r\n    if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\r\n\r\n    external = false;\r\n    Ctor.rounding = x.s = 1;\r\n\r\n    // Estimate the extra guard digits needed to ensure five correct rounding digits from\r\n    // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\r\n    // new Decimal(2.32456).pow('2087987436534566.46411')\r\n    // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n    k = Math.min(12, (e + '').length);\r\n\r\n    // r = x^y = exp(y*ln(x))\r\n    r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\r\n\r\n    // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\r\n    if (r.d) {\r\n\r\n      // Truncate to the required precision plus five rounding digits.\r\n      r = finalise(r, pr + 5, 1);\r\n\r\n      // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\r\n      // the result.\r\n      if (checkRoundingDigits(r.d, pr, rm)) {\r\n        e = pr + 10;\r\n\r\n        // Truncate to the increased precision plus five rounding digits.\r\n        r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\r\n\r\n        // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\r\n        if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\r\n          r = finalise(r, pr + 1, 0);\r\n        }\r\n      }\r\n    }\r\n\r\n    r.s = s;\r\n    external = true;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), sd, rm);\r\n      str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n   * omitted.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toSD() digits out of range: {sd}'\r\n   * 'toSD() digits not an integer: {sd}'\r\n   * 'toSD() rounding mode not an integer: {rm}'\r\n   * 'toSD() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toSignificantDigits = P.toSD = function (sd, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    return finalise(new Ctor(x), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   *\r\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n   *\r\n   */\r\n  P.toString = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n   *\r\n   */\r\n  P.truncated = P.trunc = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   * Unlike `toString`, negative zero will include the minus sign.\r\n   *\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n  // Add aliases to match BigDecimal method names.\r\n  // P.add = P.plus;\r\n  P.subtract = P.minus;\r\n  P.multiply = P.times;\r\n  P.divide = P.div;\r\n  P.remainder = P.mod;\r\n  P.compareTo = P.cmp;\r\n  P.negate = P.neg;\r\n   */\r\n\r\n\r\n  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n  /*\r\n   *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\r\n   *                           finiteToString, naturalExponential, naturalLogarithm\r\n   *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n   *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n   *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n   *  convertBase              toStringBinary, parseOther\r\n   *  cos                      P.cos\r\n   *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n   *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n   *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n   *                           taylorSeries, atan2, parseOther\r\n   *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n   *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n   *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n   *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n   *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n   *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n   *                           naturalLogarithm, ceil, floor, round, trunc\r\n   *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n   *                           toStringBinary\r\n   *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n   *  getLn10                  P.logarithm, naturalLogarithm\r\n   *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n   *  getPrecision             P.precision, P.toFraction\r\n   *  getZeroString            digitsToString, finiteToString\r\n   *  intPow                   P.toPower, parseOther\r\n   *  isOdd                    toLessThanHalfPi\r\n   *  maxOrMin                 max, min\r\n   *  naturalExponential       P.naturalExponential, P.toPower\r\n   *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n   *                           P.toPower, naturalExponential\r\n   *  nonFiniteToString        finiteToString, toStringBinary\r\n   *  parseDecimal             Decimal\r\n   *  parseOther               Decimal\r\n   *  sin                      P.sin\r\n   *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n   *  toLessThanHalfPi         P.cos, P.sin\r\n   *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n   *  truncate                 intPow\r\n   *\r\n   *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n   *                           naturalLogarithm, config, parseOther, random, Decimal\r\n   */\r\n\r\n\r\n  function digitsToString(d) {\r\n    var i, k, ws,\r\n      indexOfLastWord = d.length - 1,\r\n      str = '',\r\n      w = d[0];\r\n\r\n    if (indexOfLastWord > 0) {\r\n      str += w;\r\n      for (i = 1; i < indexOfLastWord; i++) {\r\n        ws = d[i] + '';\r\n        k = LOG_BASE - ws.length;\r\n        if (k) str += getZeroString(k);\r\n        str += ws;\r\n      }\r\n\r\n      w = d[i];\r\n      ws = w + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n    } else if (w === 0) {\r\n      return '0';\r\n    }\r\n\r\n    // Remove trailing zeros of last w.\r\n    for (; w % 10 === 0;) w /= 10;\r\n\r\n    return str + w;\r\n  }\r\n\r\n\r\n  function checkInt32(i, min, max) {\r\n    if (i !== ~~i || i < min || i > max) {\r\n      throw Error(invalidArgument + i);\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n   * `repeating == null` if caller is `log` or `pow`,\r\n   * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n   */\r\n  function checkRoundingDigits(d, i, rm, repeating) {\r\n    var di, k, r, rd;\r\n\r\n    // Get the length of the first word of the array d.\r\n    for (k = d[0]; k >= 10; k /= 10) --i;\r\n\r\n    // Is the rounding digit in the first word of d?\r\n    if (--i < 0) {\r\n      i += LOG_BASE;\r\n      di = 0;\r\n    } else {\r\n      di = Math.ceil((i + 1) / LOG_BASE);\r\n      i %= LOG_BASE;\r\n    }\r\n\r\n    // i is the index (0 - 6) of the rounding digit.\r\n    // E.g. if within the word 3487563 the first rounding digit is 5,\r\n    // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\r\n    k = mathpow(10, LOG_BASE - i);\r\n    rd = d[di] % k | 0;\r\n\r\n    if (repeating == null) {\r\n      if (i < 3) {\r\n        if (i == 0) rd = rd / 100 | 0;\r\n        else if (i == 1) rd = rd / 10 | 0;\r\n        r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n      } else {\r\n        r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\r\n            (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\r\n      }\r\n    } else {\r\n      if (i < 4) {\r\n        if (i == 0) rd = rd / 1000 | 0;\r\n        else if (i == 1) rd = rd / 100 | 0;\r\n        else if (i == 2) rd = rd / 10 | 0;\r\n        r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n      } else {\r\n        r = ((repeating || rm < 4) && rd + 1 == k ||\r\n        (!repeating && rm > 3) && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  // Convert string of `baseIn` to an array of numbers of `baseOut`.\r\n  // Eg. convertBase('255', 10, 16) returns [15, 15].\r\n  // Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\n  function convertBase(str, baseIn, baseOut) {\r\n    var j,\r\n      arr = [0],\r\n      arrL,\r\n      i = 0,\r\n      strL = str.length;\r\n\r\n    for (; i < strL;) {\r\n      for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\r\n      arr[0] += NUMERALS.indexOf(str.charAt(i++));\r\n      for (j = 0; j < arr.length; j++) {\r\n        if (arr[j] > baseOut - 1) {\r\n          if (arr[j + 1] === void 0) arr[j + 1] = 0;\r\n          arr[j + 1] += arr[j] / baseOut | 0;\r\n          arr[j] %= baseOut;\r\n        }\r\n      }\r\n    }\r\n\r\n    return arr.reverse();\r\n  }\r\n\r\n\r\n  /*\r\n   * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function cosine(Ctor, x) {\r\n    var k, y,\r\n      len = x.d.length;\r\n\r\n    // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\r\n    // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      y = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      y = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    Ctor.precision += k;\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\r\n\r\n    // Reverse argument reduction\r\n    for (var i = k; i--;) {\r\n      var cos2x = x.times(x);\r\n      x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\r\n    }\r\n\r\n    Ctor.precision -= k;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Perform division in the specified base.\r\n   */\r\n  var divide = (function () {\r\n\r\n    // Assumes non-zero x and k, and hence non-zero result.\r\n    function multiplyInteger(x, k, base) {\r\n      var temp,\r\n        carry = 0,\r\n        i = x.length;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        temp = x[i] * k + carry;\r\n        x[i] = temp % base | 0;\r\n        carry = temp / base | 0;\r\n      }\r\n\r\n      if (carry) x.unshift(carry);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, r;\r\n\r\n      if (aL != bL) {\r\n        r = aL > bL ? 1 : -1;\r\n      } else {\r\n        for (i = r = 0; i < aL; i++) {\r\n          if (a[i] != b[i]) {\r\n            r = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return r;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1;) a.shift();\r\n    }\r\n\r\n    return function (x, y, pr, rm, dp, base) {\r\n      var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\r\n        yL, yz,\r\n        Ctor = x.constructor,\r\n        sign = x.s == y.s ? 1 : -1,\r\n        xd = x.d,\r\n        yd = y.d;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n        return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\r\n          !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\r\n\r\n          // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.\r\n          xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\r\n      }\r\n\r\n      if (base) {\r\n        logBase = 1;\r\n        e = x.e - y.e;\r\n      } else {\r\n        base = BASE;\r\n        logBase = LOG_BASE;\r\n        e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\r\n      }\r\n\r\n      yL = yd.length;\r\n      xL = xd.length;\r\n      q = new Ctor(sign);\r\n      qd = q.d = [];\r\n\r\n      // Result exponent may be one less than e.\r\n      // The digit array of a Decimal from toStringBinary may have trailing zeros.\r\n      for (i = 0; yd[i] == (xd[i] || 0); i++);\r\n\r\n      if (yd[i] > (xd[i] || 0)) e--;\r\n\r\n      if (pr == null) {\r\n        sd = pr = Ctor.precision;\r\n        rm = Ctor.rounding;\r\n      } else if (dp) {\r\n        sd = pr + (x.e - y.e) + 1;\r\n      } else {\r\n        sd = pr;\r\n      }\r\n\r\n      if (sd < 0) {\r\n        qd.push(1);\r\n        more = true;\r\n      } else {\r\n\r\n        // Convert precision in number of base 10 digits to base 1e7 digits.\r\n        sd = sd / logBase + 2 | 0;\r\n        i = 0;\r\n\r\n        // divisor < 1e7\r\n        if (yL == 1) {\r\n          k = 0;\r\n          yd = yd[0];\r\n          sd++;\r\n\r\n          // k is the carry.\r\n          for (; (i < xL || k) && sd--; i++) {\r\n            t = k * base + (xd[i] || 0);\r\n            qd[i] = t / yd | 0;\r\n            k = t % yd | 0;\r\n          }\r\n\r\n          more = k || i < xL;\r\n\r\n        // divisor >= 1e7\r\n        } else {\r\n\r\n          // Normalise xd and yd so highest order digit of yd is >= base/2\r\n          k = base / (yd[0] + 1) | 0;\r\n\r\n          if (k > 1) {\r\n            yd = multiplyInteger(yd, k, base);\r\n            xd = multiplyInteger(xd, k, base);\r\n            yL = yd.length;\r\n            xL = xd.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xd.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL;) rem[remL++] = 0;\r\n\r\n          yz = yd.slice();\r\n          yz.unshift(0);\r\n          yd0 = yd[0];\r\n\r\n          if (yd[1] >= base / 2) ++yd0;\r\n\r\n          do {\r\n            k = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yd, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, k.\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // k will be how many times the divisor goes into the current remainder.\r\n              k = rem0 / yd0 | 0;\r\n\r\n              //  Algorithm:\r\n              //  1. product = divisor * trial digit (k)\r\n              //  2. if product > remainder: product -= divisor, k--\r\n              //  3. remainder -= product\r\n              //  4. if product was < remainder at 2:\r\n              //    5. compare new remainder and divisor\r\n              //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n              if (k > 1) {\r\n                if (k >= base) k = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiplyInteger(yd, k, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                cmp = compare(prod, rem, prodL, remL);\r\n\r\n                // product > remainder.\r\n                if (cmp == 1) {\r\n                  k--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yd, prodL, base);\r\n                }\r\n              } else {\r\n\r\n                // cmp is -1.\r\n                // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n                // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n                if (k == 0) cmp = k = 1;\r\n                prod = yd.slice();\r\n              }\r\n\r\n              prodL = prod.length;\r\n              if (prodL < remL) prod.unshift(0);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n\r\n              // If product was < previous remainder.\r\n              if (cmp == -1) {\r\n                remL = rem.length;\r\n\r\n                // Compare divisor and new remainder.\r\n                cmp = compare(yd, rem, yL, remL);\r\n\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                if (cmp < 1) {\r\n                  k++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yd, remL, base);\r\n                }\r\n              }\r\n\r\n              remL = rem.length;\r\n            } else if (cmp === 0) {\r\n              k++;\r\n              rem = [0];\r\n            }    // if cmp === 1, k will be 0\r\n\r\n            // Add the next digit, k, to the result array.\r\n            qd[i++] = k;\r\n\r\n            // Update the remainder.\r\n            if (cmp && rem[0]) {\r\n              rem[remL++] = xd[xi] || 0;\r\n            } else {\r\n              rem = [xd[xi]];\r\n              remL = 1;\r\n            }\r\n\r\n          } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n\r\n          more = rem[0] !== void 0;\r\n        }\r\n\r\n        // Leading zero?\r\n        if (!qd[0]) qd.shift();\r\n      }\r\n\r\n      // logBase is 1 when divide is being used for base conversion.\r\n      if (logBase == 1) {\r\n        q.e = e;\r\n        inexact = more;\r\n      } else {\r\n\r\n        // To calculate q.e, first get the number of digits of qd[0].\r\n        for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\r\n        q.e = i + e * logBase - 1;\r\n\r\n        finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n   * Check for over/under-flow.\r\n   */\r\n   function finalise(x, sd, rm, isTruncated) {\r\n    var digits, i, j, k, rd, roundUp, w, xd, xdi,\r\n      Ctor = x.constructor;\r\n\r\n    // Don't round if sd is null or undefined.\r\n    out: if (sd != null) {\r\n      xd = x.d;\r\n\r\n      // Infinity/NaN.\r\n      if (!xd) return x;\r\n\r\n      // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // w: the word of xd containing rd, a base 1e7 number.\r\n      // xdi: the index of w within xd.\r\n      // digits: the number of digits of w.\r\n      // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n      // they had leading zeros)\r\n      // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n      // Get the length of the first word of the digits array xd.\r\n      for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\r\n      i = sd - digits;\r\n\r\n      // Is the rounding digit in the first word of xd?\r\n      if (i < 0) {\r\n        i += LOG_BASE;\r\n        j = sd;\r\n        w = xd[xdi = 0];\r\n\r\n        // Get the rounding digit at index j of w.\r\n        rd = w / mathpow(10, digits - j - 1) % 10 | 0;\r\n      } else {\r\n        xdi = Math.ceil((i + 1) / LOG_BASE);\r\n        k = xd.length;\r\n        if (xdi >= k) {\r\n          if (isTruncated) {\r\n\r\n            // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\r\n            for (; k++ <= xdi;) xd.push(0);\r\n            w = rd = 0;\r\n            digits = 1;\r\n            i %= LOG_BASE;\r\n            j = i - LOG_BASE + 1;\r\n          } else {\r\n            break out;\r\n          }\r\n        } else {\r\n          w = k = xd[xdi];\r\n\r\n          // Get the number of digits of w.\r\n          for (digits = 1; k >= 10; k /= 10) digits++;\r\n\r\n          // Get the index of rd within w.\r\n          i %= LOG_BASE;\r\n\r\n          // Get the index of rd within w, adjusted for leading zeros.\r\n          // The number of leading zeros of w is given by LOG_BASE - digits.\r\n          j = i - LOG_BASE + digits;\r\n\r\n          // Get the rounding digit at index j of w.\r\n          rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\r\n        }\r\n      }\r\n\r\n      // Are there any non-zero digits after the rounding digit?\r\n      isTruncated = isTruncated || sd < 0 ||\r\n        xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\r\n\r\n      // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\r\n      // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\r\n      // will give 714.\r\n\r\n      roundUp = rm < 4\r\n        ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n        : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n            rm == (x.s < 0 ? 8 : 7));\r\n\r\n      if (sd < 1 || !xd[0]) {\r\n        xd.length = 0;\r\n        if (roundUp) {\r\n\r\n          // Convert sd to decimal places.\r\n          sd -= x.e + 1;\r\n\r\n          // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n          xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n          x.e = -sd || 0;\r\n        } else {\r\n\r\n          // Zero.\r\n          xd[0] = x.e = 0;\r\n        }\r\n\r\n        return x;\r\n      }\r\n\r\n      // Remove excess digits.\r\n      if (i == 0) {\r\n        xd.length = xdi;\r\n        k = 1;\r\n        xdi--;\r\n      } else {\r\n        xd.length = xdi + 1;\r\n        k = mathpow(10, LOG_BASE - i);\r\n\r\n        // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n        // j > 0 means i > number of leading zeros of w.\r\n        xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\r\n      }\r\n\r\n      if (roundUp) {\r\n        for (;;) {\r\n\r\n          // Is the digit to be rounded up in the first word of xd?\r\n          if (xdi == 0) {\r\n\r\n            // i will be the length of xd[0] before k is added.\r\n            for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\r\n            j = xd[0] += k;\r\n            for (k = 1; j >= 10; j /= 10) k++;\r\n\r\n            // if i != k the length has increased.\r\n            if (i != k) {\r\n              x.e++;\r\n              if (xd[0] == BASE) xd[0] = 1;\r\n            }\r\n\r\n            break;\r\n          } else {\r\n            xd[xdi] += k;\r\n            if (xd[xdi] != BASE) break;\r\n            xd[xdi--] = 0;\r\n            k = 1;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n    }\r\n\r\n    if (external) {\r\n\r\n      // Overflow?\r\n      if (x.e > Ctor.maxE) {\r\n\r\n        // Infinity.\r\n        x.d = null;\r\n        x.e = NaN;\r\n\r\n      // Underflow?\r\n      } else if (x.e < Ctor.minE) {\r\n\r\n        // Zero.\r\n        x.e = 0;\r\n        x.d = [0];\r\n        // Ctor.underflow = true;\r\n      } // else Ctor.underflow = false;\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function finiteToString(x, isExp, sd) {\r\n    if (!x.isFinite()) return nonFiniteToString(x);\r\n    var k,\r\n      e = x.e,\r\n      str = digitsToString(x.d),\r\n      len = str.length;\r\n\r\n    if (isExp) {\r\n      if (sd && (k = sd - len) > 0) {\r\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n      } else if (len > 1) {\r\n        str = str.charAt(0) + '.' + str.slice(1);\r\n      }\r\n\r\n      str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\r\n    } else if (e < 0) {\r\n      str = '0.' + getZeroString(-e - 1) + str;\r\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n    } else if (e >= len) {\r\n      str += getZeroString(e + 1 - len);\r\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n    } else {\r\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n      if (sd && (k = sd - len) > 0) {\r\n        if (e + 1 === len) str += '.';\r\n        str += getZeroString(k);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // Calculate the base 10 exponent from the base 1e7 exponent.\r\n  function getBase10Exponent(digits, e) {\r\n    var w = digits[0];\r\n\r\n    // Add the number of digits of the first word of the digits array.\r\n    for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\r\n    return e;\r\n  }\r\n\r\n\r\n  function getLn10(Ctor, sd, pr) {\r\n    if (sd > LN10_PRECISION) {\r\n\r\n      // Reset global state in case the exception is caught.\r\n      external = true;\r\n      if (pr) Ctor.precision = pr;\r\n      throw Error(precisionLimitExceeded);\r\n    }\r\n    return finalise(new Ctor(LN10), sd, 1, true);\r\n  }\r\n\r\n\r\n  function getPi(Ctor, sd, rm) {\r\n    if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\r\n    return finalise(new Ctor(PI), sd, rm, true);\r\n  }\r\n\r\n\r\n  function getPrecision(digits) {\r\n    var w = digits.length - 1,\r\n      len = w * LOG_BASE + 1;\r\n\r\n    w = digits[w];\r\n\r\n    // If non-zero...\r\n    if (w) {\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      for (; w % 10 == 0; w /= 10) len--;\r\n\r\n      // Add the number of digits of the first word.\r\n      for (w = digits[0]; w >= 10; w /= 10) len++;\r\n    }\r\n\r\n    return len;\r\n  }\r\n\r\n\r\n  function getZeroString(k) {\r\n    var zs = '';\r\n    for (; k--;) zs += '0';\r\n    return zs;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n   * integer of type number.\r\n   *\r\n   * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n   *\r\n   */\r\n  function intPow(Ctor, x, n, pr) {\r\n    var isTruncated,\r\n      r = new Ctor(1),\r\n\r\n      // Max n of 9007199254740991 takes 53 loop iterations.\r\n      // Maximum digits array length; leaves [28, 34] guard digits.\r\n      k = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n    external = false;\r\n\r\n    for (;;) {\r\n      if (n % 2) {\r\n        r = r.times(x);\r\n        if (truncate(r.d, k)) isTruncated = true;\r\n      }\r\n\r\n      n = mathfloor(n / 2);\r\n      if (n === 0) {\r\n\r\n        // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\r\n        n = r.d.length - 1;\r\n        if (isTruncated && r.d[n] === 0) ++r.d[n];\r\n        break;\r\n      }\r\n\r\n      x = x.times(x);\r\n      truncate(x.d, k);\r\n    }\r\n\r\n    external = true;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  function isOdd(n) {\r\n    return n.d[n.d.length - 1] & 1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Handle `max` and `min`. `ltgt` is 'lt' or 'gt'.\r\n   */\r\n  function maxOrMin(Ctor, args, ltgt) {\r\n    var y,\r\n      x = new Ctor(args[0]),\r\n      i = 0;\r\n\r\n    for (; ++i < args.length;) {\r\n      y = new Ctor(args[i]);\r\n      if (!y.s) {\r\n        x = y;\r\n        break;\r\n      } else if (x[ltgt](y)) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   * Taylor/Maclaurin series.\r\n   *\r\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n   *\r\n   * Argument reduction:\r\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n   *   exp(x) = exp(x / 2^k)^(2^k)\r\n   *\r\n   * Previously, the argument was initially reduced by\r\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n   * found to be slower than just dividing repeatedly by 32 as above.\r\n   *\r\n   * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n   * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n   *\r\n   *  exp(Infinity)  = Infinity\r\n   *  exp(-Infinity) = 0\r\n   *  exp(NaN)       = NaN\r\n   *  exp(±0)        = 1\r\n   *\r\n   *  exp(x) is non-terminating for any finite, non-zero x.\r\n   *\r\n   *  The result will always be correctly rounded.\r\n   *\r\n   */\r\n  function naturalExponential(x, sd) {\r\n    var denominator, guard, j, pow, sum, t, wpr,\r\n      rep = 0,\r\n      i = 0,\r\n      k = 0,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // 0/NaN/Infinity?\r\n    if (!x.d || !x.d[0] || x.e > 17) {\r\n\r\n      return new Ctor(x.d\r\n        ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\r\n        : x.s ? x.s < 0 ? 0 : x : 0 / 0);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    t = new Ctor(0.03125);\r\n\r\n    // while abs(x) >= 0.1\r\n    while (x.e > -2) {\r\n\r\n      // x = x / 2^5\r\n      x = x.times(t);\r\n      k += 5;\r\n    }\r\n\r\n    // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\r\n    // necessary to ensure the first 4 rounding digits are correct.\r\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n    wpr += guard;\r\n    denominator = pow = sum = new Ctor(1);\r\n    Ctor.precision = wpr;\r\n\r\n    for (;;) {\r\n      pow = finalise(pow.times(x), wpr, 1);\r\n      denominator = denominator.times(++i);\r\n      t = sum.plus(divide(pow, denominator, wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        j = k;\r\n        while (j--) sum = finalise(sum.times(sum), wpr, 1);\r\n\r\n        // Check to see if the first 4 rounding digits are [49]999.\r\n        // If so, repeat the summation with a higher precision, otherwise\r\n        // e.g. with precision: 18, rounding: 1\r\n        // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n\r\n          if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += 10;\r\n            denominator = pow = t = new Ctor(1);\r\n            i = 0;\r\n            rep++;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   *  ln(-n)        = NaN\r\n   *  ln(0)         = -Infinity\r\n   *  ln(-0)        = -Infinity\r\n   *  ln(1)         = 0\r\n   *  ln(Infinity)  = Infinity\r\n   *  ln(-Infinity) = NaN\r\n   *  ln(NaN)       = NaN\r\n   *\r\n   *  ln(n) (n != 1) is non-terminating.\r\n   *\r\n   */\r\n  function naturalLogarithm(y, sd) {\r\n    var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\r\n      n = 1,\r\n      guard = 10,\r\n      x = y,\r\n      xd = x.d,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // Is x negative or Infinity, NaN, 0 or 1?\r\n    if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\r\n      return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    Ctor.precision = wpr += guard;\r\n    c = digitsToString(xd);\r\n    c0 = c.charAt(0);\r\n\r\n    if (Math.abs(e = x.e) < 1.5e15) {\r\n\r\n      // Argument reduction.\r\n      // The series converges faster the closer the argument is to 1, so using\r\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n      // later be divided by this number, then separate out the power of 10 using\r\n      // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n      // max n is 6 (gives 0.7 - 1.3)\r\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n        x = x.times(y);\r\n        c = digitsToString(x.d);\r\n        c0 = c.charAt(0);\r\n        n++;\r\n      }\r\n\r\n      e = x.e;\r\n\r\n      if (c0 > 1) {\r\n        x = new Ctor('0.' + c);\r\n        e++;\r\n      } else {\r\n        x = new Ctor(c0 + '.' + c.slice(1));\r\n      }\r\n    } else {\r\n\r\n      // The argument reduction method above may result in overflow if the argument y is a massive\r\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n      x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n      Ctor.precision = pr;\r\n\r\n      return sd == null ? finalise(x, pr, rm, external = true) : x;\r\n    }\r\n\r\n    // x1 is x reduced to a value near 1.\r\n    x1 = x;\r\n\r\n    // Taylor series.\r\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n    sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\r\n    x2 = finalise(x.times(x), wpr, 1);\r\n    denominator = 3;\r\n\r\n    for (;;) {\r\n      numerator = finalise(numerator.times(x2), wpr, 1);\r\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        sum = sum.times(2);\r\n\r\n        // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\r\n        // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\r\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n        sum = divide(sum, new Ctor(n), wpr, 1);\r\n\r\n        // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n        // been repeated previously) and the first 4 rounding digits 9999?\r\n        // If so, restart the summation with a higher precision, otherwise\r\n        // e.g. with precision: 12, rounding: 1\r\n        // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n          if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += guard;\r\n            t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\r\n            x2 = finalise(x.times(x), wpr, 1);\r\n            denominator = rep = 1;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n      denominator += 2;\r\n    }\r\n  }\r\n\r\n\r\n  // ±Infinity, NaN.\r\n  function nonFiniteToString(x) {\r\n    // Unsigned.\r\n    return String(x.s * x.s / 0);\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from string `str`.\r\n   */\r\n  function parseDecimal(x, str) {\r\n    var e, i, len;\r\n\r\n    // Decimal point?\r\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = str.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +str.slice(i + 1);\r\n      str = str.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\r\n    str = str.slice(i, len);\r\n\r\n    if (str) {\r\n      len -= i;\r\n      x.e = e = e - i - 1;\r\n      x.d = [];\r\n\r\n      // Transform base\r\n\r\n      // e is the base 10 exponent.\r\n      // i is where to slice str to get the first word of the digits array.\r\n      i = (e + 1) % LOG_BASE;\r\n      if (e < 0) i += LOG_BASE;\r\n\r\n      if (i < len) {\r\n        if (i) x.d.push(+str.slice(0, i));\r\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n        str = str.slice(i);\r\n        i = LOG_BASE - str.length;\r\n      } else {\r\n        i -= len;\r\n      }\r\n\r\n      for (; i--;) str += '0';\r\n      x.d.push(+str);\r\n\r\n      if (external) {\r\n\r\n        // Overflow?\r\n        if (x.e > x.constructor.maxE) {\r\n\r\n          // Infinity.\r\n          x.d = null;\r\n          x.e = NaN;\r\n\r\n        // Underflow?\r\n        } else if (x.e < x.constructor.minE) {\r\n\r\n          // Zero.\r\n          x.e = 0;\r\n          x.d = [0];\r\n          // x.constructor.underflow = true;\r\n        } // else x.constructor.underflow = false;\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.e = 0;\r\n      x.d = [0];\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n   */\r\n  function parseOther(x, str) {\r\n    var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\r\n\r\n    if (str === 'Infinity' || str === 'NaN') {\r\n      if (!+str) x.s = NaN;\r\n      x.e = NaN;\r\n      x.d = null;\r\n      return x;\r\n    }\r\n\r\n    if (isHex.test(str))  {\r\n      base = 16;\r\n      str = str.toLowerCase();\r\n    } else if (isBinary.test(str))  {\r\n      base = 2;\r\n    } else if (isOctal.test(str))  {\r\n      base = 8;\r\n    } else {\r\n      throw Error(invalidArgument + str);\r\n    }\r\n\r\n    // Is there a binary exponent part?\r\n    i = str.search(/p/i);\r\n\r\n    if (i > 0) {\r\n      p = +str.slice(i + 1);\r\n      str = str.substring(2, i);\r\n    } else {\r\n      str = str.slice(2);\r\n    }\r\n\r\n    // Convert `str` as an integer then divide the result by `base` raised to a power such that the\r\n    // fraction part will be restored.\r\n    i = str.indexOf('.');\r\n    isFloat = i >= 0;\r\n    Ctor = x.constructor;\r\n\r\n    if (isFloat) {\r\n      str = str.replace('.', '');\r\n      len = str.length;\r\n      i = len - i;\r\n\r\n      // log[10](16) = 1.2041... , log[10](88) = 1.9444....\r\n      divisor = intPow(Ctor, new Ctor(base), i, i * 2);\r\n    }\r\n\r\n    xd = convertBase(str, base, BASE);\r\n    xe = xd.length - 1;\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xe; xd[i] === 0; --i) xd.pop();\r\n    if (i < 0) return new Ctor(x.s * 0);\r\n    x.e = getBase10Exponent(xd, xe);\r\n    x.d = xd;\r\n    external = false;\r\n\r\n    // At what precision to perform the division to ensure exact conversion?\r\n    // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\r\n    // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\r\n    // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\r\n    // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\r\n    // Therefore using 4 * the number of digits of str will always be enough.\r\n    if (isFloat) x = divide(x, divisor, len * 4);\r\n\r\n    // Multiply by the binary exponent part if present.\r\n    if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\r\n    external = true;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function sine(Ctor, x) {\r\n    var k,\r\n      len = x.d.length;\r\n\r\n    if (len < 3) return taylorSeries(Ctor, 2, x, x);\r\n\r\n    // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\r\n    // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\r\n    // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    k = 1.4 * Math.sqrt(len);\r\n    k = k > 16 ? 16 : k | 0;\r\n\r\n    x = x.times(1 / tinyPow(5, k));\r\n    x = taylorSeries(Ctor, 2, x, x);\r\n\r\n    // Reverse argument reduction\r\n    var sin2_x,\r\n      d5 = new Ctor(5),\r\n      d16 = new Ctor(16),\r\n      d20 = new Ctor(20);\r\n    for (; k--;) {\r\n      sin2_x = x.times(x);\r\n      x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  // Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\r\n  function taylorSeries(Ctor, n, x, y, isHyperbolic) {\r\n    var j, t, u, x2,\r\n      i = 1,\r\n      pr = Ctor.precision,\r\n      k = Math.ceil(pr / LOG_BASE);\r\n\r\n    external = false;\r\n    x2 = x.times(x);\r\n    u = new Ctor(y);\r\n\r\n    for (;;) {\r\n      t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      u = isHyperbolic ? y.plus(t) : y.minus(t);\r\n      y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      t = u.plus(y);\r\n\r\n      if (t.d[k] !== void 0) {\r\n        for (j = k; t.d[j] === u.d[j] && j--;);\r\n        if (j == -1) break;\r\n      }\r\n\r\n      j = u;\r\n      u = y;\r\n      y = t;\r\n      t = j;\r\n      i++;\r\n    }\r\n\r\n    external = true;\r\n    t.d.length = k + 1;\r\n\r\n    return t;\r\n  }\r\n\r\n\r\n  // Exponent e must be positive and non-zero.\r\n  function tinyPow(b, e) {\r\n    var n = b;\r\n    while (--e) n *= b;\r\n    return n;\r\n  }\r\n\r\n\r\n  // Return the absolute value of `x` reduced to less than or equal to half pi.\r\n  function toLessThanHalfPi(Ctor, x) {\r\n    var t,\r\n      isNeg = x.s < 0,\r\n      pi = getPi(Ctor, Ctor.precision, 1),\r\n      halfPi = pi.times(0.5);\r\n\r\n    x = x.abs();\r\n\r\n    if (x.lte(halfPi)) {\r\n      quadrant = isNeg ? 4 : 1;\r\n      return x;\r\n    }\r\n\r\n    t = x.divToInt(pi);\r\n\r\n    if (t.isZero()) {\r\n      quadrant = isNeg ? 3 : 2;\r\n    } else {\r\n      x = x.minus(t.times(pi));\r\n\r\n      // 0 <= x < pi\r\n      if (x.lte(halfPi)) {\r\n        quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\r\n        return x;\r\n      }\r\n\r\n      quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\r\n    }\r\n\r\n    return x.minus(pi).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return the value of Decimal `x` as a string in base `baseOut`.\r\n   *\r\n   * If the optional `sd` argument is present include a binary exponent suffix.\r\n   */\r\n  function toStringBinary(x, baseOut, sd, rm) {\r\n    var base, e, i, k, len, roundUp, str, xd, y,\r\n      Ctor = x.constructor,\r\n      isExp = sd !== void 0;\r\n\r\n    if (isExp) {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    } else {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    }\r\n\r\n    if (!x.isFinite()) {\r\n      str = nonFiniteToString(x);\r\n    } else {\r\n      str = finiteToString(x);\r\n      i = str.indexOf('.');\r\n\r\n      // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\r\n      // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\r\n      // minBinaryExponent = floor(decimalExponent * log[2](10))\r\n      // log[2](10) = 3.321928094887362347870319429489390175864\r\n\r\n      if (isExp) {\r\n        base = 2;\r\n        if (baseOut == 16) {\r\n          sd = sd * 4 - 3;\r\n        } else if (baseOut == 8) {\r\n          sd = sd * 3 - 2;\r\n        }\r\n      } else {\r\n        base = baseOut;\r\n      }\r\n\r\n      // Convert the number as an integer then divide the result by its base raised to a power such\r\n      // that the fraction part will be restored.\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        str = str.replace('.', '');\r\n        y = new Ctor(1);\r\n        y.e = str.length - i;\r\n        y.d = convertBase(finiteToString(y), 10, base);\r\n        y.e = y.d.length;\r\n      }\r\n\r\n      xd = convertBase(str, 10, base);\r\n      e = len = xd.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xd[--len] == 0;) xd.pop();\r\n\r\n      if (!xd[0]) {\r\n        str = isExp ? '0p+0' : '0';\r\n      } else {\r\n        if (i < 0) {\r\n          e--;\r\n        } else {\r\n          x = new Ctor(x);\r\n          x.d = xd;\r\n          x.e = e;\r\n          x = divide(x, y, sd, rm, 0, base);\r\n          xd = x.d;\r\n          e = x.e;\r\n          roundUp = inexact;\r\n        }\r\n\r\n        // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        i = xd[sd];\r\n        k = base / 2;\r\n        roundUp = roundUp || xd[sd + 1] !== void 0;\r\n\r\n        roundUp = rm < 4\r\n          ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\r\n          : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\r\n            rm === (x.s < 0 ? 8 : 7));\r\n\r\n        xd.length = sd;\r\n\r\n        if (roundUp) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (; ++xd[--sd] > base - 1;) {\r\n            xd[sd] = 0;\r\n            if (!sd) {\r\n              ++e;\r\n              xd.unshift(1);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n\r\n        // Add binary exponent suffix?\r\n        if (isExp) {\r\n          if (len > 1) {\r\n            if (baseOut == 16 || baseOut == 8) {\r\n              i = baseOut == 16 ? 4 : 3;\r\n              for (--len; len % i; len++) str += '0';\r\n              xd = convertBase(str, base, baseOut);\r\n              for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n              // xd[0] will always be be 1\r\n              for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n            } else {\r\n              str = str.charAt(0) + '.' + str.slice(1);\r\n            }\r\n          }\r\n\r\n          str =  str + (e < 0 ? 'p' : 'p+') + e;\r\n        } else if (e < 0) {\r\n          for (; ++e;) str = '0' + str;\r\n          str = '0.' + str;\r\n        } else {\r\n          if (++e > len) for (e -= len; e-- ;) str += '0';\r\n          else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\r\n        }\r\n      }\r\n\r\n      str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\r\n    }\r\n\r\n    return x.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Does not strip trailing zeros.\r\n  function truncate(arr, len) {\r\n    if (arr.length > len) {\r\n      arr.length = len;\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  // Decimal methods\r\n\r\n\r\n  /*\r\n   *  abs\r\n   *  acos\r\n   *  acosh\r\n   *  add\r\n   *  asin\r\n   *  asinh\r\n   *  atan\r\n   *  atanh\r\n   *  atan2\r\n   *  cbrt\r\n   *  ceil\r\n   *  clone\r\n   *  config\r\n   *  cos\r\n   *  cosh\r\n   *  div\r\n   *  exp\r\n   *  floor\r\n   *  hypot\r\n   *  ln\r\n   *  log\r\n   *  log2\r\n   *  log10\r\n   *  max\r\n   *  min\r\n   *  mod\r\n   *  mul\r\n   *  pow\r\n   *  random\r\n   *  round\r\n   *  set\r\n   *  sign\r\n   *  sin\r\n   *  sinh\r\n   *  sqrt\r\n   *  sub\r\n   *  tan\r\n   *  tanh\r\n   *  trunc\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function abs(x) {\r\n    return new this(x).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function acos(x) {\r\n    return new this(x).acos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function acosh(x) {\r\n    return new this(x).acosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function add(x, y) {\r\n    return new this(x).plus(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function asin(x) {\r\n    return new this(x).asin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function asinh(x) {\r\n    return new this(x).asinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function atan(x) {\r\n    return new this(x).atan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function atanh(x) {\r\n    return new this(x).atanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n   * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi, pi]\r\n   *\r\n   * y {number|string|Decimal} The y-coordinate.\r\n   * x {number|string|Decimal} The x-coordinate.\r\n   *\r\n   * atan2(±0, -0)               = ±pi\r\n   * atan2(±0, +0)               = ±0\r\n   * atan2(±0, -x)               = ±pi for x > 0\r\n   * atan2(±0, x)                = ±0 for x > 0\r\n   * atan2(-y, ±0)               = -pi/2 for y > 0\r\n   * atan2(y, ±0)                = pi/2 for y > 0\r\n   * atan2(±y, -Infinity)        = ±pi for finite y > 0\r\n   * atan2(±y, +Infinity)        = ±0 for finite y > 0\r\n   * atan2(±Infinity, x)         = ±pi/2 for finite x\r\n   * atan2(±Infinity, -Infinity) = ±3*pi/4\r\n   * atan2(±Infinity, +Infinity) = ±pi/4\r\n   * atan2(NaN, x) = NaN\r\n   * atan2(y, NaN) = NaN\r\n   *\r\n   */\r\n  function atan2(y, x) {\r\n    y = new this(y);\r\n    x = new this(x);\r\n    var r,\r\n      pr = this.precision,\r\n      rm = this.rounding,\r\n      wpr = pr + 4;\r\n\r\n    // Either NaN\r\n    if (!y.s || !x.s) {\r\n      r = new this(NaN);\r\n\r\n    // Both ±Infinity\r\n    } else if (!y.d && !x.d) {\r\n      r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\r\n      r.s = y.s;\r\n\r\n    // x is ±Infinity or y is ±0\r\n    } else if (!x.d || y.isZero()) {\r\n      r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\r\n      r.s = y.s;\r\n\r\n    // y is ±Infinity or x is ±0\r\n    } else if (!y.d || x.isZero()) {\r\n      r = getPi(this, wpr, 1).times(0.5);\r\n      r.s = y.s;\r\n\r\n    // Both non-zero and finite\r\n    } else if (x.s < 0) {\r\n      this.precision = wpr;\r\n      this.rounding = 1;\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n      x = getPi(this, wpr, 1);\r\n      this.precision = pr;\r\n      this.rounding = rm;\r\n      r = y.s < 0 ? r.minus(x) : r.plus(x);\r\n    } else {\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function cbrt(x) {\r\n    return new this(x).cbrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ceil(x) {\r\n    return finalise(x = new this(x), x.e + 1, 2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Configure global settings for a Decimal constructor.\r\n   *\r\n   * `obj` is an object with one or more of the following properties,\r\n   *\r\n   *   precision  {number}\r\n   *   rounding   {number}\r\n   *   toExpNeg   {number}\r\n   *   toExpPos   {number}\r\n   *   maxE       {number}\r\n   *   minE       {number}\r\n   *   modulo     {number}\r\n   *   crypto     {boolean|number}\r\n   *   defaults   {true}\r\n   *\r\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n   *\r\n   */\r\n  function config(obj) {\r\n    if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\r\n    var i, p, v,\r\n      useDefaults = obj.defaults === true,\r\n      ps = [\r\n        'precision', 1, MAX_DIGITS,\r\n        'rounding', 0, 8,\r\n        'toExpNeg', -EXP_LIMIT, 0,\r\n        'toExpPos', 0, EXP_LIMIT,\r\n        'maxE', 0, EXP_LIMIT,\r\n        'minE', -EXP_LIMIT, 0,\r\n        'modulo', 0, 9\r\n      ];\r\n\r\n    for (i = 0; i < ps.length; i += 3) {\r\n      if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\r\n      if ((v = obj[p]) !== void 0) {\r\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\r\n    if ((v = obj[p]) !== void 0) {\r\n      if (v === true || v === false || v === 0 || v === 1) {\r\n        if (v) {\r\n          if (typeof crypto != 'undefined' && crypto &&\r\n            (crypto.getRandomValues || crypto.randomBytes)) {\r\n            this[p] = true;\r\n          } else {\r\n            throw Error(cryptoUnavailable);\r\n          }\r\n        } else {\r\n          this[p] = false;\r\n        }\r\n      } else {\r\n        throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cos(x) {\r\n    return new this(x).cos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cosh(x) {\r\n    return new this(x).cosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n   * constructor.\r\n   *\r\n   */\r\n  function clone(obj) {\r\n    var i, p, ps;\r\n\r\n    /*\r\n     * The Decimal constructor and exported function.\r\n     * Return a new Decimal instance.\r\n     *\r\n     * v {number|string|Decimal} A numeric value.\r\n     *\r\n     */\r\n    function Decimal(v) {\r\n      var e, i, t,\r\n        x = this;\r\n\r\n      // Decimal called without new.\r\n      if (!(x instanceof Decimal)) return new Decimal(v);\r\n\r\n      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n      // which points to Object.\r\n      x.constructor = Decimal;\r\n\r\n      // Duplicate.\r\n      if (v instanceof Decimal) {\r\n        x.s = v.s;\r\n\r\n        if (external) {\r\n          if (!v.d || v.e > Decimal.maxE) {\r\n\r\n            // Infinity.\r\n            x.e = NaN;\r\n            x.d = null;\r\n          } else if (v.e < Decimal.minE) {\r\n\r\n            // Zero.\r\n            x.e = 0;\r\n            x.d = [0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.d = v.d.slice();\r\n          }\r\n        } else {\r\n          x.e = v.e;\r\n          x.d = v.d ? v.d.slice() : v.d;\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      t = typeof v;\r\n\r\n      if (t === 'number') {\r\n        if (v === 0) {\r\n          x.s = 1 / v < 0 ? -1 : 1;\r\n          x.e = 0;\r\n          x.d = [0];\r\n          return;\r\n        }\r\n\r\n        if (v < 0) {\r\n          v = -v;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 1;\r\n        }\r\n\r\n        // Fast path for small integers.\r\n        if (v === ~~v && v < 1e7) {\r\n          for (e = 0, i = v; i >= 10; i /= 10) e++;\r\n\r\n          if (external) {\r\n            if (e > Decimal.maxE) {\r\n              x.e = NaN;\r\n              x.d = null;\r\n            } else if (e < Decimal.minE) {\r\n              x.e = 0;\r\n              x.d = [0];\r\n            } else {\r\n              x.e = e;\r\n              x.d = [v];\r\n            }\r\n          } else {\r\n            x.e = e;\r\n            x.d = [v];\r\n          }\r\n\r\n          return;\r\n\r\n        // Infinity, NaN.\r\n        } else if (v * 0 !== 0) {\r\n          if (!v) x.s = NaN;\r\n          x.e = NaN;\r\n          x.d = null;\r\n          return;\r\n        }\r\n\r\n        return parseDecimal(x, v.toString());\r\n\r\n      } else if (t !== 'string') {\r\n        throw Error(invalidArgument + v);\r\n      }\r\n\r\n      // Minus sign?\r\n      if ((i = v.charCodeAt(0)) === 45) {\r\n        v = v.slice(1);\r\n        x.s = -1;\r\n      } else {\r\n        // Plus sign?\r\n        if (i === 43) v = v.slice(1);\r\n        x.s = 1;\r\n      }\r\n\r\n      return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\r\n    }\r\n\r\n    Decimal.prototype = P;\r\n\r\n    Decimal.ROUND_UP = 0;\r\n    Decimal.ROUND_DOWN = 1;\r\n    Decimal.ROUND_CEIL = 2;\r\n    Decimal.ROUND_FLOOR = 3;\r\n    Decimal.ROUND_HALF_UP = 4;\r\n    Decimal.ROUND_HALF_DOWN = 5;\r\n    Decimal.ROUND_HALF_EVEN = 6;\r\n    Decimal.ROUND_HALF_CEIL = 7;\r\n    Decimal.ROUND_HALF_FLOOR = 8;\r\n    Decimal.EUCLID = 9;\r\n\r\n    Decimal.config = Decimal.set = config;\r\n    Decimal.clone = clone;\r\n    Decimal.isDecimal = isDecimalInstance;\r\n\r\n    Decimal.abs = abs;\r\n    Decimal.acos = acos;\r\n    Decimal.acosh = acosh;        // ES6\r\n    Decimal.add = add;\r\n    Decimal.asin = asin;\r\n    Decimal.asinh = asinh;        // ES6\r\n    Decimal.atan = atan;\r\n    Decimal.atanh = atanh;        // ES6\r\n    Decimal.atan2 = atan2;\r\n    Decimal.cbrt = cbrt;          // ES6\r\n    Decimal.ceil = ceil;\r\n    Decimal.cos = cos;\r\n    Decimal.cosh = cosh;          // ES6\r\n    Decimal.div = div;\r\n    Decimal.exp = exp;\r\n    Decimal.floor = floor;\r\n    Decimal.hypot = hypot;        // ES6\r\n    Decimal.ln = ln;\r\n    Decimal.log = log;\r\n    Decimal.log10 = log10;        // ES6\r\n    Decimal.log2 = log2;          // ES6\r\n    Decimal.max = max;\r\n    Decimal.min = min;\r\n    Decimal.mod = mod;\r\n    Decimal.mul = mul;\r\n    Decimal.pow = pow;\r\n    Decimal.random = random;\r\n    Decimal.round = round;\r\n    Decimal.sign = sign;          // ES6\r\n    Decimal.sin = sin;\r\n    Decimal.sinh = sinh;          // ES6\r\n    Decimal.sqrt = sqrt;\r\n    Decimal.sub = sub;\r\n    Decimal.tan = tan;\r\n    Decimal.tanh = tanh;          // ES6\r\n    Decimal.trunc = trunc;        // ES6\r\n\r\n    if (obj === void 0) obj = {};\r\n    if (obj) {\r\n      if (obj.defaults !== true) {\r\n        ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\r\n        for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n      }\r\n    }\r\n\r\n    Decimal.config(obj);\r\n\r\n    return Decimal;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function div(x, y) {\r\n    return new this(x).div(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The power to which to raise the base of the natural log.\r\n   *\r\n   */\r\n  function exp(x) {\r\n    return new this(x).exp();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function floor(x) {\r\n    return finalise(x = new this(x), x.e + 1, 3);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function hypot() {\r\n    var i, n,\r\n      t = new this(0);\r\n\r\n    external = false;\r\n\r\n    for (i = 0; i < arguments.length;) {\r\n      n = new this(arguments[i++]);\r\n      if (!n.d) {\r\n        if (n.s) {\r\n          external = true;\r\n          return new this(1 / 0);\r\n        }\r\n        t = n;\r\n      } else if (t.d) {\r\n        t = t.plus(n.times(n));\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return t.sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  function isDecimalInstance(obj) {\r\n    return obj instanceof Decimal || obj && obj.name === '[object Decimal]' || false;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ln(x) {\r\n    return new this(x).ln();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n   * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * log[y](x)\r\n   *\r\n   * x {number|string|Decimal} The argument of the logarithm.\r\n   * y {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  function log(x, y) {\r\n    return new this(x).log(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log2(x) {\r\n    return new this(x).log(2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log10(x) {\r\n    return new this(x).log(10);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function max() {\r\n    return maxOrMin(this, arguments, 'lt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function min() {\r\n    return maxOrMin(this, arguments, 'gt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mod(x, y) {\r\n    return new this(x).mod(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mul(x, y) {\r\n    return new this(x).mul(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The base.\r\n   * y {number|string|Decimal} The exponent.\r\n   *\r\n   */\r\n  function pow(x, y) {\r\n    return new this(x).pow(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n   * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n   * are produced).\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n   *\r\n   */\r\n  function random(sd) {\r\n    var d, e, k, n,\r\n      i = 0,\r\n      r = new this(1),\r\n      rd = [];\r\n\r\n    if (sd === void 0) sd = this.precision;\r\n    else checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    k = Math.ceil(sd / LOG_BASE);\r\n\r\n    if (!this.crypto) {\r\n      for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n\r\n    // Browsers supporting crypto.getRandomValues.\r\n    } else if (crypto.getRandomValues) {\r\n      d = crypto.getRandomValues(new Uint32Array(k));\r\n\r\n      for (; i < k;) {\r\n        n = d[i];\r\n\r\n        // 0 <= n < 4294967296\r\n        // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n        if (n >= 4.29e9) {\r\n          d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\r\n        } else {\r\n\r\n          // 0 <= n <= 4289999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd[i++] = n % 1e7;\r\n        }\r\n      }\r\n\r\n    // Node.js supporting crypto.randomBytes.\r\n    } else if (crypto.randomBytes) {\r\n\r\n      // buffer\r\n      d = crypto.randomBytes(k *= 4);\r\n\r\n      for (; i < k;) {\r\n\r\n        // 0 <= n < 2147483648\r\n        n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\r\n\r\n        // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n        if (n >= 2.14e9) {\r\n          crypto.randomBytes(4).copy(d, i);\r\n        } else {\r\n\r\n          // 0 <= n <= 2139999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd.push(n % 1e7);\r\n          i += 4;\r\n        }\r\n      }\r\n\r\n      i = k / 4;\r\n    } else {\r\n      throw Error(cryptoUnavailable);\r\n    }\r\n\r\n    k = rd[--i];\r\n    sd %= LOG_BASE;\r\n\r\n    // Convert trailing digits to zeros according to sd.\r\n    if (k && sd) {\r\n      n = mathpow(10, LOG_BASE - sd);\r\n      rd[i] = (k / n | 0) * n;\r\n    }\r\n\r\n    // Remove trailing words which are zero.\r\n    for (; rd[i] === 0; i--) rd.pop();\r\n\r\n    // Zero?\r\n    if (i < 0) {\r\n      e = 0;\r\n      rd = [0];\r\n    } else {\r\n      e = -1;\r\n\r\n      // Remove leading words which are zero and adjust exponent accordingly.\r\n      for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\r\n\r\n      // Count the digits of the first word of rd to determine leading zeros.\r\n      for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\r\n\r\n      // Adjust the exponent for leading zeros of the first word of rd.\r\n      if (k < LOG_BASE) e -= LOG_BASE - k;\r\n    }\r\n\r\n    r.e = e;\r\n    r.d = rd;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n   *\r\n   * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function round(x) {\r\n    return finalise(x = new this(x), x.e + 1, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if x > 0,\r\n   *  -1    if x < 0,\r\n   *   0    if x is 0,\r\n   *  -0    if x is -0,\r\n   *   NaN  otherwise\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sign(x) {\r\n    x = new this(x);\r\n    return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sin(x) {\r\n    return new this(x).sin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sinh(x) {\r\n    return new this(x).sinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sqrt(x) {\r\n    return new this(x).sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function sub(x, y) {\r\n    return new this(x).sub(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tan(x) {\r\n    return new this(x).tan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tanh(x) {\r\n    return new this(x).tanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` truncated to an integer.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function trunc(x) {\r\n    return finalise(x = new this(x), x.e + 1, 1);\r\n  }\r\n\r\n\r\n  // Create and configure initial Decimal constructor.\r\n  Decimal = clone(DEFAULTS);\r\n\r\n  Decimal['default'] = Decimal.Decimal = Decimal;\r\n\r\n  // Create the internal constants from their string values.\r\n  LN10 = new Decimal(LN10);\r\n  PI = new Decimal(PI);\r\n\r\n\r\n  // Export.\r\n\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () {\r\n      return Decimal;\r\n    });\r\n\r\n  // Node and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    if (typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol') {\r\n      P[Symbol.for('nodejs.util.inspect.custom')] = P.toString;\r\n      P[Symbol.toStringTag] = 'Decimal';\r\n    }\r\n\r\n    module.exports = Decimal;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalScope) {\r\n      globalScope = typeof self != 'undefined' && self && self.self == self ? self : window;\r\n    }\r\n\r\n    noConflict = globalScope.Decimal;\r\n    Decimal.noConflict = function () {\r\n      globalScope.Decimal = noConflict;\r\n      return Decimal;\r\n    };\r\n\r\n    globalScope.Decimal = Decimal;\r\n  }\r\n})(this);\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/decimal.js/decimal.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":424,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":425,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":426,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":427,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":428,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":429,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":430,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":431,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":432,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":433,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":434,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":435,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":436,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":437,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":438,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":439,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":440,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":441,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":442,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":443,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":444,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":445,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":446,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":447,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":448,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":449,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":450,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":451,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":452,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":453,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":454,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":455,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":456,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":457,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":458,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":459,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":460,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":461,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":462,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":463,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":464,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":465,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":466,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":467,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":468,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":469,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":470,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":471,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":472,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":473,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":474,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":475,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":476,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":477,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":478,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":479,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":480,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":481,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":482,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":483,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":484,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":485,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":486,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":487,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":488,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":489,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":490,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":491,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":492,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":493,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":494,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":495,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":496,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":497,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":498,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":499,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":500,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":501,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":502,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":503,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":504,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":505,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":506,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":507,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":508,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":509,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":510,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":511,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":512,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":513,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":514,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":515,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":516,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":517,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":518,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":519,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":520,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":521,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":522,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":523,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":524,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":525,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":526,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":527,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":528,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":529,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":530,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":531,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":532,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":533,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":534,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":535,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":536,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":537,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":538,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":539,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":540,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":541,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":542,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":543,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":544,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":545,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":546,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":547,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":548,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":549,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":550,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":551,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":552,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":553,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":554,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":555,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":556,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":557,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":558,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":559,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":560,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":561,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":562,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":563,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":564,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":565,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":566,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":567,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":568,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":569,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":570,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":571,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":572,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":573,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":574,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":575,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":576,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":577,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":578,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":579,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":580,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":581,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":582,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":583,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":584,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":585,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":586,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":587,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":588,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":589,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":590,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":591,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":592,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":593,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":594,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":595,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":596,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":597,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":598,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":599,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":600,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":601,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":602,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":603,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":604,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":605,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":606,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":607,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":608,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":609,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":610,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":611,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":612,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":613,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":614,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":615,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":616,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":617,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":618,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":619,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":620,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":621,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":622,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":623,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":624,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":625,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":626,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":627,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":628,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":629,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":630,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":631,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":632,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":633,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":634,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":635,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":636,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":637,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":638,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":639,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":640,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":641,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":642,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":643,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":644,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":645,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":646,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":647,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":648,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":649,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":650,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":651,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":652,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":653,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":654,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":655,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":656,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":657,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":658,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":659,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":660,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":661,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":662,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":663,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":664,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":665,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":666,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":667,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":668,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":669,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":670,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":671,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":672,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":673,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":674,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":675,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":676,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":677,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":678,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":679,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":680,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":681,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":682,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":683,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":684,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":685,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":686,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":687,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":688,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":689,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":690,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":691,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":692,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":693,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":694,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":695,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":696,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":697,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":698,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":699,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":700,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":701,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":702,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":703,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":704,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":705,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":706,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":707,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":708,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":709,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":710,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":711,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":712,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":713,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":714,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":715,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":716,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":717,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":718,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":719,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":720,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":721,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":722,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":723,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":724,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":725,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":726,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":727,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":728,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":729,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":730,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":731,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":732,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":733,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":734,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":735,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":736,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":737,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":738,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":739,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":740,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":741,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":742,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":743,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":744,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":745,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":746,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":747,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":748,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":749,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":750,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":751,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":752,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":753,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":754,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":755,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":756,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":757,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":758,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":759,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":760,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":761,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":762,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":763,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":764,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":765,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":766,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":767,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":768,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":769,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":770,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":771,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":772,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":773,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":774,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":775,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":776,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":777,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":778,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":779,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":780,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":781,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":782,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":783,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":784,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":785,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":786,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":787,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":788,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":789,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":790,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":791,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":792,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":793,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":794,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":795,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":796,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":797,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":798,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":799,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":800,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":801,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":802,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":803,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":804,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":805,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":806,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":807,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":808,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":809,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":810,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":811,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":812,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":813,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":814,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":815,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":816,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":817,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":818,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":819,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":820,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":821,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":822,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":823,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":824,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":825,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":826,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":827,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":828,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":829,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":830,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":831,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":832,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":833,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":834,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":835,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":836,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":837,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":838,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":839,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":840,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":841,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":842,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":843,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":844,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":845,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":846,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":847,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":848,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":849,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":850,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":851,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":852,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":853,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":854,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":855,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":856,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":857,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":858,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":859,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":860,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":861,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":862,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":863,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":864,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":865,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":866,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":867,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":868,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":869,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":870,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":871,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":872,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":873,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":874,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":875,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":876,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":877,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":878,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":879,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":880,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":881,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":882,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":883,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":884,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":885,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":886,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":887,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":888,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":889,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":890,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":891,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":892,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":893,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":894,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":895,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":896,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":897,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":898,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":899,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":900,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":901,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":902,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":903,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":904,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":905,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":906,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":907,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":908,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":909,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":910,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":911,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":912,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":913,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":914,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":915,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":916,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":917,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":918,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":919,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":920,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":921,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":922,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":923,"column":0},"generated":{"line":924,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":924,"column":0},"generated":{"line":925,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":925,"column":0},"generated":{"line":926,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":926,"column":0},"generated":{"line":927,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":927,"column":0},"generated":{"line":928,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":928,"column":0},"generated":{"line":929,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":929,"column":0},"generated":{"line":930,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":930,"column":0},"generated":{"line":931,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":931,"column":0},"generated":{"line":932,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":932,"column":0},"generated":{"line":933,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":933,"column":0},"generated":{"line":934,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":934,"column":0},"generated":{"line":935,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":935,"column":0},"generated":{"line":936,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":936,"column":0},"generated":{"line":937,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":937,"column":0},"generated":{"line":938,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":938,"column":0},"generated":{"line":939,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":939,"column":0},"generated":{"line":940,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":940,"column":0},"generated":{"line":941,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":941,"column":0},"generated":{"line":942,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":942,"column":0},"generated":{"line":943,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":943,"column":0},"generated":{"line":944,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":944,"column":0},"generated":{"line":945,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":945,"column":0},"generated":{"line":946,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":946,"column":0},"generated":{"line":947,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":947,"column":0},"generated":{"line":948,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":948,"column":0},"generated":{"line":949,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":949,"column":0},"generated":{"line":950,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":950,"column":0},"generated":{"line":951,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":951,"column":0},"generated":{"line":952,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":952,"column":0},"generated":{"line":953,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":953,"column":0},"generated":{"line":954,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":954,"column":0},"generated":{"line":955,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":955,"column":0},"generated":{"line":956,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":956,"column":0},"generated":{"line":957,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":957,"column":0},"generated":{"line":958,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":958,"column":0},"generated":{"line":959,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":959,"column":0},"generated":{"line":960,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":960,"column":0},"generated":{"line":961,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":961,"column":0},"generated":{"line":962,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":962,"column":0},"generated":{"line":963,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":963,"column":0},"generated":{"line":964,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":964,"column":0},"generated":{"line":965,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":965,"column":0},"generated":{"line":966,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":966,"column":0},"generated":{"line":967,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":967,"column":0},"generated":{"line":968,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":968,"column":0},"generated":{"line":969,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":969,"column":0},"generated":{"line":970,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":970,"column":0},"generated":{"line":971,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":971,"column":0},"generated":{"line":972,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":972,"column":0},"generated":{"line":973,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":973,"column":0},"generated":{"line":974,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":974,"column":0},"generated":{"line":975,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":975,"column":0},"generated":{"line":976,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":976,"column":0},"generated":{"line":977,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":977,"column":0},"generated":{"line":978,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":978,"column":0},"generated":{"line":979,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":979,"column":0},"generated":{"line":980,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":980,"column":0},"generated":{"line":981,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":981,"column":0},"generated":{"line":982,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":982,"column":0},"generated":{"line":983,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":983,"column":0},"generated":{"line":984,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":984,"column":0},"generated":{"line":985,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":985,"column":0},"generated":{"line":986,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":986,"column":0},"generated":{"line":987,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":987,"column":0},"generated":{"line":988,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":988,"column":0},"generated":{"line":989,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":989,"column":0},"generated":{"line":990,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":990,"column":0},"generated":{"line":991,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":991,"column":0},"generated":{"line":992,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":992,"column":0},"generated":{"line":993,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":993,"column":0},"generated":{"line":994,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":994,"column":0},"generated":{"line":995,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":995,"column":0},"generated":{"line":996,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":996,"column":0},"generated":{"line":997,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":997,"column":0},"generated":{"line":998,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":998,"column":0},"generated":{"line":999,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":999,"column":0},"generated":{"line":1000,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1000,"column":0},"generated":{"line":1001,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1001,"column":0},"generated":{"line":1002,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1002,"column":0},"generated":{"line":1003,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1003,"column":0},"generated":{"line":1004,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1004,"column":0},"generated":{"line":1005,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1005,"column":0},"generated":{"line":1006,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1006,"column":0},"generated":{"line":1007,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1007,"column":0},"generated":{"line":1008,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1008,"column":0},"generated":{"line":1009,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1009,"column":0},"generated":{"line":1010,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1010,"column":0},"generated":{"line":1011,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1011,"column":0},"generated":{"line":1012,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1012,"column":0},"generated":{"line":1013,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1013,"column":0},"generated":{"line":1014,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1014,"column":0},"generated":{"line":1015,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1015,"column":0},"generated":{"line":1016,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1016,"column":0},"generated":{"line":1017,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1017,"column":0},"generated":{"line":1018,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1018,"column":0},"generated":{"line":1019,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1019,"column":0},"generated":{"line":1020,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1020,"column":0},"generated":{"line":1021,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1021,"column":0},"generated":{"line":1022,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1022,"column":0},"generated":{"line":1023,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1023,"column":0},"generated":{"line":1024,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1024,"column":0},"generated":{"line":1025,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1025,"column":0},"generated":{"line":1026,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1026,"column":0},"generated":{"line":1027,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1027,"column":0},"generated":{"line":1028,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1028,"column":0},"generated":{"line":1029,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1029,"column":0},"generated":{"line":1030,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1030,"column":0},"generated":{"line":1031,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1031,"column":0},"generated":{"line":1032,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1032,"column":0},"generated":{"line":1033,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1033,"column":0},"generated":{"line":1034,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1034,"column":0},"generated":{"line":1035,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1035,"column":0},"generated":{"line":1036,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1036,"column":0},"generated":{"line":1037,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1037,"column":0},"generated":{"line":1038,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1038,"column":0},"generated":{"line":1039,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1039,"column":0},"generated":{"line":1040,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1040,"column":0},"generated":{"line":1041,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1041,"column":0},"generated":{"line":1042,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1042,"column":0},"generated":{"line":1043,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1043,"column":0},"generated":{"line":1044,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1044,"column":0},"generated":{"line":1045,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1045,"column":0},"generated":{"line":1046,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1046,"column":0},"generated":{"line":1047,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1047,"column":0},"generated":{"line":1048,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1048,"column":0},"generated":{"line":1049,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1049,"column":0},"generated":{"line":1050,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1050,"column":0},"generated":{"line":1051,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1051,"column":0},"generated":{"line":1052,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1052,"column":0},"generated":{"line":1053,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1053,"column":0},"generated":{"line":1054,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1054,"column":0},"generated":{"line":1055,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1055,"column":0},"generated":{"line":1056,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1056,"column":0},"generated":{"line":1057,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1057,"column":0},"generated":{"line":1058,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1058,"column":0},"generated":{"line":1059,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1059,"column":0},"generated":{"line":1060,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1060,"column":0},"generated":{"line":1061,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1061,"column":0},"generated":{"line":1062,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1062,"column":0},"generated":{"line":1063,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1063,"column":0},"generated":{"line":1064,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1064,"column":0},"generated":{"line":1065,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1065,"column":0},"generated":{"line":1066,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1066,"column":0},"generated":{"line":1067,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1067,"column":0},"generated":{"line":1068,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1068,"column":0},"generated":{"line":1069,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1069,"column":0},"generated":{"line":1070,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1070,"column":0},"generated":{"line":1071,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1071,"column":0},"generated":{"line":1072,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1072,"column":0},"generated":{"line":1073,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1073,"column":0},"generated":{"line":1074,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1074,"column":0},"generated":{"line":1075,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1075,"column":0},"generated":{"line":1076,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1076,"column":0},"generated":{"line":1077,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1077,"column":0},"generated":{"line":1078,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1078,"column":0},"generated":{"line":1079,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1079,"column":0},"generated":{"line":1080,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1080,"column":0},"generated":{"line":1081,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1081,"column":0},"generated":{"line":1082,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1082,"column":0},"generated":{"line":1083,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1083,"column":0},"generated":{"line":1084,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1084,"column":0},"generated":{"line":1085,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1085,"column":0},"generated":{"line":1086,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1086,"column":0},"generated":{"line":1087,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1087,"column":0},"generated":{"line":1088,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1088,"column":0},"generated":{"line":1089,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1089,"column":0},"generated":{"line":1090,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1090,"column":0},"generated":{"line":1091,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1091,"column":0},"generated":{"line":1092,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1092,"column":0},"generated":{"line":1093,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1093,"column":0},"generated":{"line":1094,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1094,"column":0},"generated":{"line":1095,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1095,"column":0},"generated":{"line":1096,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1096,"column":0},"generated":{"line":1097,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1097,"column":0},"generated":{"line":1098,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1098,"column":0},"generated":{"line":1099,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1099,"column":0},"generated":{"line":1100,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1100,"column":0},"generated":{"line":1101,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1101,"column":0},"generated":{"line":1102,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1102,"column":0},"generated":{"line":1103,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1103,"column":0},"generated":{"line":1104,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1104,"column":0},"generated":{"line":1105,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1105,"column":0},"generated":{"line":1106,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1106,"column":0},"generated":{"line":1107,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1107,"column":0},"generated":{"line":1108,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1108,"column":0},"generated":{"line":1109,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1109,"column":0},"generated":{"line":1110,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1110,"column":0},"generated":{"line":1111,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1111,"column":0},"generated":{"line":1112,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1112,"column":0},"generated":{"line":1113,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1113,"column":0},"generated":{"line":1114,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1114,"column":0},"generated":{"line":1115,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1115,"column":0},"generated":{"line":1116,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1116,"column":0},"generated":{"line":1117,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1117,"column":0},"generated":{"line":1118,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1118,"column":0},"generated":{"line":1119,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1119,"column":0},"generated":{"line":1120,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1120,"column":0},"generated":{"line":1121,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1121,"column":0},"generated":{"line":1122,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1122,"column":0},"generated":{"line":1123,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1123,"column":0},"generated":{"line":1124,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1124,"column":0},"generated":{"line":1125,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1125,"column":0},"generated":{"line":1126,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1126,"column":0},"generated":{"line":1127,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1127,"column":0},"generated":{"line":1128,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1128,"column":0},"generated":{"line":1129,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1129,"column":0},"generated":{"line":1130,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1130,"column":0},"generated":{"line":1131,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1131,"column":0},"generated":{"line":1132,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1132,"column":0},"generated":{"line":1133,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1133,"column":0},"generated":{"line":1134,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1134,"column":0},"generated":{"line":1135,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1135,"column":0},"generated":{"line":1136,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1136,"column":0},"generated":{"line":1137,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1137,"column":0},"generated":{"line":1138,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1138,"column":0},"generated":{"line":1139,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1139,"column":0},"generated":{"line":1140,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1140,"column":0},"generated":{"line":1141,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1141,"column":0},"generated":{"line":1142,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1142,"column":0},"generated":{"line":1143,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1143,"column":0},"generated":{"line":1144,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1144,"column":0},"generated":{"line":1145,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1145,"column":0},"generated":{"line":1146,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1146,"column":0},"generated":{"line":1147,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1147,"column":0},"generated":{"line":1148,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1148,"column":0},"generated":{"line":1149,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1149,"column":0},"generated":{"line":1150,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1150,"column":0},"generated":{"line":1151,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1151,"column":0},"generated":{"line":1152,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1152,"column":0},"generated":{"line":1153,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1153,"column":0},"generated":{"line":1154,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1154,"column":0},"generated":{"line":1155,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1155,"column":0},"generated":{"line":1156,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1156,"column":0},"generated":{"line":1157,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1157,"column":0},"generated":{"line":1158,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1158,"column":0},"generated":{"line":1159,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1159,"column":0},"generated":{"line":1160,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1160,"column":0},"generated":{"line":1161,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1161,"column":0},"generated":{"line":1162,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1162,"column":0},"generated":{"line":1163,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1163,"column":0},"generated":{"line":1164,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1164,"column":0},"generated":{"line":1165,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1165,"column":0},"generated":{"line":1166,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1166,"column":0},"generated":{"line":1167,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1167,"column":0},"generated":{"line":1168,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1168,"column":0},"generated":{"line":1169,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1169,"column":0},"generated":{"line":1170,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1170,"column":0},"generated":{"line":1171,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1171,"column":0},"generated":{"line":1172,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1172,"column":0},"generated":{"line":1173,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1173,"column":0},"generated":{"line":1174,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1174,"column":0},"generated":{"line":1175,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1175,"column":0},"generated":{"line":1176,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1176,"column":0},"generated":{"line":1177,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1177,"column":0},"generated":{"line":1178,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1178,"column":0},"generated":{"line":1179,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1179,"column":0},"generated":{"line":1180,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1180,"column":0},"generated":{"line":1181,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1181,"column":0},"generated":{"line":1182,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1182,"column":0},"generated":{"line":1183,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1183,"column":0},"generated":{"line":1184,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1184,"column":0},"generated":{"line":1185,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1185,"column":0},"generated":{"line":1186,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1186,"column":0},"generated":{"line":1187,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1187,"column":0},"generated":{"line":1188,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1188,"column":0},"generated":{"line":1189,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1189,"column":0},"generated":{"line":1190,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1190,"column":0},"generated":{"line":1191,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1191,"column":0},"generated":{"line":1192,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1192,"column":0},"generated":{"line":1193,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1193,"column":0},"generated":{"line":1194,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1194,"column":0},"generated":{"line":1195,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1195,"column":0},"generated":{"line":1196,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1196,"column":0},"generated":{"line":1197,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1197,"column":0},"generated":{"line":1198,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1198,"column":0},"generated":{"line":1199,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1199,"column":0},"generated":{"line":1200,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1200,"column":0},"generated":{"line":1201,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1201,"column":0},"generated":{"line":1202,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1202,"column":0},"generated":{"line":1203,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1203,"column":0},"generated":{"line":1204,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1204,"column":0},"generated":{"line":1205,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1205,"column":0},"generated":{"line":1206,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1206,"column":0},"generated":{"line":1207,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1207,"column":0},"generated":{"line":1208,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1208,"column":0},"generated":{"line":1209,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1209,"column":0},"generated":{"line":1210,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1210,"column":0},"generated":{"line":1211,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1211,"column":0},"generated":{"line":1212,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1212,"column":0},"generated":{"line":1213,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1213,"column":0},"generated":{"line":1214,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1214,"column":0},"generated":{"line":1215,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1215,"column":0},"generated":{"line":1216,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1216,"column":0},"generated":{"line":1217,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1217,"column":0},"generated":{"line":1218,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1218,"column":0},"generated":{"line":1219,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1219,"column":0},"generated":{"line":1220,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1220,"column":0},"generated":{"line":1221,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1221,"column":0},"generated":{"line":1222,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1222,"column":0},"generated":{"line":1223,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1223,"column":0},"generated":{"line":1224,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1224,"column":0},"generated":{"line":1225,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1225,"column":0},"generated":{"line":1226,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1226,"column":0},"generated":{"line":1227,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1227,"column":0},"generated":{"line":1228,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1228,"column":0},"generated":{"line":1229,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1229,"column":0},"generated":{"line":1230,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1230,"column":0},"generated":{"line":1231,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1231,"column":0},"generated":{"line":1232,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1232,"column":0},"generated":{"line":1233,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1233,"column":0},"generated":{"line":1234,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1234,"column":0},"generated":{"line":1235,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1235,"column":0},"generated":{"line":1236,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1236,"column":0},"generated":{"line":1237,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1237,"column":0},"generated":{"line":1238,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1238,"column":0},"generated":{"line":1239,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1239,"column":0},"generated":{"line":1240,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1240,"column":0},"generated":{"line":1241,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1241,"column":0},"generated":{"line":1242,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1242,"column":0},"generated":{"line":1243,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1243,"column":0},"generated":{"line":1244,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1244,"column":0},"generated":{"line":1245,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1245,"column":0},"generated":{"line":1246,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1246,"column":0},"generated":{"line":1247,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1247,"column":0},"generated":{"line":1248,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1248,"column":0},"generated":{"line":1249,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1249,"column":0},"generated":{"line":1250,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1250,"column":0},"generated":{"line":1251,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1251,"column":0},"generated":{"line":1252,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1252,"column":0},"generated":{"line":1253,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1253,"column":0},"generated":{"line":1254,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1254,"column":0},"generated":{"line":1255,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1255,"column":0},"generated":{"line":1256,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1256,"column":0},"generated":{"line":1257,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1257,"column":0},"generated":{"line":1258,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1258,"column":0},"generated":{"line":1259,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1259,"column":0},"generated":{"line":1260,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1260,"column":0},"generated":{"line":1261,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1261,"column":0},"generated":{"line":1262,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1262,"column":0},"generated":{"line":1263,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1263,"column":0},"generated":{"line":1264,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1264,"column":0},"generated":{"line":1265,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1265,"column":0},"generated":{"line":1266,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1266,"column":0},"generated":{"line":1267,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1267,"column":0},"generated":{"line":1268,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1268,"column":0},"generated":{"line":1269,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1269,"column":0},"generated":{"line":1270,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1270,"column":0},"generated":{"line":1271,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1271,"column":0},"generated":{"line":1272,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1272,"column":0},"generated":{"line":1273,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1273,"column":0},"generated":{"line":1274,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1274,"column":0},"generated":{"line":1275,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1275,"column":0},"generated":{"line":1276,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1276,"column":0},"generated":{"line":1277,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1277,"column":0},"generated":{"line":1278,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1278,"column":0},"generated":{"line":1279,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1279,"column":0},"generated":{"line":1280,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1280,"column":0},"generated":{"line":1281,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1281,"column":0},"generated":{"line":1282,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1282,"column":0},"generated":{"line":1283,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1283,"column":0},"generated":{"line":1284,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1284,"column":0},"generated":{"line":1285,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1285,"column":0},"generated":{"line":1286,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1286,"column":0},"generated":{"line":1287,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1287,"column":0},"generated":{"line":1288,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1288,"column":0},"generated":{"line":1289,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1289,"column":0},"generated":{"line":1290,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1290,"column":0},"generated":{"line":1291,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1291,"column":0},"generated":{"line":1292,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1292,"column":0},"generated":{"line":1293,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1293,"column":0},"generated":{"line":1294,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1294,"column":0},"generated":{"line":1295,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1295,"column":0},"generated":{"line":1296,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1296,"column":0},"generated":{"line":1297,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1297,"column":0},"generated":{"line":1298,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1298,"column":0},"generated":{"line":1299,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1299,"column":0},"generated":{"line":1300,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1300,"column":0},"generated":{"line":1301,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1301,"column":0},"generated":{"line":1302,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1302,"column":0},"generated":{"line":1303,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1303,"column":0},"generated":{"line":1304,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1304,"column":0},"generated":{"line":1305,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1305,"column":0},"generated":{"line":1306,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1306,"column":0},"generated":{"line":1307,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1307,"column":0},"generated":{"line":1308,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1308,"column":0},"generated":{"line":1309,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1309,"column":0},"generated":{"line":1310,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1310,"column":0},"generated":{"line":1311,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1311,"column":0},"generated":{"line":1312,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1312,"column":0},"generated":{"line":1313,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1313,"column":0},"generated":{"line":1314,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1314,"column":0},"generated":{"line":1315,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1315,"column":0},"generated":{"line":1316,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1316,"column":0},"generated":{"line":1317,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1317,"column":0},"generated":{"line":1318,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1318,"column":0},"generated":{"line":1319,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1319,"column":0},"generated":{"line":1320,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1320,"column":0},"generated":{"line":1321,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1321,"column":0},"generated":{"line":1322,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1322,"column":0},"generated":{"line":1323,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1323,"column":0},"generated":{"line":1324,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1324,"column":0},"generated":{"line":1325,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1325,"column":0},"generated":{"line":1326,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1326,"column":0},"generated":{"line":1327,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1327,"column":0},"generated":{"line":1328,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1328,"column":0},"generated":{"line":1329,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1329,"column":0},"generated":{"line":1330,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1330,"column":0},"generated":{"line":1331,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1331,"column":0},"generated":{"line":1332,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1332,"column":0},"generated":{"line":1333,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1333,"column":0},"generated":{"line":1334,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1334,"column":0},"generated":{"line":1335,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1335,"column":0},"generated":{"line":1336,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1336,"column":0},"generated":{"line":1337,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1337,"column":0},"generated":{"line":1338,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1338,"column":0},"generated":{"line":1339,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1339,"column":0},"generated":{"line":1340,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1340,"column":0},"generated":{"line":1341,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1341,"column":0},"generated":{"line":1342,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1342,"column":0},"generated":{"line":1343,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1343,"column":0},"generated":{"line":1344,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1344,"column":0},"generated":{"line":1345,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1345,"column":0},"generated":{"line":1346,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1346,"column":0},"generated":{"line":1347,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1347,"column":0},"generated":{"line":1348,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1348,"column":0},"generated":{"line":1349,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1349,"column":0},"generated":{"line":1350,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1350,"column":0},"generated":{"line":1351,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1351,"column":0},"generated":{"line":1352,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1352,"column":0},"generated":{"line":1353,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1353,"column":0},"generated":{"line":1354,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1354,"column":0},"generated":{"line":1355,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1355,"column":0},"generated":{"line":1356,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1356,"column":0},"generated":{"line":1357,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1357,"column":0},"generated":{"line":1358,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1358,"column":0},"generated":{"line":1359,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1359,"column":0},"generated":{"line":1360,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1360,"column":0},"generated":{"line":1361,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1361,"column":0},"generated":{"line":1362,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1362,"column":0},"generated":{"line":1363,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1363,"column":0},"generated":{"line":1364,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1364,"column":0},"generated":{"line":1365,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1365,"column":0},"generated":{"line":1366,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1366,"column":0},"generated":{"line":1367,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1367,"column":0},"generated":{"line":1368,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1368,"column":0},"generated":{"line":1369,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1369,"column":0},"generated":{"line":1370,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1370,"column":0},"generated":{"line":1371,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1371,"column":0},"generated":{"line":1372,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1372,"column":0},"generated":{"line":1373,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1373,"column":0},"generated":{"line":1374,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1374,"column":0},"generated":{"line":1375,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1375,"column":0},"generated":{"line":1376,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1376,"column":0},"generated":{"line":1377,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1377,"column":0},"generated":{"line":1378,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1378,"column":0},"generated":{"line":1379,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1379,"column":0},"generated":{"line":1380,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1380,"column":0},"generated":{"line":1381,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1381,"column":0},"generated":{"line":1382,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1382,"column":0},"generated":{"line":1383,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1383,"column":0},"generated":{"line":1384,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1384,"column":0},"generated":{"line":1385,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1385,"column":0},"generated":{"line":1386,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1386,"column":0},"generated":{"line":1387,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1387,"column":0},"generated":{"line":1388,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1388,"column":0},"generated":{"line":1389,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1389,"column":0},"generated":{"line":1390,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1390,"column":0},"generated":{"line":1391,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1391,"column":0},"generated":{"line":1392,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1392,"column":0},"generated":{"line":1393,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1393,"column":0},"generated":{"line":1394,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1394,"column":0},"generated":{"line":1395,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1395,"column":0},"generated":{"line":1396,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1396,"column":0},"generated":{"line":1397,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1397,"column":0},"generated":{"line":1398,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1398,"column":0},"generated":{"line":1399,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1399,"column":0},"generated":{"line":1400,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1400,"column":0},"generated":{"line":1401,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1401,"column":0},"generated":{"line":1402,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1402,"column":0},"generated":{"line":1403,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1403,"column":0},"generated":{"line":1404,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1404,"column":0},"generated":{"line":1405,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1405,"column":0},"generated":{"line":1406,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1406,"column":0},"generated":{"line":1407,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1407,"column":0},"generated":{"line":1408,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1408,"column":0},"generated":{"line":1409,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1409,"column":0},"generated":{"line":1410,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1410,"column":0},"generated":{"line":1411,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1411,"column":0},"generated":{"line":1412,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1412,"column":0},"generated":{"line":1413,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1413,"column":0},"generated":{"line":1414,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1414,"column":0},"generated":{"line":1415,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1415,"column":0},"generated":{"line":1416,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1416,"column":0},"generated":{"line":1417,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1417,"column":0},"generated":{"line":1418,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1418,"column":0},"generated":{"line":1419,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1419,"column":0},"generated":{"line":1420,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1420,"column":0},"generated":{"line":1421,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1421,"column":0},"generated":{"line":1422,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1422,"column":0},"generated":{"line":1423,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1423,"column":0},"generated":{"line":1424,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1424,"column":0},"generated":{"line":1425,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1425,"column":0},"generated":{"line":1426,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1426,"column":0},"generated":{"line":1427,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1427,"column":0},"generated":{"line":1428,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1428,"column":0},"generated":{"line":1429,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1429,"column":0},"generated":{"line":1430,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1430,"column":0},"generated":{"line":1431,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1431,"column":0},"generated":{"line":1432,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1432,"column":0},"generated":{"line":1433,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1433,"column":0},"generated":{"line":1434,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1434,"column":0},"generated":{"line":1435,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1435,"column":0},"generated":{"line":1436,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1436,"column":0},"generated":{"line":1437,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1437,"column":0},"generated":{"line":1438,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1438,"column":0},"generated":{"line":1439,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1439,"column":0},"generated":{"line":1440,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1440,"column":0},"generated":{"line":1441,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1441,"column":0},"generated":{"line":1442,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1442,"column":0},"generated":{"line":1443,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1443,"column":0},"generated":{"line":1444,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1444,"column":0},"generated":{"line":1445,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1445,"column":0},"generated":{"line":1446,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1446,"column":0},"generated":{"line":1447,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1447,"column":0},"generated":{"line":1448,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1448,"column":0},"generated":{"line":1449,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1449,"column":0},"generated":{"line":1450,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1450,"column":0},"generated":{"line":1451,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1451,"column":0},"generated":{"line":1452,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1452,"column":0},"generated":{"line":1453,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1453,"column":0},"generated":{"line":1454,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1454,"column":0},"generated":{"line":1455,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1455,"column":0},"generated":{"line":1456,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1456,"column":0},"generated":{"line":1457,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1457,"column":0},"generated":{"line":1458,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1458,"column":0},"generated":{"line":1459,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1459,"column":0},"generated":{"line":1460,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1460,"column":0},"generated":{"line":1461,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1461,"column":0},"generated":{"line":1462,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1462,"column":0},"generated":{"line":1463,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1463,"column":0},"generated":{"line":1464,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1464,"column":0},"generated":{"line":1465,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1465,"column":0},"generated":{"line":1466,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1466,"column":0},"generated":{"line":1467,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1467,"column":0},"generated":{"line":1468,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1468,"column":0},"generated":{"line":1469,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1469,"column":0},"generated":{"line":1470,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1470,"column":0},"generated":{"line":1471,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1471,"column":0},"generated":{"line":1472,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1472,"column":0},"generated":{"line":1473,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1473,"column":0},"generated":{"line":1474,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1474,"column":0},"generated":{"line":1475,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1475,"column":0},"generated":{"line":1476,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1476,"column":0},"generated":{"line":1477,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1477,"column":0},"generated":{"line":1478,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1478,"column":0},"generated":{"line":1479,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1479,"column":0},"generated":{"line":1480,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1480,"column":0},"generated":{"line":1481,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1481,"column":0},"generated":{"line":1482,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1482,"column":0},"generated":{"line":1483,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1483,"column":0},"generated":{"line":1484,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1484,"column":0},"generated":{"line":1485,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1485,"column":0},"generated":{"line":1486,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1486,"column":0},"generated":{"line":1487,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1487,"column":0},"generated":{"line":1488,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1488,"column":0},"generated":{"line":1489,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1489,"column":0},"generated":{"line":1490,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1490,"column":0},"generated":{"line":1491,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1491,"column":0},"generated":{"line":1492,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1492,"column":0},"generated":{"line":1493,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1493,"column":0},"generated":{"line":1494,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1494,"column":0},"generated":{"line":1495,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1495,"column":0},"generated":{"line":1496,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1496,"column":0},"generated":{"line":1497,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1497,"column":0},"generated":{"line":1498,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1498,"column":0},"generated":{"line":1499,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1499,"column":0},"generated":{"line":1500,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1500,"column":0},"generated":{"line":1501,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1501,"column":0},"generated":{"line":1502,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1502,"column":0},"generated":{"line":1503,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1503,"column":0},"generated":{"line":1504,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1504,"column":0},"generated":{"line":1505,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1505,"column":0},"generated":{"line":1506,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1506,"column":0},"generated":{"line":1507,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1507,"column":0},"generated":{"line":1508,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1508,"column":0},"generated":{"line":1509,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1509,"column":0},"generated":{"line":1510,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1510,"column":0},"generated":{"line":1511,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1511,"column":0},"generated":{"line":1512,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1512,"column":0},"generated":{"line":1513,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1513,"column":0},"generated":{"line":1514,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1514,"column":0},"generated":{"line":1515,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1515,"column":0},"generated":{"line":1516,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1516,"column":0},"generated":{"line":1517,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1517,"column":0},"generated":{"line":1518,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1518,"column":0},"generated":{"line":1519,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1519,"column":0},"generated":{"line":1520,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1520,"column":0},"generated":{"line":1521,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1521,"column":0},"generated":{"line":1522,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1522,"column":0},"generated":{"line":1523,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1523,"column":0},"generated":{"line":1524,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1524,"column":0},"generated":{"line":1525,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1525,"column":0},"generated":{"line":1526,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1526,"column":0},"generated":{"line":1527,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1527,"column":0},"generated":{"line":1528,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1528,"column":0},"generated":{"line":1529,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1529,"column":0},"generated":{"line":1530,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1530,"column":0},"generated":{"line":1531,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1531,"column":0},"generated":{"line":1532,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1532,"column":0},"generated":{"line":1533,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1533,"column":0},"generated":{"line":1534,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1534,"column":0},"generated":{"line":1535,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1535,"column":0},"generated":{"line":1536,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1536,"column":0},"generated":{"line":1537,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1537,"column":0},"generated":{"line":1538,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1538,"column":0},"generated":{"line":1539,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1539,"column":0},"generated":{"line":1540,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1540,"column":0},"generated":{"line":1541,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1541,"column":0},"generated":{"line":1542,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1542,"column":0},"generated":{"line":1543,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1543,"column":0},"generated":{"line":1544,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1544,"column":0},"generated":{"line":1545,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1545,"column":0},"generated":{"line":1546,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1546,"column":0},"generated":{"line":1547,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1547,"column":0},"generated":{"line":1548,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1548,"column":0},"generated":{"line":1549,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1549,"column":0},"generated":{"line":1550,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1550,"column":0},"generated":{"line":1551,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1551,"column":0},"generated":{"line":1552,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1552,"column":0},"generated":{"line":1553,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1553,"column":0},"generated":{"line":1554,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1554,"column":0},"generated":{"line":1555,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1555,"column":0},"generated":{"line":1556,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1556,"column":0},"generated":{"line":1557,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1557,"column":0},"generated":{"line":1558,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1558,"column":0},"generated":{"line":1559,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1559,"column":0},"generated":{"line":1560,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1560,"column":0},"generated":{"line":1561,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1561,"column":0},"generated":{"line":1562,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1562,"column":0},"generated":{"line":1563,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1563,"column":0},"generated":{"line":1564,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1564,"column":0},"generated":{"line":1565,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1565,"column":0},"generated":{"line":1566,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1566,"column":0},"generated":{"line":1567,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1567,"column":0},"generated":{"line":1568,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1568,"column":0},"generated":{"line":1569,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1569,"column":0},"generated":{"line":1570,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1570,"column":0},"generated":{"line":1571,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1571,"column":0},"generated":{"line":1572,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1572,"column":0},"generated":{"line":1573,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1573,"column":0},"generated":{"line":1574,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1574,"column":0},"generated":{"line":1575,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1575,"column":0},"generated":{"line":1576,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1576,"column":0},"generated":{"line":1577,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1577,"column":0},"generated":{"line":1578,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1578,"column":0},"generated":{"line":1579,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1579,"column":0},"generated":{"line":1580,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1580,"column":0},"generated":{"line":1581,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1581,"column":0},"generated":{"line":1582,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1582,"column":0},"generated":{"line":1583,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1583,"column":0},"generated":{"line":1584,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1584,"column":0},"generated":{"line":1585,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1585,"column":0},"generated":{"line":1586,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1586,"column":0},"generated":{"line":1587,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1587,"column":0},"generated":{"line":1588,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1588,"column":0},"generated":{"line":1589,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1589,"column":0},"generated":{"line":1590,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1590,"column":0},"generated":{"line":1591,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1591,"column":0},"generated":{"line":1592,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1592,"column":0},"generated":{"line":1593,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1593,"column":0},"generated":{"line":1594,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1594,"column":0},"generated":{"line":1595,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1595,"column":0},"generated":{"line":1596,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1596,"column":0},"generated":{"line":1597,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1597,"column":0},"generated":{"line":1598,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1598,"column":0},"generated":{"line":1599,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1599,"column":0},"generated":{"line":1600,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1600,"column":0},"generated":{"line":1601,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1601,"column":0},"generated":{"line":1602,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1602,"column":0},"generated":{"line":1603,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1603,"column":0},"generated":{"line":1604,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1604,"column":0},"generated":{"line":1605,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1605,"column":0},"generated":{"line":1606,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1606,"column":0},"generated":{"line":1607,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1607,"column":0},"generated":{"line":1608,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1608,"column":0},"generated":{"line":1609,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1609,"column":0},"generated":{"line":1610,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1610,"column":0},"generated":{"line":1611,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1611,"column":0},"generated":{"line":1612,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1612,"column":0},"generated":{"line":1613,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1613,"column":0},"generated":{"line":1614,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1614,"column":0},"generated":{"line":1615,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1615,"column":0},"generated":{"line":1616,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1616,"column":0},"generated":{"line":1617,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1617,"column":0},"generated":{"line":1618,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1618,"column":0},"generated":{"line":1619,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1619,"column":0},"generated":{"line":1620,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1620,"column":0},"generated":{"line":1621,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1621,"column":0},"generated":{"line":1622,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1622,"column":0},"generated":{"line":1623,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1623,"column":0},"generated":{"line":1624,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1624,"column":0},"generated":{"line":1625,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1625,"column":0},"generated":{"line":1626,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1626,"column":0},"generated":{"line":1627,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1627,"column":0},"generated":{"line":1628,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1628,"column":0},"generated":{"line":1629,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1629,"column":0},"generated":{"line":1630,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1630,"column":0},"generated":{"line":1631,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1631,"column":0},"generated":{"line":1632,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1632,"column":0},"generated":{"line":1633,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1633,"column":0},"generated":{"line":1634,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1634,"column":0},"generated":{"line":1635,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1635,"column":0},"generated":{"line":1636,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1636,"column":0},"generated":{"line":1637,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1637,"column":0},"generated":{"line":1638,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1638,"column":0},"generated":{"line":1639,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1639,"column":0},"generated":{"line":1640,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1640,"column":0},"generated":{"line":1641,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1641,"column":0},"generated":{"line":1642,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1642,"column":0},"generated":{"line":1643,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1643,"column":0},"generated":{"line":1644,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1644,"column":0},"generated":{"line":1645,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1645,"column":0},"generated":{"line":1646,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1646,"column":0},"generated":{"line":1647,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1647,"column":0},"generated":{"line":1648,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1648,"column":0},"generated":{"line":1649,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1649,"column":0},"generated":{"line":1650,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1650,"column":0},"generated":{"line":1651,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1651,"column":0},"generated":{"line":1652,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1652,"column":0},"generated":{"line":1653,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1653,"column":0},"generated":{"line":1654,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1654,"column":0},"generated":{"line":1655,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1655,"column":0},"generated":{"line":1656,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1656,"column":0},"generated":{"line":1657,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1657,"column":0},"generated":{"line":1658,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1658,"column":0},"generated":{"line":1659,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1659,"column":0},"generated":{"line":1660,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1660,"column":0},"generated":{"line":1661,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1661,"column":0},"generated":{"line":1662,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1662,"column":0},"generated":{"line":1663,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1663,"column":0},"generated":{"line":1664,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1664,"column":0},"generated":{"line":1665,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1665,"column":0},"generated":{"line":1666,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1666,"column":0},"generated":{"line":1667,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1667,"column":0},"generated":{"line":1668,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1668,"column":0},"generated":{"line":1669,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1669,"column":0},"generated":{"line":1670,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1670,"column":0},"generated":{"line":1671,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1671,"column":0},"generated":{"line":1672,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1672,"column":0},"generated":{"line":1673,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1673,"column":0},"generated":{"line":1674,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1674,"column":0},"generated":{"line":1675,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1675,"column":0},"generated":{"line":1676,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1676,"column":0},"generated":{"line":1677,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1677,"column":0},"generated":{"line":1678,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1678,"column":0},"generated":{"line":1679,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1679,"column":0},"generated":{"line":1680,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1680,"column":0},"generated":{"line":1681,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1681,"column":0},"generated":{"line":1682,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1682,"column":0},"generated":{"line":1683,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1683,"column":0},"generated":{"line":1684,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1684,"column":0},"generated":{"line":1685,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1685,"column":0},"generated":{"line":1686,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1686,"column":0},"generated":{"line":1687,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1687,"column":0},"generated":{"line":1688,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1688,"column":0},"generated":{"line":1689,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1689,"column":0},"generated":{"line":1690,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1690,"column":0},"generated":{"line":1691,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1691,"column":0},"generated":{"line":1692,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1692,"column":0},"generated":{"line":1693,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1693,"column":0},"generated":{"line":1694,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1694,"column":0},"generated":{"line":1695,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1695,"column":0},"generated":{"line":1696,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1696,"column":0},"generated":{"line":1697,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1697,"column":0},"generated":{"line":1698,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1698,"column":0},"generated":{"line":1699,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1699,"column":0},"generated":{"line":1700,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1700,"column":0},"generated":{"line":1701,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1701,"column":0},"generated":{"line":1702,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1702,"column":0},"generated":{"line":1703,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1703,"column":0},"generated":{"line":1704,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1704,"column":0},"generated":{"line":1705,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1705,"column":0},"generated":{"line":1706,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1706,"column":0},"generated":{"line":1707,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1707,"column":0},"generated":{"line":1708,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1708,"column":0},"generated":{"line":1709,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1709,"column":0},"generated":{"line":1710,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1710,"column":0},"generated":{"line":1711,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1711,"column":0},"generated":{"line":1712,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1712,"column":0},"generated":{"line":1713,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1713,"column":0},"generated":{"line":1714,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1714,"column":0},"generated":{"line":1715,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1715,"column":0},"generated":{"line":1716,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1716,"column":0},"generated":{"line":1717,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1717,"column":0},"generated":{"line":1718,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1718,"column":0},"generated":{"line":1719,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1719,"column":0},"generated":{"line":1720,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1720,"column":0},"generated":{"line":1721,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1721,"column":0},"generated":{"line":1722,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1722,"column":0},"generated":{"line":1723,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1723,"column":0},"generated":{"line":1724,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1724,"column":0},"generated":{"line":1725,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1725,"column":0},"generated":{"line":1726,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1726,"column":0},"generated":{"line":1727,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1727,"column":0},"generated":{"line":1728,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1728,"column":0},"generated":{"line":1729,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1729,"column":0},"generated":{"line":1730,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1730,"column":0},"generated":{"line":1731,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1731,"column":0},"generated":{"line":1732,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1732,"column":0},"generated":{"line":1733,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1733,"column":0},"generated":{"line":1734,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1734,"column":0},"generated":{"line":1735,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1735,"column":0},"generated":{"line":1736,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1736,"column":0},"generated":{"line":1737,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1737,"column":0},"generated":{"line":1738,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1738,"column":0},"generated":{"line":1739,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1739,"column":0},"generated":{"line":1740,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1740,"column":0},"generated":{"line":1741,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1741,"column":0},"generated":{"line":1742,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1742,"column":0},"generated":{"line":1743,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1743,"column":0},"generated":{"line":1744,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1744,"column":0},"generated":{"line":1745,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1745,"column":0},"generated":{"line":1746,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1746,"column":0},"generated":{"line":1747,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1747,"column":0},"generated":{"line":1748,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1748,"column":0},"generated":{"line":1749,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1749,"column":0},"generated":{"line":1750,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1750,"column":0},"generated":{"line":1751,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1751,"column":0},"generated":{"line":1752,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1752,"column":0},"generated":{"line":1753,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1753,"column":0},"generated":{"line":1754,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1754,"column":0},"generated":{"line":1755,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1755,"column":0},"generated":{"line":1756,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1756,"column":0},"generated":{"line":1757,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1757,"column":0},"generated":{"line":1758,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1758,"column":0},"generated":{"line":1759,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1759,"column":0},"generated":{"line":1760,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1760,"column":0},"generated":{"line":1761,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1761,"column":0},"generated":{"line":1762,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1762,"column":0},"generated":{"line":1763,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1763,"column":0},"generated":{"line":1764,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1764,"column":0},"generated":{"line":1765,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1765,"column":0},"generated":{"line":1766,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1766,"column":0},"generated":{"line":1767,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1767,"column":0},"generated":{"line":1768,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1768,"column":0},"generated":{"line":1769,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1769,"column":0},"generated":{"line":1770,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1770,"column":0},"generated":{"line":1771,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1771,"column":0},"generated":{"line":1772,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1772,"column":0},"generated":{"line":1773,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1773,"column":0},"generated":{"line":1774,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1774,"column":0},"generated":{"line":1775,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1775,"column":0},"generated":{"line":1776,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1776,"column":0},"generated":{"line":1777,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1777,"column":0},"generated":{"line":1778,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1778,"column":0},"generated":{"line":1779,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1779,"column":0},"generated":{"line":1780,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1780,"column":0},"generated":{"line":1781,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1781,"column":0},"generated":{"line":1782,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1782,"column":0},"generated":{"line":1783,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1783,"column":0},"generated":{"line":1784,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1784,"column":0},"generated":{"line":1785,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1785,"column":0},"generated":{"line":1786,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1786,"column":0},"generated":{"line":1787,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1787,"column":0},"generated":{"line":1788,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1788,"column":0},"generated":{"line":1789,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1789,"column":0},"generated":{"line":1790,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1790,"column":0},"generated":{"line":1791,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1791,"column":0},"generated":{"line":1792,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1792,"column":0},"generated":{"line":1793,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1793,"column":0},"generated":{"line":1794,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1794,"column":0},"generated":{"line":1795,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1795,"column":0},"generated":{"line":1796,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1796,"column":0},"generated":{"line":1797,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1797,"column":0},"generated":{"line":1798,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1798,"column":0},"generated":{"line":1799,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1799,"column":0},"generated":{"line":1800,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1800,"column":0},"generated":{"line":1801,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1801,"column":0},"generated":{"line":1802,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1802,"column":0},"generated":{"line":1803,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1803,"column":0},"generated":{"line":1804,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1804,"column":0},"generated":{"line":1805,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1805,"column":0},"generated":{"line":1806,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1806,"column":0},"generated":{"line":1807,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1807,"column":0},"generated":{"line":1808,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1808,"column":0},"generated":{"line":1809,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1809,"column":0},"generated":{"line":1810,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1810,"column":0},"generated":{"line":1811,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1811,"column":0},"generated":{"line":1812,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1812,"column":0},"generated":{"line":1813,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1813,"column":0},"generated":{"line":1814,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1814,"column":0},"generated":{"line":1815,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1815,"column":0},"generated":{"line":1816,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1816,"column":0},"generated":{"line":1817,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1817,"column":0},"generated":{"line":1818,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1818,"column":0},"generated":{"line":1819,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1819,"column":0},"generated":{"line":1820,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1820,"column":0},"generated":{"line":1821,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1821,"column":0},"generated":{"line":1822,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1822,"column":0},"generated":{"line":1823,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1823,"column":0},"generated":{"line":1824,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1824,"column":0},"generated":{"line":1825,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1825,"column":0},"generated":{"line":1826,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1826,"column":0},"generated":{"line":1827,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1827,"column":0},"generated":{"line":1828,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1828,"column":0},"generated":{"line":1829,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1829,"column":0},"generated":{"line":1830,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1830,"column":0},"generated":{"line":1831,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1831,"column":0},"generated":{"line":1832,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1832,"column":0},"generated":{"line":1833,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1833,"column":0},"generated":{"line":1834,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1834,"column":0},"generated":{"line":1835,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1835,"column":0},"generated":{"line":1836,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1836,"column":0},"generated":{"line":1837,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1837,"column":0},"generated":{"line":1838,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1838,"column":0},"generated":{"line":1839,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1839,"column":0},"generated":{"line":1840,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1840,"column":0},"generated":{"line":1841,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1841,"column":0},"generated":{"line":1842,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1842,"column":0},"generated":{"line":1843,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1843,"column":0},"generated":{"line":1844,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1844,"column":0},"generated":{"line":1845,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1845,"column":0},"generated":{"line":1846,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1846,"column":0},"generated":{"line":1847,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1847,"column":0},"generated":{"line":1848,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1848,"column":0},"generated":{"line":1849,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1849,"column":0},"generated":{"line":1850,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1850,"column":0},"generated":{"line":1851,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1851,"column":0},"generated":{"line":1852,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1852,"column":0},"generated":{"line":1853,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1853,"column":0},"generated":{"line":1854,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1854,"column":0},"generated":{"line":1855,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1855,"column":0},"generated":{"line":1856,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1856,"column":0},"generated":{"line":1857,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1857,"column":0},"generated":{"line":1858,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1858,"column":0},"generated":{"line":1859,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1859,"column":0},"generated":{"line":1860,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1860,"column":0},"generated":{"line":1861,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1861,"column":0},"generated":{"line":1862,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1862,"column":0},"generated":{"line":1863,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1863,"column":0},"generated":{"line":1864,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1864,"column":0},"generated":{"line":1865,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1865,"column":0},"generated":{"line":1866,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1866,"column":0},"generated":{"line":1867,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1867,"column":0},"generated":{"line":1868,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1868,"column":0},"generated":{"line":1869,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1869,"column":0},"generated":{"line":1870,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1870,"column":0},"generated":{"line":1871,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1871,"column":0},"generated":{"line":1872,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1872,"column":0},"generated":{"line":1873,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1873,"column":0},"generated":{"line":1874,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1874,"column":0},"generated":{"line":1875,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1875,"column":0},"generated":{"line":1876,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1876,"column":0},"generated":{"line":1877,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1877,"column":0},"generated":{"line":1878,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1878,"column":0},"generated":{"line":1879,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1879,"column":0},"generated":{"line":1880,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1880,"column":0},"generated":{"line":1881,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1881,"column":0},"generated":{"line":1882,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1882,"column":0},"generated":{"line":1883,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1883,"column":0},"generated":{"line":1884,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1884,"column":0},"generated":{"line":1885,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1885,"column":0},"generated":{"line":1886,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1886,"column":0},"generated":{"line":1887,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1887,"column":0},"generated":{"line":1888,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1888,"column":0},"generated":{"line":1889,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1889,"column":0},"generated":{"line":1890,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1890,"column":0},"generated":{"line":1891,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1891,"column":0},"generated":{"line":1892,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1892,"column":0},"generated":{"line":1893,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1893,"column":0},"generated":{"line":1894,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1894,"column":0},"generated":{"line":1895,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1895,"column":0},"generated":{"line":1896,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1896,"column":0},"generated":{"line":1897,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1897,"column":0},"generated":{"line":1898,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1898,"column":0},"generated":{"line":1899,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1899,"column":0},"generated":{"line":1900,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1900,"column":0},"generated":{"line":1901,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1901,"column":0},"generated":{"line":1902,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1902,"column":0},"generated":{"line":1903,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1903,"column":0},"generated":{"line":1904,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1904,"column":0},"generated":{"line":1905,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1905,"column":0},"generated":{"line":1906,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1906,"column":0},"generated":{"line":1907,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1907,"column":0},"generated":{"line":1908,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1908,"column":0},"generated":{"line":1909,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1909,"column":0},"generated":{"line":1910,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1910,"column":0},"generated":{"line":1911,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1911,"column":0},"generated":{"line":1912,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1912,"column":0},"generated":{"line":1913,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1913,"column":0},"generated":{"line":1914,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1914,"column":0},"generated":{"line":1915,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1915,"column":0},"generated":{"line":1916,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1916,"column":0},"generated":{"line":1917,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1917,"column":0},"generated":{"line":1918,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1918,"column":0},"generated":{"line":1919,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1919,"column":0},"generated":{"line":1920,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1920,"column":0},"generated":{"line":1921,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1921,"column":0},"generated":{"line":1922,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1922,"column":0},"generated":{"line":1923,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1923,"column":0},"generated":{"line":1924,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1924,"column":0},"generated":{"line":1925,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1925,"column":0},"generated":{"line":1926,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1926,"column":0},"generated":{"line":1927,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1927,"column":0},"generated":{"line":1928,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1928,"column":0},"generated":{"line":1929,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1929,"column":0},"generated":{"line":1930,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1930,"column":0},"generated":{"line":1931,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1931,"column":0},"generated":{"line":1932,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1932,"column":0},"generated":{"line":1933,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1933,"column":0},"generated":{"line":1934,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1934,"column":0},"generated":{"line":1935,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1935,"column":0},"generated":{"line":1936,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1936,"column":0},"generated":{"line":1937,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1937,"column":0},"generated":{"line":1938,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1938,"column":0},"generated":{"line":1939,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1939,"column":0},"generated":{"line":1940,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1940,"column":0},"generated":{"line":1941,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1941,"column":0},"generated":{"line":1942,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1942,"column":0},"generated":{"line":1943,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1943,"column":0},"generated":{"line":1944,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1944,"column":0},"generated":{"line":1945,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1945,"column":0},"generated":{"line":1946,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1946,"column":0},"generated":{"line":1947,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1947,"column":0},"generated":{"line":1948,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1948,"column":0},"generated":{"line":1949,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1949,"column":0},"generated":{"line":1950,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1950,"column":0},"generated":{"line":1951,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1951,"column":0},"generated":{"line":1952,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1952,"column":0},"generated":{"line":1953,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1953,"column":0},"generated":{"line":1954,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1954,"column":0},"generated":{"line":1955,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1955,"column":0},"generated":{"line":1956,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1956,"column":0},"generated":{"line":1957,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1957,"column":0},"generated":{"line":1958,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1958,"column":0},"generated":{"line":1959,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1959,"column":0},"generated":{"line":1960,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1960,"column":0},"generated":{"line":1961,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1961,"column":0},"generated":{"line":1962,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1962,"column":0},"generated":{"line":1963,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1963,"column":0},"generated":{"line":1964,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1964,"column":0},"generated":{"line":1965,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1965,"column":0},"generated":{"line":1966,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1966,"column":0},"generated":{"line":1967,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1967,"column":0},"generated":{"line":1968,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1968,"column":0},"generated":{"line":1969,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1969,"column":0},"generated":{"line":1970,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1970,"column":0},"generated":{"line":1971,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1971,"column":0},"generated":{"line":1972,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1972,"column":0},"generated":{"line":1973,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1973,"column":0},"generated":{"line":1974,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1974,"column":0},"generated":{"line":1975,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1975,"column":0},"generated":{"line":1976,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1976,"column":0},"generated":{"line":1977,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1977,"column":0},"generated":{"line":1978,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1978,"column":0},"generated":{"line":1979,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1979,"column":0},"generated":{"line":1980,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1980,"column":0},"generated":{"line":1981,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1981,"column":0},"generated":{"line":1982,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1982,"column":0},"generated":{"line":1983,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1983,"column":0},"generated":{"line":1984,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1984,"column":0},"generated":{"line":1985,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1985,"column":0},"generated":{"line":1986,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1986,"column":0},"generated":{"line":1987,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1987,"column":0},"generated":{"line":1988,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1988,"column":0},"generated":{"line":1989,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1989,"column":0},"generated":{"line":1990,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1990,"column":0},"generated":{"line":1991,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1991,"column":0},"generated":{"line":1992,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1992,"column":0},"generated":{"line":1993,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1993,"column":0},"generated":{"line":1994,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1994,"column":0},"generated":{"line":1995,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1995,"column":0},"generated":{"line":1996,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1996,"column":0},"generated":{"line":1997,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1997,"column":0},"generated":{"line":1998,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1998,"column":0},"generated":{"line":1999,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":1999,"column":0},"generated":{"line":2000,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2000,"column":0},"generated":{"line":2001,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2001,"column":0},"generated":{"line":2002,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2002,"column":0},"generated":{"line":2003,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2003,"column":0},"generated":{"line":2004,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2004,"column":0},"generated":{"line":2005,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2005,"column":0},"generated":{"line":2006,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2006,"column":0},"generated":{"line":2007,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2007,"column":0},"generated":{"line":2008,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2008,"column":0},"generated":{"line":2009,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2009,"column":0},"generated":{"line":2010,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2010,"column":0},"generated":{"line":2011,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2011,"column":0},"generated":{"line":2012,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2012,"column":0},"generated":{"line":2013,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2013,"column":0},"generated":{"line":2014,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2014,"column":0},"generated":{"line":2015,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2015,"column":0},"generated":{"line":2016,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2016,"column":0},"generated":{"line":2017,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2017,"column":0},"generated":{"line":2018,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2018,"column":0},"generated":{"line":2019,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2019,"column":0},"generated":{"line":2020,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2020,"column":0},"generated":{"line":2021,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2021,"column":0},"generated":{"line":2022,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2022,"column":0},"generated":{"line":2023,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2023,"column":0},"generated":{"line":2024,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2024,"column":0},"generated":{"line":2025,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2025,"column":0},"generated":{"line":2026,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2026,"column":0},"generated":{"line":2027,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2027,"column":0},"generated":{"line":2028,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2028,"column":0},"generated":{"line":2029,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2029,"column":0},"generated":{"line":2030,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2030,"column":0},"generated":{"line":2031,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2031,"column":0},"generated":{"line":2032,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2032,"column":0},"generated":{"line":2033,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2033,"column":0},"generated":{"line":2034,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2034,"column":0},"generated":{"line":2035,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2035,"column":0},"generated":{"line":2036,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2036,"column":0},"generated":{"line":2037,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2037,"column":0},"generated":{"line":2038,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2038,"column":0},"generated":{"line":2039,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2039,"column":0},"generated":{"line":2040,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2040,"column":0},"generated":{"line":2041,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2041,"column":0},"generated":{"line":2042,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2042,"column":0},"generated":{"line":2043,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2043,"column":0},"generated":{"line":2044,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2044,"column":0},"generated":{"line":2045,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2045,"column":0},"generated":{"line":2046,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2046,"column":0},"generated":{"line":2047,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2047,"column":0},"generated":{"line":2048,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2048,"column":0},"generated":{"line":2049,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2049,"column":0},"generated":{"line":2050,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2050,"column":0},"generated":{"line":2051,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2051,"column":0},"generated":{"line":2052,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2052,"column":0},"generated":{"line":2053,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2053,"column":0},"generated":{"line":2054,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2054,"column":0},"generated":{"line":2055,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2055,"column":0},"generated":{"line":2056,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2056,"column":0},"generated":{"line":2057,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2057,"column":0},"generated":{"line":2058,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2058,"column":0},"generated":{"line":2059,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2059,"column":0},"generated":{"line":2060,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2060,"column":0},"generated":{"line":2061,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2061,"column":0},"generated":{"line":2062,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2062,"column":0},"generated":{"line":2063,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2063,"column":0},"generated":{"line":2064,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2064,"column":0},"generated":{"line":2065,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2065,"column":0},"generated":{"line":2066,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2066,"column":0},"generated":{"line":2067,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2067,"column":0},"generated":{"line":2068,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2068,"column":0},"generated":{"line":2069,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2069,"column":0},"generated":{"line":2070,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2070,"column":0},"generated":{"line":2071,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2071,"column":0},"generated":{"line":2072,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2072,"column":0},"generated":{"line":2073,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2073,"column":0},"generated":{"line":2074,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2074,"column":0},"generated":{"line":2075,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2075,"column":0},"generated":{"line":2076,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2076,"column":0},"generated":{"line":2077,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2077,"column":0},"generated":{"line":2078,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2078,"column":0},"generated":{"line":2079,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2079,"column":0},"generated":{"line":2080,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2080,"column":0},"generated":{"line":2081,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2081,"column":0},"generated":{"line":2082,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2082,"column":0},"generated":{"line":2083,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2083,"column":0},"generated":{"line":2084,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2084,"column":0},"generated":{"line":2085,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2085,"column":0},"generated":{"line":2086,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2086,"column":0},"generated":{"line":2087,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2087,"column":0},"generated":{"line":2088,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2088,"column":0},"generated":{"line":2089,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2089,"column":0},"generated":{"line":2090,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2090,"column":0},"generated":{"line":2091,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2091,"column":0},"generated":{"line":2092,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2092,"column":0},"generated":{"line":2093,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2093,"column":0},"generated":{"line":2094,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2094,"column":0},"generated":{"line":2095,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2095,"column":0},"generated":{"line":2096,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2096,"column":0},"generated":{"line":2097,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2097,"column":0},"generated":{"line":2098,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2098,"column":0},"generated":{"line":2099,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2099,"column":0},"generated":{"line":2100,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2100,"column":0},"generated":{"line":2101,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2101,"column":0},"generated":{"line":2102,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2102,"column":0},"generated":{"line":2103,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2103,"column":0},"generated":{"line":2104,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2104,"column":0},"generated":{"line":2105,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2105,"column":0},"generated":{"line":2106,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2106,"column":0},"generated":{"line":2107,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2107,"column":0},"generated":{"line":2108,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2108,"column":0},"generated":{"line":2109,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2109,"column":0},"generated":{"line":2110,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2110,"column":0},"generated":{"line":2111,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2111,"column":0},"generated":{"line":2112,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2112,"column":0},"generated":{"line":2113,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2113,"column":0},"generated":{"line":2114,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2114,"column":0},"generated":{"line":2115,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2115,"column":0},"generated":{"line":2116,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2116,"column":0},"generated":{"line":2117,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2117,"column":0},"generated":{"line":2118,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2118,"column":0},"generated":{"line":2119,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2119,"column":0},"generated":{"line":2120,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2120,"column":0},"generated":{"line":2121,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2121,"column":0},"generated":{"line":2122,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2122,"column":0},"generated":{"line":2123,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2123,"column":0},"generated":{"line":2124,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2124,"column":0},"generated":{"line":2125,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2125,"column":0},"generated":{"line":2126,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2126,"column":0},"generated":{"line":2127,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2127,"column":0},"generated":{"line":2128,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2128,"column":0},"generated":{"line":2129,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2129,"column":0},"generated":{"line":2130,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2130,"column":0},"generated":{"line":2131,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2131,"column":0},"generated":{"line":2132,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2132,"column":0},"generated":{"line":2133,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2133,"column":0},"generated":{"line":2134,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2134,"column":0},"generated":{"line":2135,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2135,"column":0},"generated":{"line":2136,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2136,"column":0},"generated":{"line":2137,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2137,"column":0},"generated":{"line":2138,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2138,"column":0},"generated":{"line":2139,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2139,"column":0},"generated":{"line":2140,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2140,"column":0},"generated":{"line":2141,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2141,"column":0},"generated":{"line":2142,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2142,"column":0},"generated":{"line":2143,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2143,"column":0},"generated":{"line":2144,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2144,"column":0},"generated":{"line":2145,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2145,"column":0},"generated":{"line":2146,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2146,"column":0},"generated":{"line":2147,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2147,"column":0},"generated":{"line":2148,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2148,"column":0},"generated":{"line":2149,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2149,"column":0},"generated":{"line":2150,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2150,"column":0},"generated":{"line":2151,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2151,"column":0},"generated":{"line":2152,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2152,"column":0},"generated":{"line":2153,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2153,"column":0},"generated":{"line":2154,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2154,"column":0},"generated":{"line":2155,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2155,"column":0},"generated":{"line":2156,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2156,"column":0},"generated":{"line":2157,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2157,"column":0},"generated":{"line":2158,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2158,"column":0},"generated":{"line":2159,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2159,"column":0},"generated":{"line":2160,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2160,"column":0},"generated":{"line":2161,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2161,"column":0},"generated":{"line":2162,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2162,"column":0},"generated":{"line":2163,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2163,"column":0},"generated":{"line":2164,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2164,"column":0},"generated":{"line":2165,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2165,"column":0},"generated":{"line":2166,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2166,"column":0},"generated":{"line":2167,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2167,"column":0},"generated":{"line":2168,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2168,"column":0},"generated":{"line":2169,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2169,"column":0},"generated":{"line":2170,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2170,"column":0},"generated":{"line":2171,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2171,"column":0},"generated":{"line":2172,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2172,"column":0},"generated":{"line":2173,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2173,"column":0},"generated":{"line":2174,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2174,"column":0},"generated":{"line":2175,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2175,"column":0},"generated":{"line":2176,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2176,"column":0},"generated":{"line":2177,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2177,"column":0},"generated":{"line":2178,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2178,"column":0},"generated":{"line":2179,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2179,"column":0},"generated":{"line":2180,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2180,"column":0},"generated":{"line":2181,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2181,"column":0},"generated":{"line":2182,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2182,"column":0},"generated":{"line":2183,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2183,"column":0},"generated":{"line":2184,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2184,"column":0},"generated":{"line":2185,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2185,"column":0},"generated":{"line":2186,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2186,"column":0},"generated":{"line":2187,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2187,"column":0},"generated":{"line":2188,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2188,"column":0},"generated":{"line":2189,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2189,"column":0},"generated":{"line":2190,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2190,"column":0},"generated":{"line":2191,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2191,"column":0},"generated":{"line":2192,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2192,"column":0},"generated":{"line":2193,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2193,"column":0},"generated":{"line":2194,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2194,"column":0},"generated":{"line":2195,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2195,"column":0},"generated":{"line":2196,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2196,"column":0},"generated":{"line":2197,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2197,"column":0},"generated":{"line":2198,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2198,"column":0},"generated":{"line":2199,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2199,"column":0},"generated":{"line":2200,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2200,"column":0},"generated":{"line":2201,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2201,"column":0},"generated":{"line":2202,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2202,"column":0},"generated":{"line":2203,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2203,"column":0},"generated":{"line":2204,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2204,"column":0},"generated":{"line":2205,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2205,"column":0},"generated":{"line":2206,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2206,"column":0},"generated":{"line":2207,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2207,"column":0},"generated":{"line":2208,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2208,"column":0},"generated":{"line":2209,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2209,"column":0},"generated":{"line":2210,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2210,"column":0},"generated":{"line":2211,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2211,"column":0},"generated":{"line":2212,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2212,"column":0},"generated":{"line":2213,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2213,"column":0},"generated":{"line":2214,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2214,"column":0},"generated":{"line":2215,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2215,"column":0},"generated":{"line":2216,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2216,"column":0},"generated":{"line":2217,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2217,"column":0},"generated":{"line":2218,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2218,"column":0},"generated":{"line":2219,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2219,"column":0},"generated":{"line":2220,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2220,"column":0},"generated":{"line":2221,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2221,"column":0},"generated":{"line":2222,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2222,"column":0},"generated":{"line":2223,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2223,"column":0},"generated":{"line":2224,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2224,"column":0},"generated":{"line":2225,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2225,"column":0},"generated":{"line":2226,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2226,"column":0},"generated":{"line":2227,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2227,"column":0},"generated":{"line":2228,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2228,"column":0},"generated":{"line":2229,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2229,"column":0},"generated":{"line":2230,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2230,"column":0},"generated":{"line":2231,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2231,"column":0},"generated":{"line":2232,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2232,"column":0},"generated":{"line":2233,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2233,"column":0},"generated":{"line":2234,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2234,"column":0},"generated":{"line":2235,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2235,"column":0},"generated":{"line":2236,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2236,"column":0},"generated":{"line":2237,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2237,"column":0},"generated":{"line":2238,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2238,"column":0},"generated":{"line":2239,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2239,"column":0},"generated":{"line":2240,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2240,"column":0},"generated":{"line":2241,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2241,"column":0},"generated":{"line":2242,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2242,"column":0},"generated":{"line":2243,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2243,"column":0},"generated":{"line":2244,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2244,"column":0},"generated":{"line":2245,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2245,"column":0},"generated":{"line":2246,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2246,"column":0},"generated":{"line":2247,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2247,"column":0},"generated":{"line":2248,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2248,"column":0},"generated":{"line":2249,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2249,"column":0},"generated":{"line":2250,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2250,"column":0},"generated":{"line":2251,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2251,"column":0},"generated":{"line":2252,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2252,"column":0},"generated":{"line":2253,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2253,"column":0},"generated":{"line":2254,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2254,"column":0},"generated":{"line":2255,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2255,"column":0},"generated":{"line":2256,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2256,"column":0},"generated":{"line":2257,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2257,"column":0},"generated":{"line":2258,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2258,"column":0},"generated":{"line":2259,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2259,"column":0},"generated":{"line":2260,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2260,"column":0},"generated":{"line":2261,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2261,"column":0},"generated":{"line":2262,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2262,"column":0},"generated":{"line":2263,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2263,"column":0},"generated":{"line":2264,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2264,"column":0},"generated":{"line":2265,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2265,"column":0},"generated":{"line":2266,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2266,"column":0},"generated":{"line":2267,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2267,"column":0},"generated":{"line":2268,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2268,"column":0},"generated":{"line":2269,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2269,"column":0},"generated":{"line":2270,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2270,"column":0},"generated":{"line":2271,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2271,"column":0},"generated":{"line":2272,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2272,"column":0},"generated":{"line":2273,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2273,"column":0},"generated":{"line":2274,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2274,"column":0},"generated":{"line":2275,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2275,"column":0},"generated":{"line":2276,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2276,"column":0},"generated":{"line":2277,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2277,"column":0},"generated":{"line":2278,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2278,"column":0},"generated":{"line":2279,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2279,"column":0},"generated":{"line":2280,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2280,"column":0},"generated":{"line":2281,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2281,"column":0},"generated":{"line":2282,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2282,"column":0},"generated":{"line":2283,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2283,"column":0},"generated":{"line":2284,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2284,"column":0},"generated":{"line":2285,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2285,"column":0},"generated":{"line":2286,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2286,"column":0},"generated":{"line":2287,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2287,"column":0},"generated":{"line":2288,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2288,"column":0},"generated":{"line":2289,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2289,"column":0},"generated":{"line":2290,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2290,"column":0},"generated":{"line":2291,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2291,"column":0},"generated":{"line":2292,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2292,"column":0},"generated":{"line":2293,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2293,"column":0},"generated":{"line":2294,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2294,"column":0},"generated":{"line":2295,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2295,"column":0},"generated":{"line":2296,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2296,"column":0},"generated":{"line":2297,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2297,"column":0},"generated":{"line":2298,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2298,"column":0},"generated":{"line":2299,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2299,"column":0},"generated":{"line":2300,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2300,"column":0},"generated":{"line":2301,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2301,"column":0},"generated":{"line":2302,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2302,"column":0},"generated":{"line":2303,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2303,"column":0},"generated":{"line":2304,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2304,"column":0},"generated":{"line":2305,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2305,"column":0},"generated":{"line":2306,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2306,"column":0},"generated":{"line":2307,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2307,"column":0},"generated":{"line":2308,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2308,"column":0},"generated":{"line":2309,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2309,"column":0},"generated":{"line":2310,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2310,"column":0},"generated":{"line":2311,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2311,"column":0},"generated":{"line":2312,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2312,"column":0},"generated":{"line":2313,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2313,"column":0},"generated":{"line":2314,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2314,"column":0},"generated":{"line":2315,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2315,"column":0},"generated":{"line":2316,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2316,"column":0},"generated":{"line":2317,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2317,"column":0},"generated":{"line":2318,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2318,"column":0},"generated":{"line":2319,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2319,"column":0},"generated":{"line":2320,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2320,"column":0},"generated":{"line":2321,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2321,"column":0},"generated":{"line":2322,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2322,"column":0},"generated":{"line":2323,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2323,"column":0},"generated":{"line":2324,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2324,"column":0},"generated":{"line":2325,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2325,"column":0},"generated":{"line":2326,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2326,"column":0},"generated":{"line":2327,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2327,"column":0},"generated":{"line":2328,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2328,"column":0},"generated":{"line":2329,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2329,"column":0},"generated":{"line":2330,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2330,"column":0},"generated":{"line":2331,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2331,"column":0},"generated":{"line":2332,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2332,"column":0},"generated":{"line":2333,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2333,"column":0},"generated":{"line":2334,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2334,"column":0},"generated":{"line":2335,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2335,"column":0},"generated":{"line":2336,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2336,"column":0},"generated":{"line":2337,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2337,"column":0},"generated":{"line":2338,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2338,"column":0},"generated":{"line":2339,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2339,"column":0},"generated":{"line":2340,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2340,"column":0},"generated":{"line":2341,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2341,"column":0},"generated":{"line":2342,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2342,"column":0},"generated":{"line":2343,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2343,"column":0},"generated":{"line":2344,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2344,"column":0},"generated":{"line":2345,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2345,"column":0},"generated":{"line":2346,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2346,"column":0},"generated":{"line":2347,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2347,"column":0},"generated":{"line":2348,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2348,"column":0},"generated":{"line":2349,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2349,"column":0},"generated":{"line":2350,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2350,"column":0},"generated":{"line":2351,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2351,"column":0},"generated":{"line":2352,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2352,"column":0},"generated":{"line":2353,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2353,"column":0},"generated":{"line":2354,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2354,"column":0},"generated":{"line":2355,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2355,"column":0},"generated":{"line":2356,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2356,"column":0},"generated":{"line":2357,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2357,"column":0},"generated":{"line":2358,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2358,"column":0},"generated":{"line":2359,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2359,"column":0},"generated":{"line":2360,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2360,"column":0},"generated":{"line":2361,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2361,"column":0},"generated":{"line":2362,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2362,"column":0},"generated":{"line":2363,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2363,"column":0},"generated":{"line":2364,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2364,"column":0},"generated":{"line":2365,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2365,"column":0},"generated":{"line":2366,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2366,"column":0},"generated":{"line":2367,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2367,"column":0},"generated":{"line":2368,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2368,"column":0},"generated":{"line":2369,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2369,"column":0},"generated":{"line":2370,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2370,"column":0},"generated":{"line":2371,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2371,"column":0},"generated":{"line":2372,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2372,"column":0},"generated":{"line":2373,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2373,"column":0},"generated":{"line":2374,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2374,"column":0},"generated":{"line":2375,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2375,"column":0},"generated":{"line":2376,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2376,"column":0},"generated":{"line":2377,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2377,"column":0},"generated":{"line":2378,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2378,"column":0},"generated":{"line":2379,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2379,"column":0},"generated":{"line":2380,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2380,"column":0},"generated":{"line":2381,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2381,"column":0},"generated":{"line":2382,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2382,"column":0},"generated":{"line":2383,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2383,"column":0},"generated":{"line":2384,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2384,"column":0},"generated":{"line":2385,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2385,"column":0},"generated":{"line":2386,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2386,"column":0},"generated":{"line":2387,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2387,"column":0},"generated":{"line":2388,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2388,"column":0},"generated":{"line":2389,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2389,"column":0},"generated":{"line":2390,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2390,"column":0},"generated":{"line":2391,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2391,"column":0},"generated":{"line":2392,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2392,"column":0},"generated":{"line":2393,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2393,"column":0},"generated":{"line":2394,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2394,"column":0},"generated":{"line":2395,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2395,"column":0},"generated":{"line":2396,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2396,"column":0},"generated":{"line":2397,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2397,"column":0},"generated":{"line":2398,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2398,"column":0},"generated":{"line":2399,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2399,"column":0},"generated":{"line":2400,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2400,"column":0},"generated":{"line":2401,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2401,"column":0},"generated":{"line":2402,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2402,"column":0},"generated":{"line":2403,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2403,"column":0},"generated":{"line":2404,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2404,"column":0},"generated":{"line":2405,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2405,"column":0},"generated":{"line":2406,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2406,"column":0},"generated":{"line":2407,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2407,"column":0},"generated":{"line":2408,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2408,"column":0},"generated":{"line":2409,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2409,"column":0},"generated":{"line":2410,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2410,"column":0},"generated":{"line":2411,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2411,"column":0},"generated":{"line":2412,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2412,"column":0},"generated":{"line":2413,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2413,"column":0},"generated":{"line":2414,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2414,"column":0},"generated":{"line":2415,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2415,"column":0},"generated":{"line":2416,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2416,"column":0},"generated":{"line":2417,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2417,"column":0},"generated":{"line":2418,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2418,"column":0},"generated":{"line":2419,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2419,"column":0},"generated":{"line":2420,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2420,"column":0},"generated":{"line":2421,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2421,"column":0},"generated":{"line":2422,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2422,"column":0},"generated":{"line":2423,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2423,"column":0},"generated":{"line":2424,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2424,"column":0},"generated":{"line":2425,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2425,"column":0},"generated":{"line":2426,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2426,"column":0},"generated":{"line":2427,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2427,"column":0},"generated":{"line":2428,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2428,"column":0},"generated":{"line":2429,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2429,"column":0},"generated":{"line":2430,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2430,"column":0},"generated":{"line":2431,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2431,"column":0},"generated":{"line":2432,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2432,"column":0},"generated":{"line":2433,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2433,"column":0},"generated":{"line":2434,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2434,"column":0},"generated":{"line":2435,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2435,"column":0},"generated":{"line":2436,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2436,"column":0},"generated":{"line":2437,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2437,"column":0},"generated":{"line":2438,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2438,"column":0},"generated":{"line":2439,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2439,"column":0},"generated":{"line":2440,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2440,"column":0},"generated":{"line":2441,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2441,"column":0},"generated":{"line":2442,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2442,"column":0},"generated":{"line":2443,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2443,"column":0},"generated":{"line":2444,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2444,"column":0},"generated":{"line":2445,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2445,"column":0},"generated":{"line":2446,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2446,"column":0},"generated":{"line":2447,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2447,"column":0},"generated":{"line":2448,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2448,"column":0},"generated":{"line":2449,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2449,"column":0},"generated":{"line":2450,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2450,"column":0},"generated":{"line":2451,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2451,"column":0},"generated":{"line":2452,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2452,"column":0},"generated":{"line":2453,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2453,"column":0},"generated":{"line":2454,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2454,"column":0},"generated":{"line":2455,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2455,"column":0},"generated":{"line":2456,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2456,"column":0},"generated":{"line":2457,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2457,"column":0},"generated":{"line":2458,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2458,"column":0},"generated":{"line":2459,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2459,"column":0},"generated":{"line":2460,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2460,"column":0},"generated":{"line":2461,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2461,"column":0},"generated":{"line":2462,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2462,"column":0},"generated":{"line":2463,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2463,"column":0},"generated":{"line":2464,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2464,"column":0},"generated":{"line":2465,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2465,"column":0},"generated":{"line":2466,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2466,"column":0},"generated":{"line":2467,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2467,"column":0},"generated":{"line":2468,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2468,"column":0},"generated":{"line":2469,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2469,"column":0},"generated":{"line":2470,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2470,"column":0},"generated":{"line":2471,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2471,"column":0},"generated":{"line":2472,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2472,"column":0},"generated":{"line":2473,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2473,"column":0},"generated":{"line":2474,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2474,"column":0},"generated":{"line":2475,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2475,"column":0},"generated":{"line":2476,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2476,"column":0},"generated":{"line":2477,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2477,"column":0},"generated":{"line":2478,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2478,"column":0},"generated":{"line":2479,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2479,"column":0},"generated":{"line":2480,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2480,"column":0},"generated":{"line":2481,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2481,"column":0},"generated":{"line":2482,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2482,"column":0},"generated":{"line":2483,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2483,"column":0},"generated":{"line":2484,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2484,"column":0},"generated":{"line":2485,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2485,"column":0},"generated":{"line":2486,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2486,"column":0},"generated":{"line":2487,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2487,"column":0},"generated":{"line":2488,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2488,"column":0},"generated":{"line":2489,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2489,"column":0},"generated":{"line":2490,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2490,"column":0},"generated":{"line":2491,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2491,"column":0},"generated":{"line":2492,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2492,"column":0},"generated":{"line":2493,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2493,"column":0},"generated":{"line":2494,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2494,"column":0},"generated":{"line":2495,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2495,"column":0},"generated":{"line":2496,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2496,"column":0},"generated":{"line":2497,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2497,"column":0},"generated":{"line":2498,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2498,"column":0},"generated":{"line":2499,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2499,"column":0},"generated":{"line":2500,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2500,"column":0},"generated":{"line":2501,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2501,"column":0},"generated":{"line":2502,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2502,"column":0},"generated":{"line":2503,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2503,"column":0},"generated":{"line":2504,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2504,"column":0},"generated":{"line":2505,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2505,"column":0},"generated":{"line":2506,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2506,"column":0},"generated":{"line":2507,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2507,"column":0},"generated":{"line":2508,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2508,"column":0},"generated":{"line":2509,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2509,"column":0},"generated":{"line":2510,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2510,"column":0},"generated":{"line":2511,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2511,"column":0},"generated":{"line":2512,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2512,"column":0},"generated":{"line":2513,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2513,"column":0},"generated":{"line":2514,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2514,"column":0},"generated":{"line":2515,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2515,"column":0},"generated":{"line":2516,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2516,"column":0},"generated":{"line":2517,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2517,"column":0},"generated":{"line":2518,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2518,"column":0},"generated":{"line":2519,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2519,"column":0},"generated":{"line":2520,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2520,"column":0},"generated":{"line":2521,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2521,"column":0},"generated":{"line":2522,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2522,"column":0},"generated":{"line":2523,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2523,"column":0},"generated":{"line":2524,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2524,"column":0},"generated":{"line":2525,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2525,"column":0},"generated":{"line":2526,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2526,"column":0},"generated":{"line":2527,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2527,"column":0},"generated":{"line":2528,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2528,"column":0},"generated":{"line":2529,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2529,"column":0},"generated":{"line":2530,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2530,"column":0},"generated":{"line":2531,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2531,"column":0},"generated":{"line":2532,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2532,"column":0},"generated":{"line":2533,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2533,"column":0},"generated":{"line":2534,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2534,"column":0},"generated":{"line":2535,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2535,"column":0},"generated":{"line":2536,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2536,"column":0},"generated":{"line":2537,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2537,"column":0},"generated":{"line":2538,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2538,"column":0},"generated":{"line":2539,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2539,"column":0},"generated":{"line":2540,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2540,"column":0},"generated":{"line":2541,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2541,"column":0},"generated":{"line":2542,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2542,"column":0},"generated":{"line":2543,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2543,"column":0},"generated":{"line":2544,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2544,"column":0},"generated":{"line":2545,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2545,"column":0},"generated":{"line":2546,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2546,"column":0},"generated":{"line":2547,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2547,"column":0},"generated":{"line":2548,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2548,"column":0},"generated":{"line":2549,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2549,"column":0},"generated":{"line":2550,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2550,"column":0},"generated":{"line":2551,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2551,"column":0},"generated":{"line":2552,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2552,"column":0},"generated":{"line":2553,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2553,"column":0},"generated":{"line":2554,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2554,"column":0},"generated":{"line":2555,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2555,"column":0},"generated":{"line":2556,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2556,"column":0},"generated":{"line":2557,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2557,"column":0},"generated":{"line":2558,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2558,"column":0},"generated":{"line":2559,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2559,"column":0},"generated":{"line":2560,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2560,"column":0},"generated":{"line":2561,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2561,"column":0},"generated":{"line":2562,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2562,"column":0},"generated":{"line":2563,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2563,"column":0},"generated":{"line":2564,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2564,"column":0},"generated":{"line":2565,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2565,"column":0},"generated":{"line":2566,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2566,"column":0},"generated":{"line":2567,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2567,"column":0},"generated":{"line":2568,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2568,"column":0},"generated":{"line":2569,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2569,"column":0},"generated":{"line":2570,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2570,"column":0},"generated":{"line":2571,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2571,"column":0},"generated":{"line":2572,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2572,"column":0},"generated":{"line":2573,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2573,"column":0},"generated":{"line":2574,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2574,"column":0},"generated":{"line":2575,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2575,"column":0},"generated":{"line":2576,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2576,"column":0},"generated":{"line":2577,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2577,"column":0},"generated":{"line":2578,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2578,"column":0},"generated":{"line":2579,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2579,"column":0},"generated":{"line":2580,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2580,"column":0},"generated":{"line":2581,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2581,"column":0},"generated":{"line":2582,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2582,"column":0},"generated":{"line":2583,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2583,"column":0},"generated":{"line":2584,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2584,"column":0},"generated":{"line":2585,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2585,"column":0},"generated":{"line":2586,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2586,"column":0},"generated":{"line":2587,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2587,"column":0},"generated":{"line":2588,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2588,"column":0},"generated":{"line":2589,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2589,"column":0},"generated":{"line":2590,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2590,"column":0},"generated":{"line":2591,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2591,"column":0},"generated":{"line":2592,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2592,"column":0},"generated":{"line":2593,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2593,"column":0},"generated":{"line":2594,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2594,"column":0},"generated":{"line":2595,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2595,"column":0},"generated":{"line":2596,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2596,"column":0},"generated":{"line":2597,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2597,"column":0},"generated":{"line":2598,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2598,"column":0},"generated":{"line":2599,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2599,"column":0},"generated":{"line":2600,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2600,"column":0},"generated":{"line":2601,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2601,"column":0},"generated":{"line":2602,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2602,"column":0},"generated":{"line":2603,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2603,"column":0},"generated":{"line":2604,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2604,"column":0},"generated":{"line":2605,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2605,"column":0},"generated":{"line":2606,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2606,"column":0},"generated":{"line":2607,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2607,"column":0},"generated":{"line":2608,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2608,"column":0},"generated":{"line":2609,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2609,"column":0},"generated":{"line":2610,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2610,"column":0},"generated":{"line":2611,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2611,"column":0},"generated":{"line":2612,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2612,"column":0},"generated":{"line":2613,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2613,"column":0},"generated":{"line":2614,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2614,"column":0},"generated":{"line":2615,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2615,"column":0},"generated":{"line":2616,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2616,"column":0},"generated":{"line":2617,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2617,"column":0},"generated":{"line":2618,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2618,"column":0},"generated":{"line":2619,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2619,"column":0},"generated":{"line":2620,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2620,"column":0},"generated":{"line":2621,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2621,"column":0},"generated":{"line":2622,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2622,"column":0},"generated":{"line":2623,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2623,"column":0},"generated":{"line":2624,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2624,"column":0},"generated":{"line":2625,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2625,"column":0},"generated":{"line":2626,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2626,"column":0},"generated":{"line":2627,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2627,"column":0},"generated":{"line":2628,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2628,"column":0},"generated":{"line":2629,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2629,"column":0},"generated":{"line":2630,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2630,"column":0},"generated":{"line":2631,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2631,"column":0},"generated":{"line":2632,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2632,"column":0},"generated":{"line":2633,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2633,"column":0},"generated":{"line":2634,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2634,"column":0},"generated":{"line":2635,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2635,"column":0},"generated":{"line":2636,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2636,"column":0},"generated":{"line":2637,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2637,"column":0},"generated":{"line":2638,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2638,"column":0},"generated":{"line":2639,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2639,"column":0},"generated":{"line":2640,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2640,"column":0},"generated":{"line":2641,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2641,"column":0},"generated":{"line":2642,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2642,"column":0},"generated":{"line":2643,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2643,"column":0},"generated":{"line":2644,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2644,"column":0},"generated":{"line":2645,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2645,"column":0},"generated":{"line":2646,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2646,"column":0},"generated":{"line":2647,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2647,"column":0},"generated":{"line":2648,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2648,"column":0},"generated":{"line":2649,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2649,"column":0},"generated":{"line":2650,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2650,"column":0},"generated":{"line":2651,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2651,"column":0},"generated":{"line":2652,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2652,"column":0},"generated":{"line":2653,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2653,"column":0},"generated":{"line":2654,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2654,"column":0},"generated":{"line":2655,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2655,"column":0},"generated":{"line":2656,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2656,"column":0},"generated":{"line":2657,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2657,"column":0},"generated":{"line":2658,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2658,"column":0},"generated":{"line":2659,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2659,"column":0},"generated":{"line":2660,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2660,"column":0},"generated":{"line":2661,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2661,"column":0},"generated":{"line":2662,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2662,"column":0},"generated":{"line":2663,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2663,"column":0},"generated":{"line":2664,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2664,"column":0},"generated":{"line":2665,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2665,"column":0},"generated":{"line":2666,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2666,"column":0},"generated":{"line":2667,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2667,"column":0},"generated":{"line":2668,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2668,"column":0},"generated":{"line":2669,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2669,"column":0},"generated":{"line":2670,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2670,"column":0},"generated":{"line":2671,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2671,"column":0},"generated":{"line":2672,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2672,"column":0},"generated":{"line":2673,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2673,"column":0},"generated":{"line":2674,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2674,"column":0},"generated":{"line":2675,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2675,"column":0},"generated":{"line":2676,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2676,"column":0},"generated":{"line":2677,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2677,"column":0},"generated":{"line":2678,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2678,"column":0},"generated":{"line":2679,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2679,"column":0},"generated":{"line":2680,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2680,"column":0},"generated":{"line":2681,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2681,"column":0},"generated":{"line":2682,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2682,"column":0},"generated":{"line":2683,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2683,"column":0},"generated":{"line":2684,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2684,"column":0},"generated":{"line":2685,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2685,"column":0},"generated":{"line":2686,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2686,"column":0},"generated":{"line":2687,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2687,"column":0},"generated":{"line":2688,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2688,"column":0},"generated":{"line":2689,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2689,"column":0},"generated":{"line":2690,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2690,"column":0},"generated":{"line":2691,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2691,"column":0},"generated":{"line":2692,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2692,"column":0},"generated":{"line":2693,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2693,"column":0},"generated":{"line":2694,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2694,"column":0},"generated":{"line":2695,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2695,"column":0},"generated":{"line":2696,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2696,"column":0},"generated":{"line":2697,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2697,"column":0},"generated":{"line":2698,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2698,"column":0},"generated":{"line":2699,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2699,"column":0},"generated":{"line":2700,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2700,"column":0},"generated":{"line":2701,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2701,"column":0},"generated":{"line":2702,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2702,"column":0},"generated":{"line":2703,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2703,"column":0},"generated":{"line":2704,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2704,"column":0},"generated":{"line":2705,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2705,"column":0},"generated":{"line":2706,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2706,"column":0},"generated":{"line":2707,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2707,"column":0},"generated":{"line":2708,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2708,"column":0},"generated":{"line":2709,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2709,"column":0},"generated":{"line":2710,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2710,"column":0},"generated":{"line":2711,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2711,"column":0},"generated":{"line":2712,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2712,"column":0},"generated":{"line":2713,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2713,"column":0},"generated":{"line":2714,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2714,"column":0},"generated":{"line":2715,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2715,"column":0},"generated":{"line":2716,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2716,"column":0},"generated":{"line":2717,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2717,"column":0},"generated":{"line":2718,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2718,"column":0},"generated":{"line":2719,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2719,"column":0},"generated":{"line":2720,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2720,"column":0},"generated":{"line":2721,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2721,"column":0},"generated":{"line":2722,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2722,"column":0},"generated":{"line":2723,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2723,"column":0},"generated":{"line":2724,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2724,"column":0},"generated":{"line":2725,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2725,"column":0},"generated":{"line":2726,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2726,"column":0},"generated":{"line":2727,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2727,"column":0},"generated":{"line":2728,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2728,"column":0},"generated":{"line":2729,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2729,"column":0},"generated":{"line":2730,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2730,"column":0},"generated":{"line":2731,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2731,"column":0},"generated":{"line":2732,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2732,"column":0},"generated":{"line":2733,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2733,"column":0},"generated":{"line":2734,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2734,"column":0},"generated":{"line":2735,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2735,"column":0},"generated":{"line":2736,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2736,"column":0},"generated":{"line":2737,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2737,"column":0},"generated":{"line":2738,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2738,"column":0},"generated":{"line":2739,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2739,"column":0},"generated":{"line":2740,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2740,"column":0},"generated":{"line":2741,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2741,"column":0},"generated":{"line":2742,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2742,"column":0},"generated":{"line":2743,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2743,"column":0},"generated":{"line":2744,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2744,"column":0},"generated":{"line":2745,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2745,"column":0},"generated":{"line":2746,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2746,"column":0},"generated":{"line":2747,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2747,"column":0},"generated":{"line":2748,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2748,"column":0},"generated":{"line":2749,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2749,"column":0},"generated":{"line":2750,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2750,"column":0},"generated":{"line":2751,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2751,"column":0},"generated":{"line":2752,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2752,"column":0},"generated":{"line":2753,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2753,"column":0},"generated":{"line":2754,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2754,"column":0},"generated":{"line":2755,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2755,"column":0},"generated":{"line":2756,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2756,"column":0},"generated":{"line":2757,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2757,"column":0},"generated":{"line":2758,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2758,"column":0},"generated":{"line":2759,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2759,"column":0},"generated":{"line":2760,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2760,"column":0},"generated":{"line":2761,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2761,"column":0},"generated":{"line":2762,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2762,"column":0},"generated":{"line":2763,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2763,"column":0},"generated":{"line":2764,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2764,"column":0},"generated":{"line":2765,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2765,"column":0},"generated":{"line":2766,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2766,"column":0},"generated":{"line":2767,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2767,"column":0},"generated":{"line":2768,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2768,"column":0},"generated":{"line":2769,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2769,"column":0},"generated":{"line":2770,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2770,"column":0},"generated":{"line":2771,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2771,"column":0},"generated":{"line":2772,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2772,"column":0},"generated":{"line":2773,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2773,"column":0},"generated":{"line":2774,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2774,"column":0},"generated":{"line":2775,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2775,"column":0},"generated":{"line":2776,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2776,"column":0},"generated":{"line":2777,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2777,"column":0},"generated":{"line":2778,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2778,"column":0},"generated":{"line":2779,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2779,"column":0},"generated":{"line":2780,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2780,"column":0},"generated":{"line":2781,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2781,"column":0},"generated":{"line":2782,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2782,"column":0},"generated":{"line":2783,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2783,"column":0},"generated":{"line":2784,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2784,"column":0},"generated":{"line":2785,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2785,"column":0},"generated":{"line":2786,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2786,"column":0},"generated":{"line":2787,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2787,"column":0},"generated":{"line":2788,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2788,"column":0},"generated":{"line":2789,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2789,"column":0},"generated":{"line":2790,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2790,"column":0},"generated":{"line":2791,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2791,"column":0},"generated":{"line":2792,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2792,"column":0},"generated":{"line":2793,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2793,"column":0},"generated":{"line":2794,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2794,"column":0},"generated":{"line":2795,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2795,"column":0},"generated":{"line":2796,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2796,"column":0},"generated":{"line":2797,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2797,"column":0},"generated":{"line":2798,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2798,"column":0},"generated":{"line":2799,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2799,"column":0},"generated":{"line":2800,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2800,"column":0},"generated":{"line":2801,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2801,"column":0},"generated":{"line":2802,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2802,"column":0},"generated":{"line":2803,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2803,"column":0},"generated":{"line":2804,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2804,"column":0},"generated":{"line":2805,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2805,"column":0},"generated":{"line":2806,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2806,"column":0},"generated":{"line":2807,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2807,"column":0},"generated":{"line":2808,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2808,"column":0},"generated":{"line":2809,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2809,"column":0},"generated":{"line":2810,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2810,"column":0},"generated":{"line":2811,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2811,"column":0},"generated":{"line":2812,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2812,"column":0},"generated":{"line":2813,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2813,"column":0},"generated":{"line":2814,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2814,"column":0},"generated":{"line":2815,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2815,"column":0},"generated":{"line":2816,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2816,"column":0},"generated":{"line":2817,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2817,"column":0},"generated":{"line":2818,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2818,"column":0},"generated":{"line":2819,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2819,"column":0},"generated":{"line":2820,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2820,"column":0},"generated":{"line":2821,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2821,"column":0},"generated":{"line":2822,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2822,"column":0},"generated":{"line":2823,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2823,"column":0},"generated":{"line":2824,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2824,"column":0},"generated":{"line":2825,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2825,"column":0},"generated":{"line":2826,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2826,"column":0},"generated":{"line":2827,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2827,"column":0},"generated":{"line":2828,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2828,"column":0},"generated":{"line":2829,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2829,"column":0},"generated":{"line":2830,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2830,"column":0},"generated":{"line":2831,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2831,"column":0},"generated":{"line":2832,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2832,"column":0},"generated":{"line":2833,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2833,"column":0},"generated":{"line":2834,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2834,"column":0},"generated":{"line":2835,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2835,"column":0},"generated":{"line":2836,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2836,"column":0},"generated":{"line":2837,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2837,"column":0},"generated":{"line":2838,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2838,"column":0},"generated":{"line":2839,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2839,"column":0},"generated":{"line":2840,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2840,"column":0},"generated":{"line":2841,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2841,"column":0},"generated":{"line":2842,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2842,"column":0},"generated":{"line":2843,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2843,"column":0},"generated":{"line":2844,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2844,"column":0},"generated":{"line":2845,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2845,"column":0},"generated":{"line":2846,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2846,"column":0},"generated":{"line":2847,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2847,"column":0},"generated":{"line":2848,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2848,"column":0},"generated":{"line":2849,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2849,"column":0},"generated":{"line":2850,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2850,"column":0},"generated":{"line":2851,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2851,"column":0},"generated":{"line":2852,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2852,"column":0},"generated":{"line":2853,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2853,"column":0},"generated":{"line":2854,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2854,"column":0},"generated":{"line":2855,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2855,"column":0},"generated":{"line":2856,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2856,"column":0},"generated":{"line":2857,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2857,"column":0},"generated":{"line":2858,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2858,"column":0},"generated":{"line":2859,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2859,"column":0},"generated":{"line":2860,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2860,"column":0},"generated":{"line":2861,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2861,"column":0},"generated":{"line":2862,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2862,"column":0},"generated":{"line":2863,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2863,"column":0},"generated":{"line":2864,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2864,"column":0},"generated":{"line":2865,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2865,"column":0},"generated":{"line":2866,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2866,"column":0},"generated":{"line":2867,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2867,"column":0},"generated":{"line":2868,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2868,"column":0},"generated":{"line":2869,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2869,"column":0},"generated":{"line":2870,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2870,"column":0},"generated":{"line":2871,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2871,"column":0},"generated":{"line":2872,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2872,"column":0},"generated":{"line":2873,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2873,"column":0},"generated":{"line":2874,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2874,"column":0},"generated":{"line":2875,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2875,"column":0},"generated":{"line":2876,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2876,"column":0},"generated":{"line":2877,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2877,"column":0},"generated":{"line":2878,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2878,"column":0},"generated":{"line":2879,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2879,"column":0},"generated":{"line":2880,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2880,"column":0},"generated":{"line":2881,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2881,"column":0},"generated":{"line":2882,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2882,"column":0},"generated":{"line":2883,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2883,"column":0},"generated":{"line":2884,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2884,"column":0},"generated":{"line":2885,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2885,"column":0},"generated":{"line":2886,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2886,"column":0},"generated":{"line":2887,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2887,"column":0},"generated":{"line":2888,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2888,"column":0},"generated":{"line":2889,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2889,"column":0},"generated":{"line":2890,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2890,"column":0},"generated":{"line":2891,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2891,"column":0},"generated":{"line":2892,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2892,"column":0},"generated":{"line":2893,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2893,"column":0},"generated":{"line":2894,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2894,"column":0},"generated":{"line":2895,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2895,"column":0},"generated":{"line":2896,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2896,"column":0},"generated":{"line":2897,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2897,"column":0},"generated":{"line":2898,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2898,"column":0},"generated":{"line":2899,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2899,"column":0},"generated":{"line":2900,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2900,"column":0},"generated":{"line":2901,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2901,"column":0},"generated":{"line":2902,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2902,"column":0},"generated":{"line":2903,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2903,"column":0},"generated":{"line":2904,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2904,"column":0},"generated":{"line":2905,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2905,"column":0},"generated":{"line":2906,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2906,"column":0},"generated":{"line":2907,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2907,"column":0},"generated":{"line":2908,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2908,"column":0},"generated":{"line":2909,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2909,"column":0},"generated":{"line":2910,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2910,"column":0},"generated":{"line":2911,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2911,"column":0},"generated":{"line":2912,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2912,"column":0},"generated":{"line":2913,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2913,"column":0},"generated":{"line":2914,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2914,"column":0},"generated":{"line":2915,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2915,"column":0},"generated":{"line":2916,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2916,"column":0},"generated":{"line":2917,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2917,"column":0},"generated":{"line":2918,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2918,"column":0},"generated":{"line":2919,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2919,"column":0},"generated":{"line":2920,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2920,"column":0},"generated":{"line":2921,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2921,"column":0},"generated":{"line":2922,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2922,"column":0},"generated":{"line":2923,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2923,"column":0},"generated":{"line":2924,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2924,"column":0},"generated":{"line":2925,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2925,"column":0},"generated":{"line":2926,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2926,"column":0},"generated":{"line":2927,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2927,"column":0},"generated":{"line":2928,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2928,"column":0},"generated":{"line":2929,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2929,"column":0},"generated":{"line":2930,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2930,"column":0},"generated":{"line":2931,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2931,"column":0},"generated":{"line":2932,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2932,"column":0},"generated":{"line":2933,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2933,"column":0},"generated":{"line":2934,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2934,"column":0},"generated":{"line":2935,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2935,"column":0},"generated":{"line":2936,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2936,"column":0},"generated":{"line":2937,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2937,"column":0},"generated":{"line":2938,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2938,"column":0},"generated":{"line":2939,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2939,"column":0},"generated":{"line":2940,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2940,"column":0},"generated":{"line":2941,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2941,"column":0},"generated":{"line":2942,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2942,"column":0},"generated":{"line":2943,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2943,"column":0},"generated":{"line":2944,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2944,"column":0},"generated":{"line":2945,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2945,"column":0},"generated":{"line":2946,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2946,"column":0},"generated":{"line":2947,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2947,"column":0},"generated":{"line":2948,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2948,"column":0},"generated":{"line":2949,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2949,"column":0},"generated":{"line":2950,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2950,"column":0},"generated":{"line":2951,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2951,"column":0},"generated":{"line":2952,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2952,"column":0},"generated":{"line":2953,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2953,"column":0},"generated":{"line":2954,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2954,"column":0},"generated":{"line":2955,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2955,"column":0},"generated":{"line":2956,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2956,"column":0},"generated":{"line":2957,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2957,"column":0},"generated":{"line":2958,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2958,"column":0},"generated":{"line":2959,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2959,"column":0},"generated":{"line":2960,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2960,"column":0},"generated":{"line":2961,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2961,"column":0},"generated":{"line":2962,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2962,"column":0},"generated":{"line":2963,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2963,"column":0},"generated":{"line":2964,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2964,"column":0},"generated":{"line":2965,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2965,"column":0},"generated":{"line":2966,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2966,"column":0},"generated":{"line":2967,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2967,"column":0},"generated":{"line":2968,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2968,"column":0},"generated":{"line":2969,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2969,"column":0},"generated":{"line":2970,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2970,"column":0},"generated":{"line":2971,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2971,"column":0},"generated":{"line":2972,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2972,"column":0},"generated":{"line":2973,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2973,"column":0},"generated":{"line":2974,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2974,"column":0},"generated":{"line":2975,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2975,"column":0},"generated":{"line":2976,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2976,"column":0},"generated":{"line":2977,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2977,"column":0},"generated":{"line":2978,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2978,"column":0},"generated":{"line":2979,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2979,"column":0},"generated":{"line":2980,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2980,"column":0},"generated":{"line":2981,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2981,"column":0},"generated":{"line":2982,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2982,"column":0},"generated":{"line":2983,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2983,"column":0},"generated":{"line":2984,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2984,"column":0},"generated":{"line":2985,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2985,"column":0},"generated":{"line":2986,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2986,"column":0},"generated":{"line":2987,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2987,"column":0},"generated":{"line":2988,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2988,"column":0},"generated":{"line":2989,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2989,"column":0},"generated":{"line":2990,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2990,"column":0},"generated":{"line":2991,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2991,"column":0},"generated":{"line":2992,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2992,"column":0},"generated":{"line":2993,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2993,"column":0},"generated":{"line":2994,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2994,"column":0},"generated":{"line":2995,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2995,"column":0},"generated":{"line":2996,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2996,"column":0},"generated":{"line":2997,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2997,"column":0},"generated":{"line":2998,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2998,"column":0},"generated":{"line":2999,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":2999,"column":0},"generated":{"line":3000,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3000,"column":0},"generated":{"line":3001,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3001,"column":0},"generated":{"line":3002,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3002,"column":0},"generated":{"line":3003,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3003,"column":0},"generated":{"line":3004,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3004,"column":0},"generated":{"line":3005,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3005,"column":0},"generated":{"line":3006,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3006,"column":0},"generated":{"line":3007,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3007,"column":0},"generated":{"line":3008,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3008,"column":0},"generated":{"line":3009,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3009,"column":0},"generated":{"line":3010,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3010,"column":0},"generated":{"line":3011,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3011,"column":0},"generated":{"line":3012,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3012,"column":0},"generated":{"line":3013,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3013,"column":0},"generated":{"line":3014,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3014,"column":0},"generated":{"line":3015,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3015,"column":0},"generated":{"line":3016,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3016,"column":0},"generated":{"line":3017,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3017,"column":0},"generated":{"line":3018,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3018,"column":0},"generated":{"line":3019,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3019,"column":0},"generated":{"line":3020,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3020,"column":0},"generated":{"line":3021,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3021,"column":0},"generated":{"line":3022,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3022,"column":0},"generated":{"line":3023,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3023,"column":0},"generated":{"line":3024,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3024,"column":0},"generated":{"line":3025,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3025,"column":0},"generated":{"line":3026,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3026,"column":0},"generated":{"line":3027,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3027,"column":0},"generated":{"line":3028,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3028,"column":0},"generated":{"line":3029,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3029,"column":0},"generated":{"line":3030,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3030,"column":0},"generated":{"line":3031,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3031,"column":0},"generated":{"line":3032,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3032,"column":0},"generated":{"line":3033,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3033,"column":0},"generated":{"line":3034,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3034,"column":0},"generated":{"line":3035,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3035,"column":0},"generated":{"line":3036,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3036,"column":0},"generated":{"line":3037,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3037,"column":0},"generated":{"line":3038,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3038,"column":0},"generated":{"line":3039,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3039,"column":0},"generated":{"line":3040,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3040,"column":0},"generated":{"line":3041,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3041,"column":0},"generated":{"line":3042,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3042,"column":0},"generated":{"line":3043,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3043,"column":0},"generated":{"line":3044,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3044,"column":0},"generated":{"line":3045,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3045,"column":0},"generated":{"line":3046,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3046,"column":0},"generated":{"line":3047,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3047,"column":0},"generated":{"line":3048,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3048,"column":0},"generated":{"line":3049,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3049,"column":0},"generated":{"line":3050,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3050,"column":0},"generated":{"line":3051,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3051,"column":0},"generated":{"line":3052,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3052,"column":0},"generated":{"line":3053,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3053,"column":0},"generated":{"line":3054,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3054,"column":0},"generated":{"line":3055,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3055,"column":0},"generated":{"line":3056,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3056,"column":0},"generated":{"line":3057,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3057,"column":0},"generated":{"line":3058,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3058,"column":0},"generated":{"line":3059,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3059,"column":0},"generated":{"line":3060,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3060,"column":0},"generated":{"line":3061,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3061,"column":0},"generated":{"line":3062,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3062,"column":0},"generated":{"line":3063,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3063,"column":0},"generated":{"line":3064,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3064,"column":0},"generated":{"line":3065,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3065,"column":0},"generated":{"line":3066,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3066,"column":0},"generated":{"line":3067,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3067,"column":0},"generated":{"line":3068,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3068,"column":0},"generated":{"line":3069,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3069,"column":0},"generated":{"line":3070,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3070,"column":0},"generated":{"line":3071,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3071,"column":0},"generated":{"line":3072,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3072,"column":0},"generated":{"line":3073,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3073,"column":0},"generated":{"line":3074,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3074,"column":0},"generated":{"line":3075,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3075,"column":0},"generated":{"line":3076,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3076,"column":0},"generated":{"line":3077,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3077,"column":0},"generated":{"line":3078,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3078,"column":0},"generated":{"line":3079,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3079,"column":0},"generated":{"line":3080,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3080,"column":0},"generated":{"line":3081,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3081,"column":0},"generated":{"line":3082,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3082,"column":0},"generated":{"line":3083,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3083,"column":0},"generated":{"line":3084,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3084,"column":0},"generated":{"line":3085,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3085,"column":0},"generated":{"line":3086,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3086,"column":0},"generated":{"line":3087,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3087,"column":0},"generated":{"line":3088,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3088,"column":0},"generated":{"line":3089,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3089,"column":0},"generated":{"line":3090,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3090,"column":0},"generated":{"line":3091,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3091,"column":0},"generated":{"line":3092,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3092,"column":0},"generated":{"line":3093,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3093,"column":0},"generated":{"line":3094,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3094,"column":0},"generated":{"line":3095,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3095,"column":0},"generated":{"line":3096,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3096,"column":0},"generated":{"line":3097,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3097,"column":0},"generated":{"line":3098,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3098,"column":0},"generated":{"line":3099,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3099,"column":0},"generated":{"line":3100,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3100,"column":0},"generated":{"line":3101,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3101,"column":0},"generated":{"line":3102,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3102,"column":0},"generated":{"line":3103,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3103,"column":0},"generated":{"line":3104,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3104,"column":0},"generated":{"line":3105,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3105,"column":0},"generated":{"line":3106,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3106,"column":0},"generated":{"line":3107,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3107,"column":0},"generated":{"line":3108,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3108,"column":0},"generated":{"line":3109,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3109,"column":0},"generated":{"line":3110,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3110,"column":0},"generated":{"line":3111,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3111,"column":0},"generated":{"line":3112,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3112,"column":0},"generated":{"line":3113,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3113,"column":0},"generated":{"line":3114,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3114,"column":0},"generated":{"line":3115,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3115,"column":0},"generated":{"line":3116,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3116,"column":0},"generated":{"line":3117,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3117,"column":0},"generated":{"line":3118,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3118,"column":0},"generated":{"line":3119,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3119,"column":0},"generated":{"line":3120,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3120,"column":0},"generated":{"line":3121,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3121,"column":0},"generated":{"line":3122,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3122,"column":0},"generated":{"line":3123,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3123,"column":0},"generated":{"line":3124,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3124,"column":0},"generated":{"line":3125,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3125,"column":0},"generated":{"line":3126,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3126,"column":0},"generated":{"line":3127,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3127,"column":0},"generated":{"line":3128,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3128,"column":0},"generated":{"line":3129,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3129,"column":0},"generated":{"line":3130,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3130,"column":0},"generated":{"line":3131,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3131,"column":0},"generated":{"line":3132,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3132,"column":0},"generated":{"line":3133,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3133,"column":0},"generated":{"line":3134,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3134,"column":0},"generated":{"line":3135,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3135,"column":0},"generated":{"line":3136,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3136,"column":0},"generated":{"line":3137,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3137,"column":0},"generated":{"line":3138,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3138,"column":0},"generated":{"line":3139,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3139,"column":0},"generated":{"line":3140,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3140,"column":0},"generated":{"line":3141,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3141,"column":0},"generated":{"line":3142,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3142,"column":0},"generated":{"line":3143,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3143,"column":0},"generated":{"line":3144,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3144,"column":0},"generated":{"line":3145,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3145,"column":0},"generated":{"line":3146,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3146,"column":0},"generated":{"line":3147,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3147,"column":0},"generated":{"line":3148,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3148,"column":0},"generated":{"line":3149,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3149,"column":0},"generated":{"line":3150,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3150,"column":0},"generated":{"line":3151,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3151,"column":0},"generated":{"line":3152,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3152,"column":0},"generated":{"line":3153,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3153,"column":0},"generated":{"line":3154,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3154,"column":0},"generated":{"line":3155,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3155,"column":0},"generated":{"line":3156,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3156,"column":0},"generated":{"line":3157,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3157,"column":0},"generated":{"line":3158,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3158,"column":0},"generated":{"line":3159,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3159,"column":0},"generated":{"line":3160,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3160,"column":0},"generated":{"line":3161,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3161,"column":0},"generated":{"line":3162,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3162,"column":0},"generated":{"line":3163,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3163,"column":0},"generated":{"line":3164,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3164,"column":0},"generated":{"line":3165,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3165,"column":0},"generated":{"line":3166,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3166,"column":0},"generated":{"line":3167,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3167,"column":0},"generated":{"line":3168,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3168,"column":0},"generated":{"line":3169,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3169,"column":0},"generated":{"line":3170,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3170,"column":0},"generated":{"line":3171,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3171,"column":0},"generated":{"line":3172,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3172,"column":0},"generated":{"line":3173,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3173,"column":0},"generated":{"line":3174,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3174,"column":0},"generated":{"line":3175,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3175,"column":0},"generated":{"line":3176,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3176,"column":0},"generated":{"line":3177,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3177,"column":0},"generated":{"line":3178,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3178,"column":0},"generated":{"line":3179,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3179,"column":0},"generated":{"line":3180,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3180,"column":0},"generated":{"line":3181,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3181,"column":0},"generated":{"line":3182,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3182,"column":0},"generated":{"line":3183,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3183,"column":0},"generated":{"line":3184,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3184,"column":0},"generated":{"line":3185,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3185,"column":0},"generated":{"line":3186,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3186,"column":0},"generated":{"line":3187,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3187,"column":0},"generated":{"line":3188,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3188,"column":0},"generated":{"line":3189,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3189,"column":0},"generated":{"line":3190,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3190,"column":0},"generated":{"line":3191,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3191,"column":0},"generated":{"line":3192,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3192,"column":0},"generated":{"line":3193,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3193,"column":0},"generated":{"line":3194,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3194,"column":0},"generated":{"line":3195,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3195,"column":0},"generated":{"line":3196,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3196,"column":0},"generated":{"line":3197,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3197,"column":0},"generated":{"line":3198,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3198,"column":0},"generated":{"line":3199,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3199,"column":0},"generated":{"line":3200,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3200,"column":0},"generated":{"line":3201,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3201,"column":0},"generated":{"line":3202,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3202,"column":0},"generated":{"line":3203,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3203,"column":0},"generated":{"line":3204,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3204,"column":0},"generated":{"line":3205,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3205,"column":0},"generated":{"line":3206,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3206,"column":0},"generated":{"line":3207,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3207,"column":0},"generated":{"line":3208,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3208,"column":0},"generated":{"line":3209,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3209,"column":0},"generated":{"line":3210,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3210,"column":0},"generated":{"line":3211,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3211,"column":0},"generated":{"line":3212,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3212,"column":0},"generated":{"line":3213,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3213,"column":0},"generated":{"line":3214,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3214,"column":0},"generated":{"line":3215,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3215,"column":0},"generated":{"line":3216,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3216,"column":0},"generated":{"line":3217,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3217,"column":0},"generated":{"line":3218,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3218,"column":0},"generated":{"line":3219,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3219,"column":0},"generated":{"line":3220,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3220,"column":0},"generated":{"line":3221,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3221,"column":0},"generated":{"line":3222,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3222,"column":0},"generated":{"line":3223,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3223,"column":0},"generated":{"line":3224,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3224,"column":0},"generated":{"line":3225,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3225,"column":0},"generated":{"line":3226,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3226,"column":0},"generated":{"line":3227,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3227,"column":0},"generated":{"line":3228,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3228,"column":0},"generated":{"line":3229,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3229,"column":0},"generated":{"line":3230,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3230,"column":0},"generated":{"line":3231,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3231,"column":0},"generated":{"line":3232,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3232,"column":0},"generated":{"line":3233,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3233,"column":0},"generated":{"line":3234,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3234,"column":0},"generated":{"line":3235,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3235,"column":0},"generated":{"line":3236,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3236,"column":0},"generated":{"line":3237,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3237,"column":0},"generated":{"line":3238,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3238,"column":0},"generated":{"line":3239,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3239,"column":0},"generated":{"line":3240,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3240,"column":0},"generated":{"line":3241,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3241,"column":0},"generated":{"line":3242,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3242,"column":0},"generated":{"line":3243,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3243,"column":0},"generated":{"line":3244,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3244,"column":0},"generated":{"line":3245,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3245,"column":0},"generated":{"line":3246,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3246,"column":0},"generated":{"line":3247,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3247,"column":0},"generated":{"line":3248,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3248,"column":0},"generated":{"line":3249,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3249,"column":0},"generated":{"line":3250,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3250,"column":0},"generated":{"line":3251,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3251,"column":0},"generated":{"line":3252,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3252,"column":0},"generated":{"line":3253,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3253,"column":0},"generated":{"line":3254,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3254,"column":0},"generated":{"line":3255,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3255,"column":0},"generated":{"line":3256,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3256,"column":0},"generated":{"line":3257,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3257,"column":0},"generated":{"line":3258,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3258,"column":0},"generated":{"line":3259,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3259,"column":0},"generated":{"line":3260,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3260,"column":0},"generated":{"line":3261,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3261,"column":0},"generated":{"line":3262,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3262,"column":0},"generated":{"line":3263,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3263,"column":0},"generated":{"line":3264,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3264,"column":0},"generated":{"line":3265,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3265,"column":0},"generated":{"line":3266,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3266,"column":0},"generated":{"line":3267,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3267,"column":0},"generated":{"line":3268,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3268,"column":0},"generated":{"line":3269,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3269,"column":0},"generated":{"line":3270,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3270,"column":0},"generated":{"line":3271,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3271,"column":0},"generated":{"line":3272,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3272,"column":0},"generated":{"line":3273,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3273,"column":0},"generated":{"line":3274,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3274,"column":0},"generated":{"line":3275,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3275,"column":0},"generated":{"line":3276,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3276,"column":0},"generated":{"line":3277,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3277,"column":0},"generated":{"line":3278,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3278,"column":0},"generated":{"line":3279,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3279,"column":0},"generated":{"line":3280,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3280,"column":0},"generated":{"line":3281,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3281,"column":0},"generated":{"line":3282,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3282,"column":0},"generated":{"line":3283,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3283,"column":0},"generated":{"line":3284,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3284,"column":0},"generated":{"line":3285,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3285,"column":0},"generated":{"line":3286,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3286,"column":0},"generated":{"line":3287,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3287,"column":0},"generated":{"line":3288,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3288,"column":0},"generated":{"line":3289,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3289,"column":0},"generated":{"line":3290,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3290,"column":0},"generated":{"line":3291,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3291,"column":0},"generated":{"line":3292,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3292,"column":0},"generated":{"line":3293,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3293,"column":0},"generated":{"line":3294,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3294,"column":0},"generated":{"line":3295,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3295,"column":0},"generated":{"line":3296,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3296,"column":0},"generated":{"line":3297,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3297,"column":0},"generated":{"line":3298,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3298,"column":0},"generated":{"line":3299,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3299,"column":0},"generated":{"line":3300,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3300,"column":0},"generated":{"line":3301,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3301,"column":0},"generated":{"line":3302,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3302,"column":0},"generated":{"line":3303,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3303,"column":0},"generated":{"line":3304,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3304,"column":0},"generated":{"line":3305,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3305,"column":0},"generated":{"line":3306,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3306,"column":0},"generated":{"line":3307,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3307,"column":0},"generated":{"line":3308,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3308,"column":0},"generated":{"line":3309,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3309,"column":0},"generated":{"line":3310,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3310,"column":0},"generated":{"line":3311,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3311,"column":0},"generated":{"line":3312,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3312,"column":0},"generated":{"line":3313,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3313,"column":0},"generated":{"line":3314,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3314,"column":0},"generated":{"line":3315,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3315,"column":0},"generated":{"line":3316,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3316,"column":0},"generated":{"line":3317,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3317,"column":0},"generated":{"line":3318,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3318,"column":0},"generated":{"line":3319,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3319,"column":0},"generated":{"line":3320,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3320,"column":0},"generated":{"line":3321,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3321,"column":0},"generated":{"line":3322,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3322,"column":0},"generated":{"line":3323,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3323,"column":0},"generated":{"line":3324,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3324,"column":0},"generated":{"line":3325,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3325,"column":0},"generated":{"line":3326,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3326,"column":0},"generated":{"line":3327,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3327,"column":0},"generated":{"line":3328,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3328,"column":0},"generated":{"line":3329,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3329,"column":0},"generated":{"line":3330,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3330,"column":0},"generated":{"line":3331,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3331,"column":0},"generated":{"line":3332,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3332,"column":0},"generated":{"line":3333,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3333,"column":0},"generated":{"line":3334,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3334,"column":0},"generated":{"line":3335,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3335,"column":0},"generated":{"line":3336,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3336,"column":0},"generated":{"line":3337,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3337,"column":0},"generated":{"line":3338,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3338,"column":0},"generated":{"line":3339,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3339,"column":0},"generated":{"line":3340,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3340,"column":0},"generated":{"line":3341,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3341,"column":0},"generated":{"line":3342,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3342,"column":0},"generated":{"line":3343,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3343,"column":0},"generated":{"line":3344,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3344,"column":0},"generated":{"line":3345,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3345,"column":0},"generated":{"line":3346,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3346,"column":0},"generated":{"line":3347,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3347,"column":0},"generated":{"line":3348,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3348,"column":0},"generated":{"line":3349,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3349,"column":0},"generated":{"line":3350,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3350,"column":0},"generated":{"line":3351,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3351,"column":0},"generated":{"line":3352,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3352,"column":0},"generated":{"line":3353,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3353,"column":0},"generated":{"line":3354,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3354,"column":0},"generated":{"line":3355,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3355,"column":0},"generated":{"line":3356,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3356,"column":0},"generated":{"line":3357,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3357,"column":0},"generated":{"line":3358,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3358,"column":0},"generated":{"line":3359,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3359,"column":0},"generated":{"line":3360,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3360,"column":0},"generated":{"line":3361,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3361,"column":0},"generated":{"line":3362,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3362,"column":0},"generated":{"line":3363,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3363,"column":0},"generated":{"line":3364,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3364,"column":0},"generated":{"line":3365,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3365,"column":0},"generated":{"line":3366,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3366,"column":0},"generated":{"line":3367,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3367,"column":0},"generated":{"line":3368,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3368,"column":0},"generated":{"line":3369,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3369,"column":0},"generated":{"line":3370,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3370,"column":0},"generated":{"line":3371,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3371,"column":0},"generated":{"line":3372,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3372,"column":0},"generated":{"line":3373,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3373,"column":0},"generated":{"line":3374,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3374,"column":0},"generated":{"line":3375,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3375,"column":0},"generated":{"line":3376,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3376,"column":0},"generated":{"line":3377,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3377,"column":0},"generated":{"line":3378,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3378,"column":0},"generated":{"line":3379,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3379,"column":0},"generated":{"line":3380,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3380,"column":0},"generated":{"line":3381,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3381,"column":0},"generated":{"line":3382,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3382,"column":0},"generated":{"line":3383,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3383,"column":0},"generated":{"line":3384,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3384,"column":0},"generated":{"line":3385,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3385,"column":0},"generated":{"line":3386,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3386,"column":0},"generated":{"line":3387,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3387,"column":0},"generated":{"line":3388,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3388,"column":0},"generated":{"line":3389,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3389,"column":0},"generated":{"line":3390,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3390,"column":0},"generated":{"line":3391,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3391,"column":0},"generated":{"line":3392,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3392,"column":0},"generated":{"line":3393,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3393,"column":0},"generated":{"line":3394,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3394,"column":0},"generated":{"line":3395,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3395,"column":0},"generated":{"line":3396,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3396,"column":0},"generated":{"line":3397,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3397,"column":0},"generated":{"line":3398,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3398,"column":0},"generated":{"line":3399,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3399,"column":0},"generated":{"line":3400,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3400,"column":0},"generated":{"line":3401,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3401,"column":0},"generated":{"line":3402,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3402,"column":0},"generated":{"line":3403,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3403,"column":0},"generated":{"line":3404,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3404,"column":0},"generated":{"line":3405,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3405,"column":0},"generated":{"line":3406,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3406,"column":0},"generated":{"line":3407,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3407,"column":0},"generated":{"line":3408,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3408,"column":0},"generated":{"line":3409,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3409,"column":0},"generated":{"line":3410,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3410,"column":0},"generated":{"line":3411,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3411,"column":0},"generated":{"line":3412,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3412,"column":0},"generated":{"line":3413,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3413,"column":0},"generated":{"line":3414,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3414,"column":0},"generated":{"line":3415,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3415,"column":0},"generated":{"line":3416,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3416,"column":0},"generated":{"line":3417,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3417,"column":0},"generated":{"line":3418,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3418,"column":0},"generated":{"line":3419,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3419,"column":0},"generated":{"line":3420,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3420,"column":0},"generated":{"line":3421,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3421,"column":0},"generated":{"line":3422,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3422,"column":0},"generated":{"line":3423,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3423,"column":0},"generated":{"line":3424,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3424,"column":0},"generated":{"line":3425,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3425,"column":0},"generated":{"line":3426,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3426,"column":0},"generated":{"line":3427,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3427,"column":0},"generated":{"line":3428,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3428,"column":0},"generated":{"line":3429,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3429,"column":0},"generated":{"line":3430,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3430,"column":0},"generated":{"line":3431,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3431,"column":0},"generated":{"line":3432,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3432,"column":0},"generated":{"line":3433,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3433,"column":0},"generated":{"line":3434,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3434,"column":0},"generated":{"line":3435,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3435,"column":0},"generated":{"line":3436,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3436,"column":0},"generated":{"line":3437,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3437,"column":0},"generated":{"line":3438,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3438,"column":0},"generated":{"line":3439,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3439,"column":0},"generated":{"line":3440,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3440,"column":0},"generated":{"line":3441,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3441,"column":0},"generated":{"line":3442,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3442,"column":0},"generated":{"line":3443,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3443,"column":0},"generated":{"line":3444,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3444,"column":0},"generated":{"line":3445,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3445,"column":0},"generated":{"line":3446,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3446,"column":0},"generated":{"line":3447,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3447,"column":0},"generated":{"line":3448,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3448,"column":0},"generated":{"line":3449,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3449,"column":0},"generated":{"line":3450,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3450,"column":0},"generated":{"line":3451,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3451,"column":0},"generated":{"line":3452,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3452,"column":0},"generated":{"line":3453,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3453,"column":0},"generated":{"line":3454,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3454,"column":0},"generated":{"line":3455,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3455,"column":0},"generated":{"line":3456,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3456,"column":0},"generated":{"line":3457,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3457,"column":0},"generated":{"line":3458,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3458,"column":0},"generated":{"line":3459,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3459,"column":0},"generated":{"line":3460,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3460,"column":0},"generated":{"line":3461,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3461,"column":0},"generated":{"line":3462,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3462,"column":0},"generated":{"line":3463,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3463,"column":0},"generated":{"line":3464,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3464,"column":0},"generated":{"line":3465,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3465,"column":0},"generated":{"line":3466,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3466,"column":0},"generated":{"line":3467,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3467,"column":0},"generated":{"line":3468,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3468,"column":0},"generated":{"line":3469,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3469,"column":0},"generated":{"line":3470,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3470,"column":0},"generated":{"line":3471,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3471,"column":0},"generated":{"line":3472,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3472,"column":0},"generated":{"line":3473,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3473,"column":0},"generated":{"line":3474,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3474,"column":0},"generated":{"line":3475,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3475,"column":0},"generated":{"line":3476,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3476,"column":0},"generated":{"line":3477,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3477,"column":0},"generated":{"line":3478,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3478,"column":0},"generated":{"line":3479,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3479,"column":0},"generated":{"line":3480,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3480,"column":0},"generated":{"line":3481,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3481,"column":0},"generated":{"line":3482,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3482,"column":0},"generated":{"line":3483,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3483,"column":0},"generated":{"line":3484,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3484,"column":0},"generated":{"line":3485,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3485,"column":0},"generated":{"line":3486,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3486,"column":0},"generated":{"line":3487,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3487,"column":0},"generated":{"line":3488,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3488,"column":0},"generated":{"line":3489,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3489,"column":0},"generated":{"line":3490,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3490,"column":0},"generated":{"line":3491,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3491,"column":0},"generated":{"line":3492,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3492,"column":0},"generated":{"line":3493,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3493,"column":0},"generated":{"line":3494,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3494,"column":0},"generated":{"line":3495,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3495,"column":0},"generated":{"line":3496,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3496,"column":0},"generated":{"line":3497,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3497,"column":0},"generated":{"line":3498,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3498,"column":0},"generated":{"line":3499,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3499,"column":0},"generated":{"line":3500,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3500,"column":0},"generated":{"line":3501,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3501,"column":0},"generated":{"line":3502,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3502,"column":0},"generated":{"line":3503,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3503,"column":0},"generated":{"line":3504,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3504,"column":0},"generated":{"line":3505,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3505,"column":0},"generated":{"line":3506,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3506,"column":0},"generated":{"line":3507,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3507,"column":0},"generated":{"line":3508,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3508,"column":0},"generated":{"line":3509,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3509,"column":0},"generated":{"line":3510,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3510,"column":0},"generated":{"line":3511,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3511,"column":0},"generated":{"line":3512,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3512,"column":0},"generated":{"line":3513,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3513,"column":0},"generated":{"line":3514,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3514,"column":0},"generated":{"line":3515,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3515,"column":0},"generated":{"line":3516,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3516,"column":0},"generated":{"line":3517,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3517,"column":0},"generated":{"line":3518,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3518,"column":0},"generated":{"line":3519,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3519,"column":0},"generated":{"line":3520,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3520,"column":0},"generated":{"line":3521,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3521,"column":0},"generated":{"line":3522,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3522,"column":0},"generated":{"line":3523,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3523,"column":0},"generated":{"line":3524,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3524,"column":0},"generated":{"line":3525,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3525,"column":0},"generated":{"line":3526,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3526,"column":0},"generated":{"line":3527,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3527,"column":0},"generated":{"line":3528,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3528,"column":0},"generated":{"line":3529,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3529,"column":0},"generated":{"line":3530,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3530,"column":0},"generated":{"line":3531,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3531,"column":0},"generated":{"line":3532,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3532,"column":0},"generated":{"line":3533,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3533,"column":0},"generated":{"line":3534,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3534,"column":0},"generated":{"line":3535,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3535,"column":0},"generated":{"line":3536,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3536,"column":0},"generated":{"line":3537,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3537,"column":0},"generated":{"line":3538,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3538,"column":0},"generated":{"line":3539,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3539,"column":0},"generated":{"line":3540,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3540,"column":0},"generated":{"line":3541,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3541,"column":0},"generated":{"line":3542,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3542,"column":0},"generated":{"line":3543,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3543,"column":0},"generated":{"line":3544,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3544,"column":0},"generated":{"line":3545,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3545,"column":0},"generated":{"line":3546,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3546,"column":0},"generated":{"line":3547,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3547,"column":0},"generated":{"line":3548,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3548,"column":0},"generated":{"line":3549,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3549,"column":0},"generated":{"line":3550,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3550,"column":0},"generated":{"line":3551,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3551,"column":0},"generated":{"line":3552,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3552,"column":0},"generated":{"line":3553,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3553,"column":0},"generated":{"line":3554,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3554,"column":0},"generated":{"line":3555,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3555,"column":0},"generated":{"line":3556,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3556,"column":0},"generated":{"line":3557,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3557,"column":0},"generated":{"line":3558,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3558,"column":0},"generated":{"line":3559,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3559,"column":0},"generated":{"line":3560,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3560,"column":0},"generated":{"line":3561,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3561,"column":0},"generated":{"line":3562,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3562,"column":0},"generated":{"line":3563,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3563,"column":0},"generated":{"line":3564,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3564,"column":0},"generated":{"line":3565,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3565,"column":0},"generated":{"line":3566,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3566,"column":0},"generated":{"line":3567,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3567,"column":0},"generated":{"line":3568,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3568,"column":0},"generated":{"line":3569,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3569,"column":0},"generated":{"line":3570,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3570,"column":0},"generated":{"line":3571,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3571,"column":0},"generated":{"line":3572,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3572,"column":0},"generated":{"line":3573,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3573,"column":0},"generated":{"line":3574,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3574,"column":0},"generated":{"line":3575,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3575,"column":0},"generated":{"line":3576,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3576,"column":0},"generated":{"line":3577,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3577,"column":0},"generated":{"line":3578,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3578,"column":0},"generated":{"line":3579,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3579,"column":0},"generated":{"line":3580,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3580,"column":0},"generated":{"line":3581,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3581,"column":0},"generated":{"line":3582,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3582,"column":0},"generated":{"line":3583,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3583,"column":0},"generated":{"line":3584,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3584,"column":0},"generated":{"line":3585,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3585,"column":0},"generated":{"line":3586,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3586,"column":0},"generated":{"line":3587,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3587,"column":0},"generated":{"line":3588,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3588,"column":0},"generated":{"line":3589,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3589,"column":0},"generated":{"line":3590,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3590,"column":0},"generated":{"line":3591,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3591,"column":0},"generated":{"line":3592,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3592,"column":0},"generated":{"line":3593,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3593,"column":0},"generated":{"line":3594,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3594,"column":0},"generated":{"line":3595,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3595,"column":0},"generated":{"line":3596,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3596,"column":0},"generated":{"line":3597,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3597,"column":0},"generated":{"line":3598,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3598,"column":0},"generated":{"line":3599,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3599,"column":0},"generated":{"line":3600,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3600,"column":0},"generated":{"line":3601,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3601,"column":0},"generated":{"line":3602,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3602,"column":0},"generated":{"line":3603,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3603,"column":0},"generated":{"line":3604,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3604,"column":0},"generated":{"line":3605,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3605,"column":0},"generated":{"line":3606,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3606,"column":0},"generated":{"line":3607,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3607,"column":0},"generated":{"line":3608,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3608,"column":0},"generated":{"line":3609,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3609,"column":0},"generated":{"line":3610,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3610,"column":0},"generated":{"line":3611,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3611,"column":0},"generated":{"line":3612,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3612,"column":0},"generated":{"line":3613,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3613,"column":0},"generated":{"line":3614,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3614,"column":0},"generated":{"line":3615,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3615,"column":0},"generated":{"line":3616,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3616,"column":0},"generated":{"line":3617,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3617,"column":0},"generated":{"line":3618,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3618,"column":0},"generated":{"line":3619,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3619,"column":0},"generated":{"line":3620,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3620,"column":0},"generated":{"line":3621,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3621,"column":0},"generated":{"line":3622,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3622,"column":0},"generated":{"line":3623,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3623,"column":0},"generated":{"line":3624,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3624,"column":0},"generated":{"line":3625,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3625,"column":0},"generated":{"line":3626,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3626,"column":0},"generated":{"line":3627,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3627,"column":0},"generated":{"line":3628,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3628,"column":0},"generated":{"line":3629,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3629,"column":0},"generated":{"line":3630,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3630,"column":0},"generated":{"line":3631,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3631,"column":0},"generated":{"line":3632,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3632,"column":0},"generated":{"line":3633,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3633,"column":0},"generated":{"line":3634,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3634,"column":0},"generated":{"line":3635,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3635,"column":0},"generated":{"line":3636,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3636,"column":0},"generated":{"line":3637,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3637,"column":0},"generated":{"line":3638,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3638,"column":0},"generated":{"line":3639,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3639,"column":0},"generated":{"line":3640,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3640,"column":0},"generated":{"line":3641,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3641,"column":0},"generated":{"line":3642,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3642,"column":0},"generated":{"line":3643,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3643,"column":0},"generated":{"line":3644,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3644,"column":0},"generated":{"line":3645,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3645,"column":0},"generated":{"line":3646,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3646,"column":0},"generated":{"line":3647,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3647,"column":0},"generated":{"line":3648,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3648,"column":0},"generated":{"line":3649,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3649,"column":0},"generated":{"line":3650,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3650,"column":0},"generated":{"line":3651,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3651,"column":0},"generated":{"line":3652,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3652,"column":0},"generated":{"line":3653,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3653,"column":0},"generated":{"line":3654,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3654,"column":0},"generated":{"line":3655,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3655,"column":0},"generated":{"line":3656,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3656,"column":0},"generated":{"line":3657,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3657,"column":0},"generated":{"line":3658,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3658,"column":0},"generated":{"line":3659,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3659,"column":0},"generated":{"line":3660,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3660,"column":0},"generated":{"line":3661,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3661,"column":0},"generated":{"line":3662,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3662,"column":0},"generated":{"line":3663,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3663,"column":0},"generated":{"line":3664,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3664,"column":0},"generated":{"line":3665,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3665,"column":0},"generated":{"line":3666,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3666,"column":0},"generated":{"line":3667,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3667,"column":0},"generated":{"line":3668,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3668,"column":0},"generated":{"line":3669,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3669,"column":0},"generated":{"line":3670,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3670,"column":0},"generated":{"line":3671,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3671,"column":0},"generated":{"line":3672,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3672,"column":0},"generated":{"line":3673,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3673,"column":0},"generated":{"line":3674,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3674,"column":0},"generated":{"line":3675,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3675,"column":0},"generated":{"line":3676,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3676,"column":0},"generated":{"line":3677,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3677,"column":0},"generated":{"line":3678,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3678,"column":0},"generated":{"line":3679,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3679,"column":0},"generated":{"line":3680,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3680,"column":0},"generated":{"line":3681,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3681,"column":0},"generated":{"line":3682,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3682,"column":0},"generated":{"line":3683,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3683,"column":0},"generated":{"line":3684,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3684,"column":0},"generated":{"line":3685,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3685,"column":0},"generated":{"line":3686,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3686,"column":0},"generated":{"line":3687,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3687,"column":0},"generated":{"line":3688,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3688,"column":0},"generated":{"line":3689,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3689,"column":0},"generated":{"line":3690,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3690,"column":0},"generated":{"line":3691,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3691,"column":0},"generated":{"line":3692,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3692,"column":0},"generated":{"line":3693,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3693,"column":0},"generated":{"line":3694,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3694,"column":0},"generated":{"line":3695,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3695,"column":0},"generated":{"line":3696,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3696,"column":0},"generated":{"line":3697,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3697,"column":0},"generated":{"line":3698,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3698,"column":0},"generated":{"line":3699,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3699,"column":0},"generated":{"line":3700,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3700,"column":0},"generated":{"line":3701,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3701,"column":0},"generated":{"line":3702,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3702,"column":0},"generated":{"line":3703,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3703,"column":0},"generated":{"line":3704,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3704,"column":0},"generated":{"line":3705,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3705,"column":0},"generated":{"line":3706,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3706,"column":0},"generated":{"line":3707,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3707,"column":0},"generated":{"line":3708,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3708,"column":0},"generated":{"line":3709,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3709,"column":0},"generated":{"line":3710,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3710,"column":0},"generated":{"line":3711,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3711,"column":0},"generated":{"line":3712,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3712,"column":0},"generated":{"line":3713,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3713,"column":0},"generated":{"line":3714,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3714,"column":0},"generated":{"line":3715,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3715,"column":0},"generated":{"line":3716,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3716,"column":0},"generated":{"line":3717,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3717,"column":0},"generated":{"line":3718,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3718,"column":0},"generated":{"line":3719,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3719,"column":0},"generated":{"line":3720,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3720,"column":0},"generated":{"line":3721,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3721,"column":0},"generated":{"line":3722,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3722,"column":0},"generated":{"line":3723,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3723,"column":0},"generated":{"line":3724,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3724,"column":0},"generated":{"line":3725,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3725,"column":0},"generated":{"line":3726,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3726,"column":0},"generated":{"line":3727,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3727,"column":0},"generated":{"line":3728,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3728,"column":0},"generated":{"line":3729,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3729,"column":0},"generated":{"line":3730,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3730,"column":0},"generated":{"line":3731,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3731,"column":0},"generated":{"line":3732,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3732,"column":0},"generated":{"line":3733,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3733,"column":0},"generated":{"line":3734,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3734,"column":0},"generated":{"line":3735,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3735,"column":0},"generated":{"line":3736,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3736,"column":0},"generated":{"line":3737,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3737,"column":0},"generated":{"line":3738,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3738,"column":0},"generated":{"line":3739,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3739,"column":0},"generated":{"line":3740,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3740,"column":0},"generated":{"line":3741,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3741,"column":0},"generated":{"line":3742,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3742,"column":0},"generated":{"line":3743,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3743,"column":0},"generated":{"line":3744,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3744,"column":0},"generated":{"line":3745,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3745,"column":0},"generated":{"line":3746,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3746,"column":0},"generated":{"line":3747,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3747,"column":0},"generated":{"line":3748,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3748,"column":0},"generated":{"line":3749,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3749,"column":0},"generated":{"line":3750,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3750,"column":0},"generated":{"line":3751,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3751,"column":0},"generated":{"line":3752,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3752,"column":0},"generated":{"line":3753,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3753,"column":0},"generated":{"line":3754,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3754,"column":0},"generated":{"line":3755,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3755,"column":0},"generated":{"line":3756,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3756,"column":0},"generated":{"line":3757,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3757,"column":0},"generated":{"line":3758,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3758,"column":0},"generated":{"line":3759,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3759,"column":0},"generated":{"line":3760,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3760,"column":0},"generated":{"line":3761,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3761,"column":0},"generated":{"line":3762,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3762,"column":0},"generated":{"line":3763,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3763,"column":0},"generated":{"line":3764,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3764,"column":0},"generated":{"line":3765,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3765,"column":0},"generated":{"line":3766,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3766,"column":0},"generated":{"line":3767,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3767,"column":0},"generated":{"line":3768,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3768,"column":0},"generated":{"line":3769,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3769,"column":0},"generated":{"line":3770,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3770,"column":0},"generated":{"line":3771,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3771,"column":0},"generated":{"line":3772,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3772,"column":0},"generated":{"line":3773,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3773,"column":0},"generated":{"line":3774,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3774,"column":0},"generated":{"line":3775,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3775,"column":0},"generated":{"line":3776,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3776,"column":0},"generated":{"line":3777,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3777,"column":0},"generated":{"line":3778,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3778,"column":0},"generated":{"line":3779,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3779,"column":0},"generated":{"line":3780,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3780,"column":0},"generated":{"line":3781,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3781,"column":0},"generated":{"line":3782,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3782,"column":0},"generated":{"line":3783,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3783,"column":0},"generated":{"line":3784,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3784,"column":0},"generated":{"line":3785,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3785,"column":0},"generated":{"line":3786,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3786,"column":0},"generated":{"line":3787,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3787,"column":0},"generated":{"line":3788,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3788,"column":0},"generated":{"line":3789,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3789,"column":0},"generated":{"line":3790,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3790,"column":0},"generated":{"line":3791,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3791,"column":0},"generated":{"line":3792,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3792,"column":0},"generated":{"line":3793,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3793,"column":0},"generated":{"line":3794,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3794,"column":0},"generated":{"line":3795,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3795,"column":0},"generated":{"line":3796,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3796,"column":0},"generated":{"line":3797,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3797,"column":0},"generated":{"line":3798,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3798,"column":0},"generated":{"line":3799,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3799,"column":0},"generated":{"line":3800,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3800,"column":0},"generated":{"line":3801,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3801,"column":0},"generated":{"line":3802,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3802,"column":0},"generated":{"line":3803,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3803,"column":0},"generated":{"line":3804,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3804,"column":0},"generated":{"line":3805,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3805,"column":0},"generated":{"line":3806,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3806,"column":0},"generated":{"line":3807,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3807,"column":0},"generated":{"line":3808,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3808,"column":0},"generated":{"line":3809,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3809,"column":0},"generated":{"line":3810,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3810,"column":0},"generated":{"line":3811,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3811,"column":0},"generated":{"line":3812,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3812,"column":0},"generated":{"line":3813,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3813,"column":0},"generated":{"line":3814,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3814,"column":0},"generated":{"line":3815,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3815,"column":0},"generated":{"line":3816,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3816,"column":0},"generated":{"line":3817,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3817,"column":0},"generated":{"line":3818,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3818,"column":0},"generated":{"line":3819,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3819,"column":0},"generated":{"line":3820,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3820,"column":0},"generated":{"line":3821,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3821,"column":0},"generated":{"line":3822,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3822,"column":0},"generated":{"line":3823,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3823,"column":0},"generated":{"line":3824,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3824,"column":0},"generated":{"line":3825,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3825,"column":0},"generated":{"line":3826,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3826,"column":0},"generated":{"line":3827,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3827,"column":0},"generated":{"line":3828,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3828,"column":0},"generated":{"line":3829,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3829,"column":0},"generated":{"line":3830,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3830,"column":0},"generated":{"line":3831,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3831,"column":0},"generated":{"line":3832,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3832,"column":0},"generated":{"line":3833,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3833,"column":0},"generated":{"line":3834,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3834,"column":0},"generated":{"line":3835,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3835,"column":0},"generated":{"line":3836,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3836,"column":0},"generated":{"line":3837,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3837,"column":0},"generated":{"line":3838,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3838,"column":0},"generated":{"line":3839,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3839,"column":0},"generated":{"line":3840,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3840,"column":0},"generated":{"line":3841,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3841,"column":0},"generated":{"line":3842,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3842,"column":0},"generated":{"line":3843,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3843,"column":0},"generated":{"line":3844,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3844,"column":0},"generated":{"line":3845,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3845,"column":0},"generated":{"line":3846,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3846,"column":0},"generated":{"line":3847,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3847,"column":0},"generated":{"line":3848,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3848,"column":0},"generated":{"line":3849,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3849,"column":0},"generated":{"line":3850,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3850,"column":0},"generated":{"line":3851,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3851,"column":0},"generated":{"line":3852,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3852,"column":0},"generated":{"line":3853,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3853,"column":0},"generated":{"line":3854,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3854,"column":0},"generated":{"line":3855,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3855,"column":0},"generated":{"line":3856,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3856,"column":0},"generated":{"line":3857,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3857,"column":0},"generated":{"line":3858,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3858,"column":0},"generated":{"line":3859,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3859,"column":0},"generated":{"line":3860,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3860,"column":0},"generated":{"line":3861,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3861,"column":0},"generated":{"line":3862,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3862,"column":0},"generated":{"line":3863,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3863,"column":0},"generated":{"line":3864,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3864,"column":0},"generated":{"line":3865,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3865,"column":0},"generated":{"line":3866,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3866,"column":0},"generated":{"line":3867,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3867,"column":0},"generated":{"line":3868,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3868,"column":0},"generated":{"line":3869,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3869,"column":0},"generated":{"line":3870,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3870,"column":0},"generated":{"line":3871,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3871,"column":0},"generated":{"line":3872,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3872,"column":0},"generated":{"line":3873,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3873,"column":0},"generated":{"line":3874,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3874,"column":0},"generated":{"line":3875,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3875,"column":0},"generated":{"line":3876,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3876,"column":0},"generated":{"line":3877,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3877,"column":0},"generated":{"line":3878,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3878,"column":0},"generated":{"line":3879,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3879,"column":0},"generated":{"line":3880,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3880,"column":0},"generated":{"line":3881,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3881,"column":0},"generated":{"line":3882,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3882,"column":0},"generated":{"line":3883,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3883,"column":0},"generated":{"line":3884,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3884,"column":0},"generated":{"line":3885,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3885,"column":0},"generated":{"line":3886,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3886,"column":0},"generated":{"line":3887,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3887,"column":0},"generated":{"line":3888,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3888,"column":0},"generated":{"line":3889,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3889,"column":0},"generated":{"line":3890,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3890,"column":0},"generated":{"line":3891,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3891,"column":0},"generated":{"line":3892,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3892,"column":0},"generated":{"line":3893,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3893,"column":0},"generated":{"line":3894,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3894,"column":0},"generated":{"line":3895,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3895,"column":0},"generated":{"line":3896,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3896,"column":0},"generated":{"line":3897,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3897,"column":0},"generated":{"line":3898,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3898,"column":0},"generated":{"line":3899,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3899,"column":0},"generated":{"line":3900,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3900,"column":0},"generated":{"line":3901,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3901,"column":0},"generated":{"line":3902,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3902,"column":0},"generated":{"line":3903,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3903,"column":0},"generated":{"line":3904,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3904,"column":0},"generated":{"line":3905,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3905,"column":0},"generated":{"line":3906,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3906,"column":0},"generated":{"line":3907,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3907,"column":0},"generated":{"line":3908,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3908,"column":0},"generated":{"line":3909,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3909,"column":0},"generated":{"line":3910,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3910,"column":0},"generated":{"line":3911,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3911,"column":0},"generated":{"line":3912,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3912,"column":0},"generated":{"line":3913,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3913,"column":0},"generated":{"line":3914,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3914,"column":0},"generated":{"line":3915,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3915,"column":0},"generated":{"line":3916,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3916,"column":0},"generated":{"line":3917,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3917,"column":0},"generated":{"line":3918,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3918,"column":0},"generated":{"line":3919,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3919,"column":0},"generated":{"line":3920,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3920,"column":0},"generated":{"line":3921,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3921,"column":0},"generated":{"line":3922,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3922,"column":0},"generated":{"line":3923,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3923,"column":0},"generated":{"line":3924,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3924,"column":0},"generated":{"line":3925,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3925,"column":0},"generated":{"line":3926,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3926,"column":0},"generated":{"line":3927,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3927,"column":0},"generated":{"line":3928,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3928,"column":0},"generated":{"line":3929,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3929,"column":0},"generated":{"line":3930,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3930,"column":0},"generated":{"line":3931,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3931,"column":0},"generated":{"line":3932,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3932,"column":0},"generated":{"line":3933,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3933,"column":0},"generated":{"line":3934,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3934,"column":0},"generated":{"line":3935,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3935,"column":0},"generated":{"line":3936,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3936,"column":0},"generated":{"line":3937,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3937,"column":0},"generated":{"line":3938,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3938,"column":0},"generated":{"line":3939,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3939,"column":0},"generated":{"line":3940,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3940,"column":0},"generated":{"line":3941,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3941,"column":0},"generated":{"line":3942,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3942,"column":0},"generated":{"line":3943,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3943,"column":0},"generated":{"line":3944,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3944,"column":0},"generated":{"line":3945,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3945,"column":0},"generated":{"line":3946,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3946,"column":0},"generated":{"line":3947,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3947,"column":0},"generated":{"line":3948,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3948,"column":0},"generated":{"line":3949,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3949,"column":0},"generated":{"line":3950,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3950,"column":0},"generated":{"line":3951,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3951,"column":0},"generated":{"line":3952,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3952,"column":0},"generated":{"line":3953,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3953,"column":0},"generated":{"line":3954,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3954,"column":0},"generated":{"line":3955,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3955,"column":0},"generated":{"line":3956,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3956,"column":0},"generated":{"line":3957,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3957,"column":0},"generated":{"line":3958,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3958,"column":0},"generated":{"line":3959,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3959,"column":0},"generated":{"line":3960,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3960,"column":0},"generated":{"line":3961,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3961,"column":0},"generated":{"line":3962,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3962,"column":0},"generated":{"line":3963,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3963,"column":0},"generated":{"line":3964,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3964,"column":0},"generated":{"line":3965,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3965,"column":0},"generated":{"line":3966,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3966,"column":0},"generated":{"line":3967,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3967,"column":0},"generated":{"line":3968,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3968,"column":0},"generated":{"line":3969,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3969,"column":0},"generated":{"line":3970,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3970,"column":0},"generated":{"line":3971,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3971,"column":0},"generated":{"line":3972,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3972,"column":0},"generated":{"line":3973,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3973,"column":0},"generated":{"line":3974,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3974,"column":0},"generated":{"line":3975,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3975,"column":0},"generated":{"line":3976,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3976,"column":0},"generated":{"line":3977,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3977,"column":0},"generated":{"line":3978,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3978,"column":0},"generated":{"line":3979,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3979,"column":0},"generated":{"line":3980,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3980,"column":0},"generated":{"line":3981,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3981,"column":0},"generated":{"line":3982,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3982,"column":0},"generated":{"line":3983,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3983,"column":0},"generated":{"line":3984,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3984,"column":0},"generated":{"line":3985,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3985,"column":0},"generated":{"line":3986,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3986,"column":0},"generated":{"line":3987,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3987,"column":0},"generated":{"line":3988,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3988,"column":0},"generated":{"line":3989,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3989,"column":0},"generated":{"line":3990,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3990,"column":0},"generated":{"line":3991,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3991,"column":0},"generated":{"line":3992,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3992,"column":0},"generated":{"line":3993,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3993,"column":0},"generated":{"line":3994,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3994,"column":0},"generated":{"line":3995,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3995,"column":0},"generated":{"line":3996,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3996,"column":0},"generated":{"line":3997,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3997,"column":0},"generated":{"line":3998,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3998,"column":0},"generated":{"line":3999,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":3999,"column":0},"generated":{"line":4000,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4000,"column":0},"generated":{"line":4001,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4001,"column":0},"generated":{"line":4002,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4002,"column":0},"generated":{"line":4003,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4003,"column":0},"generated":{"line":4004,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4004,"column":0},"generated":{"line":4005,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4005,"column":0},"generated":{"line":4006,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4006,"column":0},"generated":{"line":4007,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4007,"column":0},"generated":{"line":4008,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4008,"column":0},"generated":{"line":4009,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4009,"column":0},"generated":{"line":4010,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4010,"column":0},"generated":{"line":4011,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4011,"column":0},"generated":{"line":4012,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4012,"column":0},"generated":{"line":4013,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4013,"column":0},"generated":{"line":4014,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4014,"column":0},"generated":{"line":4015,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4015,"column":0},"generated":{"line":4016,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4016,"column":0},"generated":{"line":4017,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4017,"column":0},"generated":{"line":4018,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4018,"column":0},"generated":{"line":4019,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4019,"column":0},"generated":{"line":4020,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4020,"column":0},"generated":{"line":4021,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4021,"column":0},"generated":{"line":4022,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4022,"column":0},"generated":{"line":4023,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4023,"column":0},"generated":{"line":4024,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4024,"column":0},"generated":{"line":4025,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4025,"column":0},"generated":{"line":4026,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4026,"column":0},"generated":{"line":4027,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4027,"column":0},"generated":{"line":4028,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4028,"column":0},"generated":{"line":4029,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4029,"column":0},"generated":{"line":4030,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4030,"column":0},"generated":{"line":4031,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4031,"column":0},"generated":{"line":4032,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4032,"column":0},"generated":{"line":4033,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4033,"column":0},"generated":{"line":4034,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4034,"column":0},"generated":{"line":4035,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4035,"column":0},"generated":{"line":4036,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4036,"column":0},"generated":{"line":4037,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4037,"column":0},"generated":{"line":4038,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4038,"column":0},"generated":{"line":4039,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4039,"column":0},"generated":{"line":4040,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4040,"column":0},"generated":{"line":4041,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4041,"column":0},"generated":{"line":4042,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4042,"column":0},"generated":{"line":4043,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4043,"column":0},"generated":{"line":4044,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4044,"column":0},"generated":{"line":4045,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4045,"column":0},"generated":{"line":4046,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4046,"column":0},"generated":{"line":4047,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4047,"column":0},"generated":{"line":4048,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4048,"column":0},"generated":{"line":4049,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4049,"column":0},"generated":{"line":4050,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4050,"column":0},"generated":{"line":4051,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4051,"column":0},"generated":{"line":4052,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4052,"column":0},"generated":{"line":4053,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4053,"column":0},"generated":{"line":4054,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4054,"column":0},"generated":{"line":4055,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4055,"column":0},"generated":{"line":4056,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4056,"column":0},"generated":{"line":4057,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4057,"column":0},"generated":{"line":4058,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4058,"column":0},"generated":{"line":4059,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4059,"column":0},"generated":{"line":4060,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4060,"column":0},"generated":{"line":4061,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4061,"column":0},"generated":{"line":4062,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4062,"column":0},"generated":{"line":4063,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4063,"column":0},"generated":{"line":4064,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4064,"column":0},"generated":{"line":4065,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4065,"column":0},"generated":{"line":4066,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4066,"column":0},"generated":{"line":4067,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4067,"column":0},"generated":{"line":4068,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4068,"column":0},"generated":{"line":4069,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4069,"column":0},"generated":{"line":4070,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4070,"column":0},"generated":{"line":4071,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4071,"column":0},"generated":{"line":4072,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4072,"column":0},"generated":{"line":4073,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4073,"column":0},"generated":{"line":4074,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4074,"column":0},"generated":{"line":4075,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4075,"column":0},"generated":{"line":4076,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4076,"column":0},"generated":{"line":4077,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4077,"column":0},"generated":{"line":4078,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4078,"column":0},"generated":{"line":4079,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4079,"column":0},"generated":{"line":4080,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4080,"column":0},"generated":{"line":4081,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4081,"column":0},"generated":{"line":4082,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4082,"column":0},"generated":{"line":4083,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4083,"column":0},"generated":{"line":4084,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4084,"column":0},"generated":{"line":4085,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4085,"column":0},"generated":{"line":4086,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4086,"column":0},"generated":{"line":4087,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4087,"column":0},"generated":{"line":4088,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4088,"column":0},"generated":{"line":4089,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4089,"column":0},"generated":{"line":4090,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4090,"column":0},"generated":{"line":4091,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4091,"column":0},"generated":{"line":4092,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4092,"column":0},"generated":{"line":4093,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4093,"column":0},"generated":{"line":4094,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4094,"column":0},"generated":{"line":4095,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4095,"column":0},"generated":{"line":4096,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4096,"column":0},"generated":{"line":4097,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4097,"column":0},"generated":{"line":4098,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4098,"column":0},"generated":{"line":4099,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4099,"column":0},"generated":{"line":4100,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4100,"column":0},"generated":{"line":4101,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4101,"column":0},"generated":{"line":4102,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4102,"column":0},"generated":{"line":4103,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4103,"column":0},"generated":{"line":4104,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4104,"column":0},"generated":{"line":4105,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4105,"column":0},"generated":{"line":4106,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4106,"column":0},"generated":{"line":4107,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4107,"column":0},"generated":{"line":4108,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4108,"column":0},"generated":{"line":4109,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4109,"column":0},"generated":{"line":4110,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4110,"column":0},"generated":{"line":4111,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4111,"column":0},"generated":{"line":4112,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4112,"column":0},"generated":{"line":4113,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4113,"column":0},"generated":{"line":4114,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4114,"column":0},"generated":{"line":4115,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4115,"column":0},"generated":{"line":4116,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4116,"column":0},"generated":{"line":4117,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4117,"column":0},"generated":{"line":4118,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4118,"column":0},"generated":{"line":4119,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4119,"column":0},"generated":{"line":4120,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4120,"column":0},"generated":{"line":4121,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4121,"column":0},"generated":{"line":4122,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4122,"column":0},"generated":{"line":4123,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4123,"column":0},"generated":{"line":4124,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4124,"column":0},"generated":{"line":4125,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4125,"column":0},"generated":{"line":4126,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4126,"column":0},"generated":{"line":4127,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4127,"column":0},"generated":{"line":4128,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4128,"column":0},"generated":{"line":4129,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4129,"column":0},"generated":{"line":4130,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4130,"column":0},"generated":{"line":4131,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4131,"column":0},"generated":{"line":4132,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4132,"column":0},"generated":{"line":4133,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4133,"column":0},"generated":{"line":4134,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4134,"column":0},"generated":{"line":4135,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4135,"column":0},"generated":{"line":4136,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4136,"column":0},"generated":{"line":4137,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4137,"column":0},"generated":{"line":4138,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4138,"column":0},"generated":{"line":4139,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4139,"column":0},"generated":{"line":4140,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4140,"column":0},"generated":{"line":4141,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4141,"column":0},"generated":{"line":4142,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4142,"column":0},"generated":{"line":4143,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4143,"column":0},"generated":{"line":4144,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4144,"column":0},"generated":{"line":4145,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4145,"column":0},"generated":{"line":4146,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4146,"column":0},"generated":{"line":4147,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4147,"column":0},"generated":{"line":4148,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4148,"column":0},"generated":{"line":4149,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4149,"column":0},"generated":{"line":4150,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4150,"column":0},"generated":{"line":4151,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4151,"column":0},"generated":{"line":4152,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4152,"column":0},"generated":{"line":4153,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4153,"column":0},"generated":{"line":4154,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4154,"column":0},"generated":{"line":4155,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4155,"column":0},"generated":{"line":4156,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4156,"column":0},"generated":{"line":4157,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4157,"column":0},"generated":{"line":4158,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4158,"column":0},"generated":{"line":4159,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4159,"column":0},"generated":{"line":4160,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4160,"column":0},"generated":{"line":4161,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4161,"column":0},"generated":{"line":4162,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4162,"column":0},"generated":{"line":4163,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4163,"column":0},"generated":{"line":4164,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4164,"column":0},"generated":{"line":4165,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4165,"column":0},"generated":{"line":4166,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4166,"column":0},"generated":{"line":4167,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4167,"column":0},"generated":{"line":4168,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4168,"column":0},"generated":{"line":4169,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4169,"column":0},"generated":{"line":4170,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4170,"column":0},"generated":{"line":4171,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4171,"column":0},"generated":{"line":4172,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4172,"column":0},"generated":{"line":4173,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4173,"column":0},"generated":{"line":4174,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4174,"column":0},"generated":{"line":4175,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4175,"column":0},"generated":{"line":4176,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4176,"column":0},"generated":{"line":4177,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4177,"column":0},"generated":{"line":4178,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4178,"column":0},"generated":{"line":4179,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4179,"column":0},"generated":{"line":4180,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4180,"column":0},"generated":{"line":4181,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4181,"column":0},"generated":{"line":4182,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4182,"column":0},"generated":{"line":4183,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4183,"column":0},"generated":{"line":4184,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4184,"column":0},"generated":{"line":4185,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4185,"column":0},"generated":{"line":4186,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4186,"column":0},"generated":{"line":4187,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4187,"column":0},"generated":{"line":4188,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4188,"column":0},"generated":{"line":4189,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4189,"column":0},"generated":{"line":4190,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4190,"column":0},"generated":{"line":4191,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4191,"column":0},"generated":{"line":4192,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4192,"column":0},"generated":{"line":4193,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4193,"column":0},"generated":{"line":4194,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4194,"column":0},"generated":{"line":4195,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4195,"column":0},"generated":{"line":4196,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4196,"column":0},"generated":{"line":4197,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4197,"column":0},"generated":{"line":4198,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4198,"column":0},"generated":{"line":4199,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4199,"column":0},"generated":{"line":4200,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4200,"column":0},"generated":{"line":4201,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4201,"column":0},"generated":{"line":4202,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4202,"column":0},"generated":{"line":4203,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4203,"column":0},"generated":{"line":4204,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4204,"column":0},"generated":{"line":4205,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4205,"column":0},"generated":{"line":4206,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4206,"column":0},"generated":{"line":4207,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4207,"column":0},"generated":{"line":4208,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4208,"column":0},"generated":{"line":4209,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4209,"column":0},"generated":{"line":4210,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4210,"column":0},"generated":{"line":4211,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4211,"column":0},"generated":{"line":4212,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4212,"column":0},"generated":{"line":4213,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4213,"column":0},"generated":{"line":4214,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4214,"column":0},"generated":{"line":4215,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4215,"column":0},"generated":{"line":4216,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4216,"column":0},"generated":{"line":4217,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4217,"column":0},"generated":{"line":4218,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4218,"column":0},"generated":{"line":4219,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4219,"column":0},"generated":{"line":4220,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4220,"column":0},"generated":{"line":4221,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4221,"column":0},"generated":{"line":4222,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4222,"column":0},"generated":{"line":4223,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4223,"column":0},"generated":{"line":4224,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4224,"column":0},"generated":{"line":4225,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4225,"column":0},"generated":{"line":4226,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4226,"column":0},"generated":{"line":4227,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4227,"column":0},"generated":{"line":4228,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4228,"column":0},"generated":{"line":4229,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4229,"column":0},"generated":{"line":4230,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4230,"column":0},"generated":{"line":4231,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4231,"column":0},"generated":{"line":4232,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4232,"column":0},"generated":{"line":4233,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4233,"column":0},"generated":{"line":4234,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4234,"column":0},"generated":{"line":4235,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4235,"column":0},"generated":{"line":4236,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4236,"column":0},"generated":{"line":4237,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4237,"column":0},"generated":{"line":4238,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4238,"column":0},"generated":{"line":4239,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4239,"column":0},"generated":{"line":4240,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4240,"column":0},"generated":{"line":4241,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4241,"column":0},"generated":{"line":4242,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4242,"column":0},"generated":{"line":4243,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4243,"column":0},"generated":{"line":4244,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4244,"column":0},"generated":{"line":4245,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4245,"column":0},"generated":{"line":4246,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4246,"column":0},"generated":{"line":4247,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4247,"column":0},"generated":{"line":4248,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4248,"column":0},"generated":{"line":4249,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4249,"column":0},"generated":{"line":4250,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4250,"column":0},"generated":{"line":4251,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4251,"column":0},"generated":{"line":4252,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4252,"column":0},"generated":{"line":4253,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4253,"column":0},"generated":{"line":4254,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4254,"column":0},"generated":{"line":4255,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4255,"column":0},"generated":{"line":4256,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4256,"column":0},"generated":{"line":4257,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4257,"column":0},"generated":{"line":4258,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4258,"column":0},"generated":{"line":4259,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4259,"column":0},"generated":{"line":4260,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4260,"column":0},"generated":{"line":4261,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4261,"column":0},"generated":{"line":4262,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4262,"column":0},"generated":{"line":4263,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4263,"column":0},"generated":{"line":4264,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4264,"column":0},"generated":{"line":4265,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4265,"column":0},"generated":{"line":4266,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4266,"column":0},"generated":{"line":4267,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4267,"column":0},"generated":{"line":4268,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4268,"column":0},"generated":{"line":4269,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4269,"column":0},"generated":{"line":4270,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4270,"column":0},"generated":{"line":4271,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4271,"column":0},"generated":{"line":4272,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4272,"column":0},"generated":{"line":4273,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4273,"column":0},"generated":{"line":4274,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4274,"column":0},"generated":{"line":4275,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4275,"column":0},"generated":{"line":4276,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4276,"column":0},"generated":{"line":4277,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4277,"column":0},"generated":{"line":4278,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4278,"column":0},"generated":{"line":4279,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4279,"column":0},"generated":{"line":4280,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4280,"column":0},"generated":{"line":4281,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4281,"column":0},"generated":{"line":4282,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4282,"column":0},"generated":{"line":4283,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4283,"column":0},"generated":{"line":4284,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4284,"column":0},"generated":{"line":4285,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4285,"column":0},"generated":{"line":4286,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4286,"column":0},"generated":{"line":4287,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4287,"column":0},"generated":{"line":4288,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4288,"column":0},"generated":{"line":4289,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4289,"column":0},"generated":{"line":4290,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4290,"column":0},"generated":{"line":4291,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4291,"column":0},"generated":{"line":4292,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4292,"column":0},"generated":{"line":4293,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4293,"column":0},"generated":{"line":4294,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4294,"column":0},"generated":{"line":4295,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4295,"column":0},"generated":{"line":4296,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4296,"column":0},"generated":{"line":4297,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4297,"column":0},"generated":{"line":4298,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4298,"column":0},"generated":{"line":4299,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4299,"column":0},"generated":{"line":4300,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4300,"column":0},"generated":{"line":4301,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4301,"column":0},"generated":{"line":4302,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4302,"column":0},"generated":{"line":4303,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4303,"column":0},"generated":{"line":4304,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4304,"column":0},"generated":{"line":4305,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4305,"column":0},"generated":{"line":4306,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4306,"column":0},"generated":{"line":4307,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4307,"column":0},"generated":{"line":4308,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4308,"column":0},"generated":{"line":4309,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4309,"column":0},"generated":{"line":4310,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4310,"column":0},"generated":{"line":4311,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4311,"column":0},"generated":{"line":4312,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4312,"column":0},"generated":{"line":4313,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4313,"column":0},"generated":{"line":4314,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4314,"column":0},"generated":{"line":4315,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4315,"column":0},"generated":{"line":4316,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4316,"column":0},"generated":{"line":4317,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4317,"column":0},"generated":{"line":4318,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4318,"column":0},"generated":{"line":4319,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4319,"column":0},"generated":{"line":4320,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4320,"column":0},"generated":{"line":4321,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4321,"column":0},"generated":{"line":4322,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4322,"column":0},"generated":{"line":4323,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4323,"column":0},"generated":{"line":4324,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4324,"column":0},"generated":{"line":4325,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4325,"column":0},"generated":{"line":4326,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4326,"column":0},"generated":{"line":4327,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4327,"column":0},"generated":{"line":4328,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4328,"column":0},"generated":{"line":4329,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4329,"column":0},"generated":{"line":4330,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4330,"column":0},"generated":{"line":4331,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4331,"column":0},"generated":{"line":4332,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4332,"column":0},"generated":{"line":4333,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4333,"column":0},"generated":{"line":4334,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4334,"column":0},"generated":{"line":4335,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4335,"column":0},"generated":{"line":4336,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4336,"column":0},"generated":{"line":4337,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4337,"column":0},"generated":{"line":4338,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4338,"column":0},"generated":{"line":4339,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4339,"column":0},"generated":{"line":4340,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4340,"column":0},"generated":{"line":4341,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4341,"column":0},"generated":{"line":4342,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4342,"column":0},"generated":{"line":4343,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4343,"column":0},"generated":{"line":4344,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4344,"column":0},"generated":{"line":4345,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4345,"column":0},"generated":{"line":4346,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4346,"column":0},"generated":{"line":4347,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4347,"column":0},"generated":{"line":4348,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4348,"column":0},"generated":{"line":4349,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4349,"column":0},"generated":{"line":4350,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4350,"column":0},"generated":{"line":4351,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4351,"column":0},"generated":{"line":4352,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4352,"column":0},"generated":{"line":4353,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4353,"column":0},"generated":{"line":4354,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4354,"column":0},"generated":{"line":4355,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4355,"column":0},"generated":{"line":4356,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4356,"column":0},"generated":{"line":4357,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4357,"column":0},"generated":{"line":4358,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4358,"column":0},"generated":{"line":4359,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4359,"column":0},"generated":{"line":4360,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4360,"column":0},"generated":{"line":4361,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4361,"column":0},"generated":{"line":4362,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4362,"column":0},"generated":{"line":4363,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4363,"column":0},"generated":{"line":4364,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4364,"column":0},"generated":{"line":4365,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4365,"column":0},"generated":{"line":4366,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4366,"column":0},"generated":{"line":4367,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4367,"column":0},"generated":{"line":4368,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4368,"column":0},"generated":{"line":4369,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4369,"column":0},"generated":{"line":4370,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4370,"column":0},"generated":{"line":4371,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4371,"column":0},"generated":{"line":4372,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4372,"column":0},"generated":{"line":4373,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4373,"column":0},"generated":{"line":4374,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4374,"column":0},"generated":{"line":4375,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4375,"column":0},"generated":{"line":4376,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4376,"column":0},"generated":{"line":4377,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4377,"column":0},"generated":{"line":4378,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4378,"column":0},"generated":{"line":4379,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4379,"column":0},"generated":{"line":4380,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4380,"column":0},"generated":{"line":4381,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4381,"column":0},"generated":{"line":4382,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4382,"column":0},"generated":{"line":4383,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4383,"column":0},"generated":{"line":4384,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4384,"column":0},"generated":{"line":4385,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4385,"column":0},"generated":{"line":4386,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4386,"column":0},"generated":{"line":4387,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4387,"column":0},"generated":{"line":4388,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4388,"column":0},"generated":{"line":4389,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4389,"column":0},"generated":{"line":4390,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4390,"column":0},"generated":{"line":4391,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4391,"column":0},"generated":{"line":4392,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4392,"column":0},"generated":{"line":4393,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4393,"column":0},"generated":{"line":4394,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4394,"column":0},"generated":{"line":4395,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4395,"column":0},"generated":{"line":4396,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4396,"column":0},"generated":{"line":4397,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4397,"column":0},"generated":{"line":4398,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4398,"column":0},"generated":{"line":4399,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4399,"column":0},"generated":{"line":4400,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4400,"column":0},"generated":{"line":4401,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4401,"column":0},"generated":{"line":4402,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4402,"column":0},"generated":{"line":4403,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4403,"column":0},"generated":{"line":4404,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4404,"column":0},"generated":{"line":4405,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4405,"column":0},"generated":{"line":4406,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4406,"column":0},"generated":{"line":4407,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4407,"column":0},"generated":{"line":4408,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4408,"column":0},"generated":{"line":4409,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4409,"column":0},"generated":{"line":4410,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4410,"column":0},"generated":{"line":4411,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4411,"column":0},"generated":{"line":4412,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4412,"column":0},"generated":{"line":4413,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4413,"column":0},"generated":{"line":4414,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4414,"column":0},"generated":{"line":4415,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4415,"column":0},"generated":{"line":4416,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4416,"column":0},"generated":{"line":4417,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4417,"column":0},"generated":{"line":4418,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4418,"column":0},"generated":{"line":4419,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4419,"column":0},"generated":{"line":4420,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4420,"column":0},"generated":{"line":4421,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4421,"column":0},"generated":{"line":4422,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4422,"column":0},"generated":{"line":4423,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4423,"column":0},"generated":{"line":4424,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4424,"column":0},"generated":{"line":4425,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4425,"column":0},"generated":{"line":4426,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4426,"column":0},"generated":{"line":4427,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4427,"column":0},"generated":{"line":4428,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4428,"column":0},"generated":{"line":4429,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4429,"column":0},"generated":{"line":4430,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4430,"column":0},"generated":{"line":4431,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4431,"column":0},"generated":{"line":4432,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4432,"column":0},"generated":{"line":4433,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4433,"column":0},"generated":{"line":4434,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4434,"column":0},"generated":{"line":4435,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4435,"column":0},"generated":{"line":4436,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4436,"column":0},"generated":{"line":4437,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4437,"column":0},"generated":{"line":4438,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4438,"column":0},"generated":{"line":4439,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4439,"column":0},"generated":{"line":4440,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4440,"column":0},"generated":{"line":4441,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4441,"column":0},"generated":{"line":4442,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4442,"column":0},"generated":{"line":4443,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4443,"column":0},"generated":{"line":4444,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4444,"column":0},"generated":{"line":4445,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4445,"column":0},"generated":{"line":4446,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4446,"column":0},"generated":{"line":4447,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4447,"column":0},"generated":{"line":4448,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4448,"column":0},"generated":{"line":4449,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4449,"column":0},"generated":{"line":4450,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4450,"column":0},"generated":{"line":4451,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4451,"column":0},"generated":{"line":4452,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4452,"column":0},"generated":{"line":4453,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4453,"column":0},"generated":{"line":4454,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4454,"column":0},"generated":{"line":4455,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4455,"column":0},"generated":{"line":4456,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4456,"column":0},"generated":{"line":4457,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4457,"column":0},"generated":{"line":4458,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4458,"column":0},"generated":{"line":4459,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4459,"column":0},"generated":{"line":4460,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4460,"column":0},"generated":{"line":4461,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4461,"column":0},"generated":{"line":4462,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4462,"column":0},"generated":{"line":4463,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4463,"column":0},"generated":{"line":4464,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4464,"column":0},"generated":{"line":4465,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4465,"column":0},"generated":{"line":4466,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4466,"column":0},"generated":{"line":4467,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4467,"column":0},"generated":{"line":4468,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4468,"column":0},"generated":{"line":4469,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4469,"column":0},"generated":{"line":4470,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4470,"column":0},"generated":{"line":4471,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4471,"column":0},"generated":{"line":4472,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4472,"column":0},"generated":{"line":4473,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4473,"column":0},"generated":{"line":4474,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4474,"column":0},"generated":{"line":4475,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4475,"column":0},"generated":{"line":4476,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4476,"column":0},"generated":{"line":4477,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4477,"column":0},"generated":{"line":4478,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4478,"column":0},"generated":{"line":4479,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4479,"column":0},"generated":{"line":4480,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4480,"column":0},"generated":{"line":4481,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4481,"column":0},"generated":{"line":4482,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4482,"column":0},"generated":{"line":4483,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4483,"column":0},"generated":{"line":4484,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4484,"column":0},"generated":{"line":4485,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4485,"column":0},"generated":{"line":4486,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4486,"column":0},"generated":{"line":4487,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4487,"column":0},"generated":{"line":4488,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4488,"column":0},"generated":{"line":4489,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4489,"column":0},"generated":{"line":4490,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4490,"column":0},"generated":{"line":4491,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4491,"column":0},"generated":{"line":4492,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4492,"column":0},"generated":{"line":4493,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4493,"column":0},"generated":{"line":4494,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4494,"column":0},"generated":{"line":4495,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4495,"column":0},"generated":{"line":4496,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4496,"column":0},"generated":{"line":4497,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4497,"column":0},"generated":{"line":4498,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4498,"column":0},"generated":{"line":4499,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4499,"column":0},"generated":{"line":4500,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4500,"column":0},"generated":{"line":4501,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4501,"column":0},"generated":{"line":4502,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4502,"column":0},"generated":{"line":4503,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4503,"column":0},"generated":{"line":4504,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4504,"column":0},"generated":{"line":4505,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4505,"column":0},"generated":{"line":4506,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4506,"column":0},"generated":{"line":4507,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4507,"column":0},"generated":{"line":4508,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4508,"column":0},"generated":{"line":4509,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4509,"column":0},"generated":{"line":4510,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4510,"column":0},"generated":{"line":4511,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4511,"column":0},"generated":{"line":4512,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4512,"column":0},"generated":{"line":4513,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4513,"column":0},"generated":{"line":4514,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4514,"column":0},"generated":{"line":4515,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4515,"column":0},"generated":{"line":4516,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4516,"column":0},"generated":{"line":4517,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4517,"column":0},"generated":{"line":4518,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4518,"column":0},"generated":{"line":4519,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4519,"column":0},"generated":{"line":4520,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4520,"column":0},"generated":{"line":4521,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4521,"column":0},"generated":{"line":4522,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4522,"column":0},"generated":{"line":4523,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4523,"column":0},"generated":{"line":4524,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4524,"column":0},"generated":{"line":4525,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4525,"column":0},"generated":{"line":4526,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4526,"column":0},"generated":{"line":4527,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4527,"column":0},"generated":{"line":4528,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4528,"column":0},"generated":{"line":4529,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4529,"column":0},"generated":{"line":4530,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4530,"column":0},"generated":{"line":4531,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4531,"column":0},"generated":{"line":4532,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4532,"column":0},"generated":{"line":4533,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4533,"column":0},"generated":{"line":4534,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4534,"column":0},"generated":{"line":4535,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4535,"column":0},"generated":{"line":4536,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4536,"column":0},"generated":{"line":4537,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4537,"column":0},"generated":{"line":4538,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4538,"column":0},"generated":{"line":4539,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4539,"column":0},"generated":{"line":4540,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4540,"column":0},"generated":{"line":4541,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4541,"column":0},"generated":{"line":4542,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4542,"column":0},"generated":{"line":4543,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4543,"column":0},"generated":{"line":4544,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4544,"column":0},"generated":{"line":4545,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4545,"column":0},"generated":{"line":4546,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4546,"column":0},"generated":{"line":4547,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4547,"column":0},"generated":{"line":4548,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4548,"column":0},"generated":{"line":4549,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4549,"column":0},"generated":{"line":4550,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4550,"column":0},"generated":{"line":4551,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4551,"column":0},"generated":{"line":4552,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4552,"column":0},"generated":{"line":4553,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4553,"column":0},"generated":{"line":4554,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4554,"column":0},"generated":{"line":4555,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4555,"column":0},"generated":{"line":4556,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4556,"column":0},"generated":{"line":4557,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4557,"column":0},"generated":{"line":4558,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4558,"column":0},"generated":{"line":4559,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4559,"column":0},"generated":{"line":4560,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4560,"column":0},"generated":{"line":4561,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4561,"column":0},"generated":{"line":4562,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4562,"column":0},"generated":{"line":4563,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4563,"column":0},"generated":{"line":4564,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4564,"column":0},"generated":{"line":4565,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4565,"column":0},"generated":{"line":4566,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4566,"column":0},"generated":{"line":4567,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4567,"column":0},"generated":{"line":4568,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4568,"column":0},"generated":{"line":4569,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4569,"column":0},"generated":{"line":4570,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4570,"column":0},"generated":{"line":4571,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4571,"column":0},"generated":{"line":4572,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4572,"column":0},"generated":{"line":4573,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4573,"column":0},"generated":{"line":4574,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4574,"column":0},"generated":{"line":4575,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4575,"column":0},"generated":{"line":4576,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4576,"column":0},"generated":{"line":4577,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4577,"column":0},"generated":{"line":4578,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4578,"column":0},"generated":{"line":4579,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4579,"column":0},"generated":{"line":4580,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4580,"column":0},"generated":{"line":4581,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4581,"column":0},"generated":{"line":4582,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4582,"column":0},"generated":{"line":4583,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4583,"column":0},"generated":{"line":4584,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4584,"column":0},"generated":{"line":4585,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4585,"column":0},"generated":{"line":4586,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4586,"column":0},"generated":{"line":4587,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4587,"column":0},"generated":{"line":4588,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4588,"column":0},"generated":{"line":4589,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4589,"column":0},"generated":{"line":4590,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4590,"column":0},"generated":{"line":4591,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4591,"column":0},"generated":{"line":4592,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4592,"column":0},"generated":{"line":4593,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4593,"column":0},"generated":{"line":4594,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4594,"column":0},"generated":{"line":4595,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4595,"column":0},"generated":{"line":4596,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4596,"column":0},"generated":{"line":4597,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4597,"column":0},"generated":{"line":4598,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4598,"column":0},"generated":{"line":4599,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4599,"column":0},"generated":{"line":4600,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4600,"column":0},"generated":{"line":4601,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4601,"column":0},"generated":{"line":4602,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4602,"column":0},"generated":{"line":4603,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4603,"column":0},"generated":{"line":4604,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4604,"column":0},"generated":{"line":4605,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4605,"column":0},"generated":{"line":4606,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4606,"column":0},"generated":{"line":4607,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4607,"column":0},"generated":{"line":4608,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4608,"column":0},"generated":{"line":4609,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4609,"column":0},"generated":{"line":4610,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4610,"column":0},"generated":{"line":4611,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4611,"column":0},"generated":{"line":4612,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4612,"column":0},"generated":{"line":4613,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4613,"column":0},"generated":{"line":4614,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4614,"column":0},"generated":{"line":4615,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4615,"column":0},"generated":{"line":4616,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4616,"column":0},"generated":{"line":4617,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4617,"column":0},"generated":{"line":4618,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4618,"column":0},"generated":{"line":4619,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4619,"column":0},"generated":{"line":4620,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4620,"column":0},"generated":{"line":4621,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4621,"column":0},"generated":{"line":4622,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4622,"column":0},"generated":{"line":4623,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4623,"column":0},"generated":{"line":4624,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4624,"column":0},"generated":{"line":4625,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4625,"column":0},"generated":{"line":4626,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4626,"column":0},"generated":{"line":4627,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4627,"column":0},"generated":{"line":4628,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4628,"column":0},"generated":{"line":4629,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4629,"column":0},"generated":{"line":4630,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4630,"column":0},"generated":{"line":4631,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4631,"column":0},"generated":{"line":4632,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4632,"column":0},"generated":{"line":4633,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4633,"column":0},"generated":{"line":4634,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4634,"column":0},"generated":{"line":4635,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4635,"column":0},"generated":{"line":4636,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4636,"column":0},"generated":{"line":4637,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4637,"column":0},"generated":{"line":4638,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4638,"column":0},"generated":{"line":4639,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4639,"column":0},"generated":{"line":4640,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4640,"column":0},"generated":{"line":4641,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4641,"column":0},"generated":{"line":4642,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4642,"column":0},"generated":{"line":4643,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4643,"column":0},"generated":{"line":4644,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4644,"column":0},"generated":{"line":4645,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4645,"column":0},"generated":{"line":4646,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4646,"column":0},"generated":{"line":4647,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4647,"column":0},"generated":{"line":4648,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4648,"column":0},"generated":{"line":4649,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4649,"column":0},"generated":{"line":4650,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4650,"column":0},"generated":{"line":4651,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4651,"column":0},"generated":{"line":4652,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4652,"column":0},"generated":{"line":4653,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4653,"column":0},"generated":{"line":4654,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4654,"column":0},"generated":{"line":4655,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4655,"column":0},"generated":{"line":4656,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4656,"column":0},"generated":{"line":4657,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4657,"column":0},"generated":{"line":4658,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4658,"column":0},"generated":{"line":4659,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4659,"column":0},"generated":{"line":4660,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4660,"column":0},"generated":{"line":4661,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4661,"column":0},"generated":{"line":4662,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4662,"column":0},"generated":{"line":4663,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4663,"column":0},"generated":{"line":4664,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4664,"column":0},"generated":{"line":4665,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4665,"column":0},"generated":{"line":4666,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4666,"column":0},"generated":{"line":4667,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4667,"column":0},"generated":{"line":4668,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4668,"column":0},"generated":{"line":4669,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4669,"column":0},"generated":{"line":4670,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4670,"column":0},"generated":{"line":4671,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4671,"column":0},"generated":{"line":4672,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4672,"column":0},"generated":{"line":4673,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4673,"column":0},"generated":{"line":4674,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4674,"column":0},"generated":{"line":4675,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4675,"column":0},"generated":{"line":4676,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4676,"column":0},"generated":{"line":4677,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4677,"column":0},"generated":{"line":4678,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4678,"column":0},"generated":{"line":4679,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4679,"column":0},"generated":{"line":4680,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4680,"column":0},"generated":{"line":4681,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4681,"column":0},"generated":{"line":4682,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4682,"column":0},"generated":{"line":4683,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4683,"column":0},"generated":{"line":4684,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4684,"column":0},"generated":{"line":4685,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4685,"column":0},"generated":{"line":4686,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4686,"column":0},"generated":{"line":4687,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4687,"column":0},"generated":{"line":4688,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4688,"column":0},"generated":{"line":4689,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4689,"column":0},"generated":{"line":4690,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4690,"column":0},"generated":{"line":4691,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4691,"column":0},"generated":{"line":4692,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4692,"column":0},"generated":{"line":4693,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4693,"column":0},"generated":{"line":4694,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4694,"column":0},"generated":{"line":4695,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4695,"column":0},"generated":{"line":4696,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4696,"column":0},"generated":{"line":4697,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4697,"column":0},"generated":{"line":4698,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4698,"column":0},"generated":{"line":4699,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4699,"column":0},"generated":{"line":4700,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4700,"column":0},"generated":{"line":4701,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4701,"column":0},"generated":{"line":4702,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4702,"column":0},"generated":{"line":4703,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4703,"column":0},"generated":{"line":4704,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4704,"column":0},"generated":{"line":4705,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4705,"column":0},"generated":{"line":4706,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4706,"column":0},"generated":{"line":4707,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4707,"column":0},"generated":{"line":4708,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4708,"column":0},"generated":{"line":4709,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4709,"column":0},"generated":{"line":4710,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4710,"column":0},"generated":{"line":4711,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4711,"column":0},"generated":{"line":4712,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4712,"column":0},"generated":{"line":4713,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4713,"column":0},"generated":{"line":4714,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4714,"column":0},"generated":{"line":4715,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4715,"column":0},"generated":{"line":4716,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4716,"column":0},"generated":{"line":4717,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4717,"column":0},"generated":{"line":4718,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4718,"column":0},"generated":{"line":4719,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4719,"column":0},"generated":{"line":4720,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4720,"column":0},"generated":{"line":4721,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4721,"column":0},"generated":{"line":4722,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4722,"column":0},"generated":{"line":4723,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4723,"column":0},"generated":{"line":4724,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4724,"column":0},"generated":{"line":4725,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4725,"column":0},"generated":{"line":4726,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4726,"column":0},"generated":{"line":4727,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4727,"column":0},"generated":{"line":4728,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4728,"column":0},"generated":{"line":4729,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4729,"column":0},"generated":{"line":4730,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4730,"column":0},"generated":{"line":4731,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4731,"column":0},"generated":{"line":4732,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4732,"column":0},"generated":{"line":4733,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4733,"column":0},"generated":{"line":4734,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4734,"column":0},"generated":{"line":4735,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4735,"column":0},"generated":{"line":4736,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4736,"column":0},"generated":{"line":4737,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4737,"column":0},"generated":{"line":4738,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4738,"column":0},"generated":{"line":4739,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4739,"column":0},"generated":{"line":4740,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4740,"column":0},"generated":{"line":4741,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4741,"column":0},"generated":{"line":4742,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4742,"column":0},"generated":{"line":4743,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4743,"column":0},"generated":{"line":4744,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4744,"column":0},"generated":{"line":4745,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4745,"column":0},"generated":{"line":4746,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4746,"column":0},"generated":{"line":4747,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4747,"column":0},"generated":{"line":4748,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4748,"column":0},"generated":{"line":4749,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4749,"column":0},"generated":{"line":4750,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4750,"column":0},"generated":{"line":4751,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4751,"column":0},"generated":{"line":4752,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4752,"column":0},"generated":{"line":4753,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4753,"column":0},"generated":{"line":4754,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4754,"column":0},"generated":{"line":4755,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4755,"column":0},"generated":{"line":4756,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4756,"column":0},"generated":{"line":4757,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4757,"column":0},"generated":{"line":4758,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4758,"column":0},"generated":{"line":4759,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4759,"column":0},"generated":{"line":4760,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4760,"column":0},"generated":{"line":4761,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4761,"column":0},"generated":{"line":4762,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4762,"column":0},"generated":{"line":4763,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4763,"column":0},"generated":{"line":4764,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4764,"column":0},"generated":{"line":4765,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4765,"column":0},"generated":{"line":4766,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4766,"column":0},"generated":{"line":4767,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4767,"column":0},"generated":{"line":4768,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4768,"column":0},"generated":{"line":4769,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4769,"column":0},"generated":{"line":4770,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4770,"column":0},"generated":{"line":4771,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4771,"column":0},"generated":{"line":4772,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4772,"column":0},"generated":{"line":4773,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4773,"column":0},"generated":{"line":4774,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4774,"column":0},"generated":{"line":4775,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4775,"column":0},"generated":{"line":4776,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4776,"column":0},"generated":{"line":4777,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4777,"column":0},"generated":{"line":4778,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4778,"column":0},"generated":{"line":4779,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4779,"column":0},"generated":{"line":4780,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4780,"column":0},"generated":{"line":4781,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4781,"column":0},"generated":{"line":4782,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4782,"column":0},"generated":{"line":4783,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4783,"column":0},"generated":{"line":4784,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4784,"column":0},"generated":{"line":4785,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4785,"column":0},"generated":{"line":4786,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4786,"column":0},"generated":{"line":4787,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4787,"column":0},"generated":{"line":4788,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4788,"column":0},"generated":{"line":4789,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4789,"column":0},"generated":{"line":4790,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4790,"column":0},"generated":{"line":4791,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4791,"column":0},"generated":{"line":4792,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4792,"column":0},"generated":{"line":4793,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4793,"column":0},"generated":{"line":4794,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4794,"column":0},"generated":{"line":4795,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4795,"column":0},"generated":{"line":4796,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4796,"column":0},"generated":{"line":4797,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4797,"column":0},"generated":{"line":4798,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4798,"column":0},"generated":{"line":4799,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4799,"column":0},"generated":{"line":4800,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4800,"column":0},"generated":{"line":4801,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4801,"column":0},"generated":{"line":4802,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4802,"column":0},"generated":{"line":4803,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4803,"column":0},"generated":{"line":4804,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4804,"column":0},"generated":{"line":4805,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4805,"column":0},"generated":{"line":4806,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4806,"column":0},"generated":{"line":4807,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4807,"column":0},"generated":{"line":4808,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4808,"column":0},"generated":{"line":4809,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4809,"column":0},"generated":{"line":4810,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4810,"column":0},"generated":{"line":4811,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4811,"column":0},"generated":{"line":4812,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4812,"column":0},"generated":{"line":4813,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4813,"column":0},"generated":{"line":4814,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4814,"column":0},"generated":{"line":4815,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4815,"column":0},"generated":{"line":4816,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4816,"column":0},"generated":{"line":4817,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4817,"column":0},"generated":{"line":4818,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4818,"column":0},"generated":{"line":4819,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4819,"column":0},"generated":{"line":4820,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4820,"column":0},"generated":{"line":4821,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4821,"column":0},"generated":{"line":4822,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4822,"column":0},"generated":{"line":4823,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4823,"column":0},"generated":{"line":4824,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4824,"column":0},"generated":{"line":4825,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4825,"column":0},"generated":{"line":4826,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4826,"column":0},"generated":{"line":4827,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4827,"column":0},"generated":{"line":4828,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4828,"column":0},"generated":{"line":4829,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4829,"column":0},"generated":{"line":4830,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4830,"column":0},"generated":{"line":4831,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4831,"column":0},"generated":{"line":4832,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4832,"column":0},"generated":{"line":4833,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4833,"column":0},"generated":{"line":4834,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4834,"column":0},"generated":{"line":4835,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4835,"column":0},"generated":{"line":4836,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4836,"column":0},"generated":{"line":4837,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4837,"column":0},"generated":{"line":4838,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4838,"column":0},"generated":{"line":4839,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4839,"column":0},"generated":{"line":4840,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4840,"column":0},"generated":{"line":4841,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4841,"column":0},"generated":{"line":4842,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4842,"column":0},"generated":{"line":4843,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4843,"column":0},"generated":{"line":4844,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4844,"column":0},"generated":{"line":4845,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4845,"column":0},"generated":{"line":4846,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4846,"column":0},"generated":{"line":4847,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4847,"column":0},"generated":{"line":4848,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4848,"column":0},"generated":{"line":4849,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4849,"column":0},"generated":{"line":4850,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4850,"column":0},"generated":{"line":4851,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4851,"column":0},"generated":{"line":4852,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4852,"column":0},"generated":{"line":4853,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4853,"column":0},"generated":{"line":4854,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4854,"column":0},"generated":{"line":4855,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4855,"column":0},"generated":{"line":4856,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4856,"column":0},"generated":{"line":4857,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4857,"column":0},"generated":{"line":4858,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4858,"column":0},"generated":{"line":4859,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4859,"column":0},"generated":{"line":4860,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4860,"column":0},"generated":{"line":4861,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4861,"column":0},"generated":{"line":4862,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4862,"column":0},"generated":{"line":4863,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4863,"column":0},"generated":{"line":4864,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4864,"column":0},"generated":{"line":4865,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4865,"column":0},"generated":{"line":4866,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4866,"column":0},"generated":{"line":4867,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4867,"column":0},"generated":{"line":4868,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4868,"column":0},"generated":{"line":4869,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4869,"column":0},"generated":{"line":4870,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4870,"column":0},"generated":{"line":4871,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4871,"column":0},"generated":{"line":4872,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4872,"column":0},"generated":{"line":4873,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4873,"column":0},"generated":{"line":4874,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4874,"column":0},"generated":{"line":4875,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4875,"column":0},"generated":{"line":4876,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4876,"column":0},"generated":{"line":4877,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4877,"column":0},"generated":{"line":4878,"column":0}},{"source":"node_modules/decimal.js/decimal.js","original":{"line":4878,"column":0},"generated":{"line":4879,"column":0}}],"sources":{"node_modules/decimal.js/decimal.js":";(function (globalScope) {\r\n  'use strict';\r\n\r\n\r\n  /*\r\n   *  decimal.js v10.2.0\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js\r\n   *  Copyright (c) 2019 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Licence\r\n   */\r\n\r\n\r\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n    // The maximum exponent magnitude.\r\n    // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\r\n  var EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n    // The limit on the value of `precision`, and on the value of the first argument to\r\n    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n    MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n    // Base conversion alphabet.\r\n    NUMERALS = '0123456789abcdef',\r\n\r\n    // The natural logarithm of 10 (1025 digits).\r\n    LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\r\n\r\n    // Pi (1025 digits).\r\n    PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\r\n\r\n\r\n    // The initial configuration properties of the Decimal constructor.\r\n    DEFAULTS = {\r\n\r\n      // These values must be integers within the stated ranges (inclusive).\r\n      // Most of these values can be changed at run-time using the `Decimal.config` method.\r\n\r\n      // The maximum number of significant digits of the result of a calculation or base conversion.\r\n      // E.g. `Decimal.config({ precision: 20 });`\r\n      precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n      // The rounding mode used when rounding to `precision`.\r\n      //\r\n      // ROUND_UP         0 Away from zero.\r\n      // ROUND_DOWN       1 Towards zero.\r\n      // ROUND_CEIL       2 Towards +Infinity.\r\n      // ROUND_FLOOR      3 Towards -Infinity.\r\n      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      //\r\n      // E.g.\r\n      // `Decimal.rounding = 4;`\r\n      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n      rounding: 4,                           // 0 to 8\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\r\n      // FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN  6 The IEEE 754 remainder function.\r\n      // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\r\n      //\r\n      // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\r\n      // division (9) are commonly used for the modulus operation. The other rounding modes can also\r\n      // be used, but they may not give useful results.\r\n      modulo: 1,                             // 0 to 9\r\n\r\n      // The exponent value at and beneath which `toString` returns exponential notation.\r\n      // JavaScript numbers: -7\r\n      toExpNeg: -7,                          // 0 to -EXP_LIMIT\r\n\r\n      // The exponent value at and above which `toString` returns exponential notation.\r\n      // JavaScript numbers: 21\r\n      toExpPos:  21,                         // 0 to EXP_LIMIT\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // JavaScript numbers: -324  (5e-324)\r\n      minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // JavaScript numbers: 308  (1.7976931348623157e+308)\r\n      maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      crypto: false                          // true/false\r\n    },\r\n\r\n\r\n  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n    Decimal, inexact, noConflict, quadrant,\r\n    external = true,\r\n\r\n    decimalError = '[DecimalError] ',\r\n    invalidArgument = decimalError + 'Invalid argument: ',\r\n    precisionLimitExceeded = decimalError + 'Precision limit exceeded',\r\n    cryptoUnavailable = decimalError + 'crypto unavailable',\r\n\r\n    mathfloor = Math.floor,\r\n    mathpow = Math.pow,\r\n\r\n    isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\r\n    isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\r\n    isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\r\n    isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n    BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_SAFE_INTEGER = 9007199254740991,\r\n\r\n    LN10_PRECISION = LN10.length - 1,\r\n    PI_PRECISION = PI.length - 1,\r\n\r\n    // Decimal.prototype object\r\n    P = { name: '[object Decimal]' };\r\n\r\n\r\n  // Decimal prototype methods\r\n\r\n\r\n  /*\r\n   *  absoluteValue             abs\r\n   *  ceil\r\n   *  comparedTo                cmp\r\n   *  cosine                    cos\r\n   *  cubeRoot                  cbrt\r\n   *  decimalPlaces             dp\r\n   *  dividedBy                 div\r\n   *  dividedToIntegerBy        divToInt\r\n   *  equals                    eq\r\n   *  floor\r\n   *  greaterThan               gt\r\n   *  greaterThanOrEqualTo      gte\r\n   *  hyperbolicCosine          cosh\r\n   *  hyperbolicSine            sinh\r\n   *  hyperbolicTangent         tanh\r\n   *  inverseCosine             acos\r\n   *  inverseHyperbolicCosine   acosh\r\n   *  inverseHyperbolicSine     asinh\r\n   *  inverseHyperbolicTangent  atanh\r\n   *  inverseSine               asin\r\n   *  inverseTangent            atan\r\n   *  isFinite\r\n   *  isInteger                 isInt\r\n   *  isNaN\r\n   *  isNegative                isNeg\r\n   *  isPositive                isPos\r\n   *  isZero\r\n   *  lessThan                  lt\r\n   *  lessThanOrEqualTo         lte\r\n   *  logarithm                 log\r\n   *  [maximum]                 [max]\r\n   *  [minimum]                 [min]\r\n   *  minus                     sub\r\n   *  modulo                    mod\r\n   *  naturalExponential        exp\r\n   *  naturalLogarithm          ln\r\n   *  negated                   neg\r\n   *  plus                      add\r\n   *  precision                 sd\r\n   *  round\r\n   *  sine                      sin\r\n   *  squareRoot                sqrt\r\n   *  tangent                   tan\r\n   *  times                     mul\r\n   *  toBinary\r\n   *  toDecimalPlaces           toDP\r\n   *  toExponential\r\n   *  toFixed\r\n   *  toFraction\r\n   *  toHexadecimal             toHex\r\n   *  toNearest\r\n   *  toNumber\r\n   *  toOctal\r\n   *  toPower                   pow\r\n   *  toPrecision\r\n   *  toSignificantDigits       toSD\r\n   *  toString\r\n   *  truncated                 trunc\r\n   *  valueOf                   toJSON\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of this Decimal.\r\n   *\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of positive Infinity.\r\n   *\r\n   */\r\n  P.ceil = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if the value of this Decimal is greater than the value of `y`,\r\n   *  -1    if the value of this Decimal is less than the value of `y`,\r\n   *   0    if they have the same value,\r\n   *   NaN  if the value of either Decimal is NaN.\r\n   *\r\n   */\r\n  P.comparedTo = P.cmp = function (y) {\r\n    var i, j, xdL, ydL,\r\n      x = this,\r\n      xd = x.d,\r\n      yd = (y = new x.constructor(y)).d,\r\n      xs = x.s,\r\n      ys = y.s;\r\n\r\n    // Either NaN or ±Infinity?\r\n    if (!xd || !yd) {\r\n      return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Either zero?\r\n    if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\r\n\r\n    // Signs differ?\r\n    if (xs !== ys) return xs;\r\n\r\n    // Compare exponents.\r\n    if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\r\n\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n      if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * cos(0)         = 1\r\n   * cos(-0)        = 1\r\n   * cos(Infinity)  = NaN\r\n   * cos(-Infinity) = NaN\r\n   * cos(NaN)       = NaN\r\n   *\r\n   */\r\n  P.cosine = P.cos = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.d) return new Ctor(NaN);\r\n\r\n    // cos(0) = cos(-0) = 1\r\n    if (!x.d[0]) return new Ctor(1);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *\r\n   * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   *  cbrt(0)  =  0\r\n   *  cbrt(-0) = -0\r\n   *  cbrt(1)  =  1\r\n   *  cbrt(-1) = -1\r\n   *  cbrt(N)  =  N\r\n   *  cbrt(-I) = -I\r\n   *  cbrt(I)  =  I\r\n   *\r\n   * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n   *\r\n   */\r\n  P.cubeRoot = P.cbrt = function () {\r\n    var e, m, n, r, rep, s, sd, t, t3, t3plusx,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = x.s * mathpow(x.s * x, 1 / 3);\r\n\r\n     // Math.cbrt underflow/overflow?\r\n     // Pass x to Math.pow as integer, then adjust the exponent of the result.\r\n    if (!s || Math.abs(s) == 1 / 0) {\r\n      n = digitsToString(x.d);\r\n      e = x.e;\r\n\r\n      // Adjust n exponent so it is a multiple of 3 away from x exponent.\r\n      if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\r\n      s = mathpow(n, 1 / 3);\r\n\r\n      // Rarely, e may be one less than the result exponent value.\r\n      e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n      r.s = x.s;\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Halley's method.\r\n    // TODO? Compare Newton's method.\r\n    for (;;) {\r\n      t = r;\r\n      t3 = t.times(t).times(t);\r\n      t3plusx = t3.plus(x);\r\n      r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\r\n        // , i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of decimal places of the value of this Decimal.\r\n   *\r\n   */\r\n  P.decimalPlaces = P.dp = function () {\r\n    var w,\r\n      d = this.d,\r\n      n = NaN;\r\n\r\n    if (d) {\r\n      w = d.length - 1;\r\n      n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      w = d[w];\r\n      if (w) for (; w % 10 == 0; w /= 10) n--;\r\n      if (n < 0) n = 0;\r\n    }\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedBy = P.div = function (y) {\r\n    return divide(this, new this.constructor(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n   * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedToIntegerBy = P.divToInt = function (y) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.equals = P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of negative Infinity.\r\n   *\r\n   */\r\n  P.floor = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 3);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n   * false.\r\n   *\r\n   */\r\n  P.greaterThan = P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  P.greaterThanOrEqualTo = P.gte = function (y) {\r\n    var k = this.cmp(y);\r\n    return k == 1 || k === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [1, Infinity]\r\n   *\r\n   * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n   *\r\n   * cosh(0)         = 1\r\n   * cosh(-0)        = 1\r\n   * cosh(Infinity)  = Infinity\r\n   * cosh(-Infinity) = Infinity\r\n   * cosh(NaN)       = NaN\r\n   *\r\n   *  x        time taken (ms)   result\r\n   * 1000      9                 9.8503555700852349694e+433\r\n   * 10000     25                4.4034091128314607936e+4342\r\n   * 100000    171               1.4033316802130615897e+43429\r\n   * 1000000   3817              1.5166076984010437725e+434294\r\n   * 10000000  abandoned after 2 minute wait\r\n   *\r\n   * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicCosine = P.cosh = function () {\r\n    var k, n, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      one = new Ctor(1);\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\r\n    if (x.isZero()) return one;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\r\n    // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    // TODO? Estimation reused from cosine() and may not be optimal here.\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      n = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      n = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\r\n\r\n    // Reverse argument reduction\r\n    var cosh2_x,\r\n      i = k,\r\n      d8 = new Ctor(8);\r\n    for (; i--;) {\r\n      cosh2_x = x.times(x);\r\n      x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\r\n    }\r\n\r\n    return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n   *\r\n   * sinh(0)         = 0\r\n   * sinh(-0)        = -0\r\n   * sinh(Infinity)  = Infinity\r\n   * sinh(-Infinity) = -Infinity\r\n   * sinh(NaN)       = NaN\r\n   *\r\n   * x        time taken (ms)\r\n   * 10       2 ms\r\n   * 100      5 ms\r\n   * 1000     14 ms\r\n   * 10000    82 ms\r\n   * 100000   886 ms            1.4033316802130615897e+43429\r\n   * 200000   2613 ms\r\n   * 300000   5407 ms\r\n   * 400000   8824 ms\r\n   * 500000   13026 ms          8.7080643612718084129e+217146\r\n   * 1000000  48543 ms\r\n   *\r\n   * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicSine = P.sinh = function () {\r\n    var k, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n    } else {\r\n\r\n      // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\r\n      // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\r\n      // 3 multiplications and 1 addition\r\n\r\n      // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\r\n      // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\r\n      // 4 multiplications and 2 additions\r\n\r\n      // Estimate the optimum number of times to use the argument reduction.\r\n      k = 1.4 * Math.sqrt(len);\r\n      k = k > 16 ? 16 : k | 0;\r\n\r\n      x = x.times(1 / tinyPow(5, k));\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n\r\n      // Reverse argument reduction\r\n      var sinh2_x,\r\n        d5 = new Ctor(5),\r\n        d16 = new Ctor(16),\r\n        d20 = new Ctor(20);\r\n      for (; k--;) {\r\n        sinh2_x = x.times(x);\r\n        x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\r\n      }\r\n    }\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * tanh(x) = sinh(x) / cosh(x)\r\n   *\r\n   * tanh(0)         = 0\r\n   * tanh(-0)        = -0\r\n   * tanh(Infinity)  = 1\r\n   * tanh(-Infinity) = -1\r\n   * tanh(NaN)       = NaN\r\n   *\r\n   */\r\n  P.hyperbolicTangent = P.tanh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 7;\r\n    Ctor.rounding = 1;\r\n\r\n    return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n   * this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [0, pi]\r\n   *\r\n   * acos(x) = pi/2 - asin(x)\r\n   *\r\n   * acos(0)       = pi/2\r\n   * acos(-0)      = pi/2\r\n   * acos(1)       = 0\r\n   * acos(-1)      = pi\r\n   * acos(1/2)     = pi/3\r\n   * acos(-1/2)    = 2*pi/3\r\n   * acos(|x| > 1) = NaN\r\n   * acos(NaN)     = NaN\r\n   *\r\n   */\r\n  P.inverseCosine = P.acos = function () {\r\n    var halfPi,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      k = x.abs().cmp(1),\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n      return k === 0\r\n        // |x| is 1\r\n        ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\r\n        // |x| > 1 or x is NaN\r\n        : new Ctor(NaN);\r\n    }\r\n\r\n    if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.asin();\r\n    halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return halfPi.minus(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [1, Infinity]\r\n   * Range: [0, Infinity]\r\n   *\r\n   * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n   *\r\n   * acosh(x < 1)     = NaN\r\n   * acosh(NaN)       = NaN\r\n   * acosh(Infinity)  = Infinity\r\n   * acosh(-Infinity) = NaN\r\n   * acosh(0)         = NaN\r\n   * acosh(-0)        = NaN\r\n   * acosh(1)         = 0\r\n   * acosh(-1)        = NaN\r\n   *\r\n   */\r\n  P.inverseHyperbolicCosine = P.acosh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\r\n    if (!x.isFinite()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).minus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n   *\r\n   * asinh(NaN)       = NaN\r\n   * asinh(Infinity)  = Infinity\r\n   * asinh(-Infinity) = -Infinity\r\n   * asinh(0)         = 0\r\n   * asinh(-0)        = -0\r\n   *\r\n   */\r\n  P.inverseHyperbolicSine = P.asinh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).plus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n   *\r\n   * atanh(|x| > 1)   = NaN\r\n   * atanh(NaN)       = NaN\r\n   * atanh(Infinity)  = NaN\r\n   * atanh(-Infinity) = NaN\r\n   * atanh(0)         = 0\r\n   * atanh(-0)        = -0\r\n   * atanh(1)         = Infinity\r\n   * atanh(-1)        = -Infinity\r\n   *\r\n   */\r\n  P.inverseHyperbolicTangent = P.atanh = function () {\r\n    var pr, rm, wpr, xsd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    xsd = x.sd();\r\n\r\n    if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\r\n\r\n    Ctor.precision = wpr = xsd - x.e;\r\n\r\n    x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\r\n\r\n    Ctor.precision = pr + 4;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.ln();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(0.5);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n   *\r\n   * asin(0)       = 0\r\n   * asin(-0)      = -0\r\n   * asin(1/2)     = pi/6\r\n   * asin(-1/2)    = -pi/6\r\n   * asin(1)       = pi/2\r\n   * asin(-1)      = -pi/2\r\n   * asin(|x| > 1) = NaN\r\n   * asin(NaN)     = NaN\r\n   *\r\n   * TODO? Compare performance of Taylor series.\r\n   *\r\n   */\r\n  P.inverseSine = P.asin = function () {\r\n    var halfPi, k,\r\n      pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    k = x.abs().cmp(1);\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n\r\n      // |x| is 1\r\n      if (k === 0) {\r\n        halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        halfPi.s = x.s;\r\n        return halfPi;\r\n      }\r\n\r\n      // |x| > 1 or x is NaN\r\n      return new Ctor(NaN);\r\n    }\r\n\r\n    // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n   *\r\n   * atan(0)         = 0\r\n   * atan(-0)        = -0\r\n   * atan(1)         = pi/4\r\n   * atan(-1)        = -pi/4\r\n   * atan(Infinity)  = pi/2\r\n   * atan(-Infinity) = -pi/2\r\n   * atan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.inverseTangent = P.atan = function () {\r\n    var i, j, k, n, px, t, r, wpr, x2,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (!x.isFinite()) {\r\n      if (!x.s) return new Ctor(NaN);\r\n      if (pr + 4 <= PI_PRECISION) {\r\n        r = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        r.s = x.s;\r\n        return r;\r\n      }\r\n    } else if (x.isZero()) {\r\n      return new Ctor(x);\r\n    } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\r\n      r = getPi(Ctor, pr + 4, rm).times(0.25);\r\n      r.s = x.s;\r\n      return r;\r\n    }\r\n\r\n    Ctor.precision = wpr = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\r\n\r\n    // Argument reduction\r\n    // Ensure |x| < 0.42\r\n    // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\r\n\r\n    k = Math.min(28, wpr / LOG_BASE + 2 | 0);\r\n\r\n    for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\r\n\r\n    external = false;\r\n\r\n    j = Math.ceil(wpr / LOG_BASE);\r\n    n = 1;\r\n    x2 = x.times(x);\r\n    r = new Ctor(x);\r\n    px = x;\r\n\r\n    // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n    for (; i !== -1;) {\r\n      px = px.times(x2);\r\n      t = r.minus(px.div(n += 2));\r\n\r\n      px = px.times(x2);\r\n      r = t.plus(px.div(n += 2));\r\n\r\n      if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\r\n    }\r\n\r\n    if (k) r = r.times(2 << (k - 1));\r\n\r\n    external = true;\r\n\r\n    return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n   *\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.d;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is an integer, otherwise return false.\r\n   *\r\n   */\r\n  P.isInteger = P.isInt = function () {\r\n    return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is NaN, otherwise return false.\r\n   *\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is negative, otherwise return false.\r\n   *\r\n   */\r\n  P.isNegative = P.isNeg = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is positive, otherwise return false.\r\n   *\r\n   */\r\n  P.isPositive = P.isPos = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n   *\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.d && this.d[0] === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThan = P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThanOrEqualTo = P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * If no base is specified, return log[10](arg).\r\n   *\r\n   * log[base](arg) = ln(arg) / ln(base)\r\n   *\r\n   * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n   * otherwise:\r\n   *\r\n   * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n   * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n   * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n   *\r\n   * log[-b](a)       = NaN\r\n   * log[0](a)        = NaN\r\n   * log[1](a)        = NaN\r\n   * log[NaN](a)      = NaN\r\n   * log[Infinity](a) = NaN\r\n   * log[b](0)        = -Infinity\r\n   * log[b](-0)       = -Infinity\r\n   * log[b](-a)       = NaN\r\n   * log[b](1)        = 0\r\n   * log[b](Infinity) = Infinity\r\n   * log[b](NaN)      = NaN\r\n   *\r\n   * [base] {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  P.logarithm = P.log = function (base) {\r\n    var isBase10, d, denominator, k, inf, num, sd, r,\r\n      arg = this,\r\n      Ctor = arg.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding,\r\n      guard = 5;\r\n\r\n    // Default base is 10.\r\n    if (base == null) {\r\n      base = new Ctor(10);\r\n      isBase10 = true;\r\n    } else {\r\n      base = new Ctor(base);\r\n      d = base.d;\r\n\r\n      // Return NaN if base is negative, or non-finite, or is 0 or 1.\r\n      if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\r\n\r\n      isBase10 = base.eq(10);\r\n    }\r\n\r\n    d = arg.d;\r\n\r\n    // Is arg negative, non-finite, 0 or 1?\r\n    if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\r\n      return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\r\n    }\r\n\r\n    // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\r\n    // integer power of 10.\r\n    if (isBase10) {\r\n      if (d.length > 1) {\r\n        inf = true;\r\n      } else {\r\n        for (k = d[0]; k % 10 === 0;) k /= 10;\r\n        inf = k !== 1;\r\n      }\r\n    }\r\n\r\n    external = false;\r\n    sd = pr + guard;\r\n    num = naturalLogarithm(arg, sd);\r\n    denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n\r\n    // The result will have 5 rounding digits.\r\n    r = divide(num, denominator, sd, 1);\r\n\r\n    // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n    // calculate 10 further digits.\r\n    //\r\n    // If the result is known to have an infinite decimal expansion, repeat this until it is clear\r\n    // that the result is above or below the boundary. Otherwise, if after calculating the 10\r\n    // further digits, the last 14 are nines, round up and assume the result is exact.\r\n    // Also assume the result is exact if the last 14 are zero.\r\n    //\r\n    // Example of a result that will be incorrectly rounded:\r\n    // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n    // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\r\n    // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\r\n    // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\r\n    // place is still 2.6.\r\n    if (checkRoundingDigits(r.d, k = pr, rm)) {\r\n\r\n      do {\r\n        sd += 10;\r\n        num = naturalLogarithm(arg, sd);\r\n        denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n        r = divide(num, denominator, sd, 1);\r\n\r\n        if (!inf) {\r\n\r\n          // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n          if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\r\n            r = finalise(r, pr + 1, 0);\r\n          }\r\n\r\n          break;\r\n        }\r\n      } while (checkRoundingDigits(r.d, k += 10, rm));\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.max = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'lt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.min = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'gt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return y negated if x is finite and y is ±Infinity.\r\n      else if (x.d) y.s = -y.s;\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with different signs.\r\n      // Return NaN if both are ±Infinity with the same sign.\r\n      else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n    // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.plus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return y negated if x is zero and y is non-zero.\r\n      if (yd[0]) y.s = -y.s;\r\n\r\n      // Return x if y is zero and x is non-zero.\r\n      else if (xd[0]) y = new Ctor(x);\r\n\r\n      // Return zero if both are zero.\r\n      // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\r\n      else return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    e = mathfloor(y.e / LOG_BASE);\r\n    xe = mathfloor(x.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    k = xe - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (k) {\r\n      xLTy = k < 0;\r\n\r\n      if (xLTy) {\r\n        d = xd;\r\n        k = -k;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = xe;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Numbers with massively different exponents would result in a very high number of\r\n      // zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n      // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n      if (k > i) {\r\n        k = i;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      d.reverse();\r\n      for (i = k; i--;) d.push(0);\r\n      d.reverse();\r\n\r\n    // Base 1e7 exponents equal.\r\n    } else {\r\n\r\n      // Check digits to determine which is the bigger number.\r\n\r\n      i = xd.length;\r\n      len = yd.length;\r\n      xLTy = i < len;\r\n      if (xLTy) len = i;\r\n\r\n      for (i = 0; i < len; i++) {\r\n        if (xd[i] != yd[i]) {\r\n          xLTy = xd[i] < yd[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      k = 0;\r\n    }\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      xd = yd;\r\n      yd = d;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    len = xd.length;\r\n\r\n    // Append zeros to `xd` if shorter.\r\n    // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\r\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n    // Subtract yd from xd.\r\n    for (i = yd.length; i > k;) {\r\n\r\n      if (xd[--i] < yd[i]) {\r\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n        --xd[j];\r\n        xd[i] += BASE;\r\n      }\r\n\r\n      xd[i] -= yd[i];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] === 0;) xd.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n    // Zero?\r\n    if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * The result depends on the modulo mode.\r\n   *\r\n   */\r\n  P.modulo = P.mod = function (y) {\r\n    var q,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // Return NaN if x is ±Infinity or NaN, or y is NaN or ±0.\r\n    if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\r\n\r\n    // Return x if y is ±Infinity or x is ±0.\r\n    if (!y.d || x.d && !x.d[0]) {\r\n      return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\r\n    }\r\n\r\n    // Prevent rounding of intermediate calculations.\r\n    external = false;\r\n\r\n    if (Ctor.modulo == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // result = x - q * y    where  0 <= result < abs(y)\r\n      q = divide(x, y.abs(), 0, 3, 1);\r\n      q.s *= y.s;\r\n    } else {\r\n      q = divide(x, y, 0, Ctor.modulo, 1);\r\n    }\r\n\r\n    q = q.times(y);\r\n\r\n    external = true;\r\n\r\n    return x.minus(q);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n   * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalExponential = P.exp = function () {\r\n    return naturalExponential(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalLogarithm = P.ln = function () {\r\n    return naturalLogarithm(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n   * -1.\r\n   *\r\n   */\r\n  P.negated = P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var carry, d, e, i, k, len, pr, rm, xd, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with the same sign.\r\n      // Return NaN if both are ±Infinity with different signs.\r\n      // Return y if x is finite and y is ±Infinity.\r\n      else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n     // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return x if y is zero.\r\n      // Return y if y is non-zero.\r\n      if (!yd[0]) y = new Ctor(x);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    k = mathfloor(x.e / LOG_BASE);\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    i = k - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (i) {\r\n\r\n      if (i < 0) {\r\n        d = xd;\r\n        i = -i;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = k;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n      k = Math.ceil(pr / LOG_BASE);\r\n      len = k > len ? k + 1 : len + 1;\r\n\r\n      if (i > len) {\r\n        i = len;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n      d.reverse();\r\n      for (; i--;) d.push(0);\r\n      d.reverse();\r\n    }\r\n\r\n    len = xd.length;\r\n    i = yd.length;\r\n\r\n    // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n    if (len - i < 0) {\r\n      i = len;\r\n      d = yd;\r\n      yd = xd;\r\n      xd = d;\r\n    }\r\n\r\n    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n    for (carry = 0; i;) {\r\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n      xd[i] %= BASE;\r\n    }\r\n\r\n    if (carry) {\r\n      xd.unshift(carry);\r\n      ++e;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of significant digits of the value of this Decimal.\r\n   *\r\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n   *\r\n   */\r\n  P.precision = P.sd = function (z) {\r\n    var k,\r\n      x = this;\r\n\r\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n    if (x.d) {\r\n      k = getPrecision(x.d);\r\n      if (z && x.e + 1 > k) k = x.e + 1;\r\n    } else {\r\n      k = NaN;\r\n    }\r\n\r\n    return k;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n   * rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.round = function () {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   *\r\n   * sin(0)         = 0\r\n   * sin(-0)        = -0\r\n   * sin(Infinity)  = NaN\r\n   * sin(-Infinity) = NaN\r\n   * sin(NaN)       = NaN\r\n   *\r\n   */\r\n  P.sine = P.sin = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = sine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N)  =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I)  =  I\r\n   *  sqrt(0)  =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, sd, r, rep, t,\r\n      x = this,\r\n      d = x.d,\r\n      e = x.e,\r\n      s = x.s,\r\n      Ctor = x.constructor;\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !d || !d[0]) {\r\n      return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\r\n    }\r\n\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+x);\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = digitsToString(d);\r\n\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(n);\r\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '1e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Newton-Raphson iteration.\r\n    for (;;) {\r\n      t = r;\r\n      r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * tan(0)         = 0\r\n   * tan(-0)        = -0\r\n   * tan(Infinity)  = NaN\r\n   * tan(-Infinity) = NaN\r\n   * tan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.tangent = P.tan = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.sin();\r\n    x.s = 1;\r\n    x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var carry, e, i, k, r, rL, t, xdL, ydL,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      xd = x.d,\r\n      yd = (y = new Ctor(y)).d;\r\n\r\n    y.s *= x.s;\r\n\r\n     // If either is NaN, ±Infinity or ±0...\r\n    if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n      return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\r\n\r\n        // Return NaN if either is NaN.\r\n        // Return NaN if x is ±0 and y is ±Infinity, or y is ±0 and x is ±Infinity.\r\n        ? NaN\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        // Return ±0 if either is ±0.\r\n        : !xd || !yd ? y.s / 0 : y.s * 0);\r\n    }\r\n\r\n    e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Ensure xd points to the longer array.\r\n    if (xdL < ydL) {\r\n      r = xd;\r\n      xd = yd;\r\n      yd = r;\r\n      rL = xdL;\r\n      xdL = ydL;\r\n      ydL = rL;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    r = [];\r\n    rL = xdL + ydL;\r\n    for (i = rL; i--;) r.push(0);\r\n\r\n    // Multiply!\r\n    for (i = ydL; --i >= 0;) {\r\n      carry = 0;\r\n      for (k = xdL + i; k > i;) {\r\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n        r[k--] = t % BASE | 0;\r\n        carry = t / BASE | 0;\r\n      }\r\n\r\n      r[k] = (r[k] + carry) % BASE | 0;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; !r[--rL];) r.pop();\r\n\r\n    if (carry) ++e;\r\n    else r.shift();\r\n\r\n    y.d = r;\r\n    y.e = getBase10Exponent(r, e);\r\n\r\n    return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toBinary = function (sd, rm) {\r\n    return toStringBinary(this, 2, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n   *\r\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toDecimalPlaces = P.toDP = function (dp, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n    if (dp === void 0) return x;\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    return finalise(x, dp + x.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in exponential notation rounded to\r\n   * `dp` fixed decimal places using rounding mode `rounding`.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x, true);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), dp + 1, rm);\r\n      str = finiteToString(x, true, dp + 1);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n   * omitted.\r\n   *\r\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   * (-0).toFixed(3) is '0.000'.\r\n   * (-0.5).toFixed(0) is '-0'.\r\n   *\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var str, y,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      y = finalise(new Ctor(x), dp + x.e + 1, rm);\r\n      str = finiteToString(y, false, dp + y.e + 1);\r\n    }\r\n\r\n    // To determine whether to add the minus sign look at the value before it was rounded,\r\n    // i.e. look at `x` rather than `y`.\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n   * numerator and an integer denominator.\r\n   *\r\n   * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n   * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n   * value necessary to represent the number exactly.\r\n   *\r\n   * [maxD] {number|string|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n   *\r\n   */\r\n  P.toFraction = function (maxD) {\r\n    var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\r\n      x = this,\r\n      xd = x.d,\r\n      Ctor = x.constructor;\r\n\r\n    if (!xd) return new Ctor(x);\r\n\r\n    n1 = d0 = new Ctor(1);\r\n    d1 = n0 = new Ctor(0);\r\n\r\n    d = new Ctor(d1);\r\n    e = d.e = getPrecision(xd) - x.e - 1;\r\n    k = e % LOG_BASE;\r\n    d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\r\n\r\n    if (maxD == null) {\r\n\r\n      // d is 10**e, the minimum max-denominator needed.\r\n      maxD = e > 0 ? d : n1;\r\n    } else {\r\n      n = new Ctor(maxD);\r\n      if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\r\n      maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\r\n    }\r\n\r\n    external = false;\r\n    n = new Ctor(digitsToString(xd));\r\n    pr = Ctor.precision;\r\n    Ctor.precision = e = xd.length * LOG_BASE * 2;\r\n\r\n    for (;;)  {\r\n      q = divide(n, d, 0, 1, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.cmp(maxD) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      d2 = n1;\r\n      n1 = n0.plus(q.times(d2));\r\n      n0 = d2;\r\n      d2 = d;\r\n      d = n.minus(q.times(d2));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n    r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\r\n        ? [n1, d1] : [n0, d0];\r\n\r\n    Ctor.precision = pr;\r\n    external = true;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toHexadecimal = P.toHex = function (sd, rm) {\r\n    return toStringBinary(this, 16, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\r\n   * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\r\n   *\r\n   * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n   * or `y` is NaN, in which case the return value will be also be NaN.\r\n   *\r\n   * The return value is not affected by the value of `precision`.\r\n   *\r\n   * y {number|string|Decimal} The magnitude to round to a multiple of.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toNearest() rounding mode not an integer: {rm}'\r\n   * 'toNearest() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toNearest = function (y, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (y == null) {\r\n\r\n      // If x is not finite, return x.\r\n      if (!x.d) return x;\r\n\r\n      y = new Ctor(1);\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      y = new Ctor(y);\r\n      if (rm === void 0) {\r\n        rm = Ctor.rounding;\r\n      } else {\r\n        checkInt32(rm, 0, 8);\r\n      }\r\n\r\n      // If x is not finite, return x if y is not NaN, else NaN.\r\n      if (!x.d) return y.s ? x : y;\r\n\r\n      // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\r\n      if (!y.d) {\r\n        if (y.s) y.s = x.s;\r\n        return y;\r\n      }\r\n    }\r\n\r\n    // If y is not zero, calculate the nearest multiple of y to x.\r\n    if (y.d[0]) {\r\n      external = false;\r\n      x = divide(x, y, 0, rm, 1).times(y);\r\n      external = true;\r\n      finalise(x);\r\n\r\n    // If y is zero, return zero with the sign of x.\r\n    } else {\r\n      y.s = x.s;\r\n      x = y;\r\n    }\r\n\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Decimal converted to a number primitive.\r\n   * Zero keeps its sign.\r\n   *\r\n   */\r\n  P.toNumber = function () {\r\n    return +this;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toOctal = function (sd, rm) {\r\n    return toStringBinary(this, 8, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n   * to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * ECMAScript compliant.\r\n   *\r\n   *   pow(x, NaN)                           = NaN\r\n   *   pow(x, ±0)                            = 1\r\n\r\n   *   pow(NaN, non-zero)                    = NaN\r\n   *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n   *   pow(abs(x) > 1, -Infinity)            = +0\r\n   *   pow(abs(x) == 1, ±Infinity)           = NaN\r\n   *   pow(abs(x) < 1, +Infinity)            = +0\r\n   *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n   *   pow(+Infinity, y > 0)                 = +Infinity\r\n   *   pow(+Infinity, y < 0)                 = +0\r\n   *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n   *   pow(-Infinity, even integer > 0)      = +Infinity\r\n   *   pow(-Infinity, odd integer < 0)       = -0\r\n   *   pow(-Infinity, even integer < 0)      = +0\r\n   *   pow(+0, y > 0)                        = +0\r\n   *   pow(+0, y < 0)                        = +Infinity\r\n   *   pow(-0, odd integer > 0)              = -0\r\n   *   pow(-0, even integer > 0)             = +0\r\n   *   pow(-0, odd integer < 0)              = -Infinity\r\n   *   pow(-0, even integer < 0)             = +Infinity\r\n   *   pow(finite x < 0, finite non-integer) = NaN\r\n   *\r\n   * For non-integer or very large exponents pow(x, y) is calculated using\r\n   *\r\n   *   x^y = exp(y*ln(x))\r\n   *\r\n   * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n   * probability of an incorrectly rounded result\r\n   * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n   * i.e. 1 in 250,000,000,000,000\r\n   *\r\n   * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n   *\r\n   * y {number|string|Decimal} The power to which to raise this Decimal.\r\n   *\r\n   */\r\n  P.toPower = P.pow = function (y) {\r\n    var e, k, pr, r, rm, s,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      yn = +(y = new Ctor(y));\r\n\r\n    // Either ±Infinity, NaN or ±0?\r\n    if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (x.eq(1)) return x;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (y.eq(1)) return finalise(x, pr, rm);\r\n\r\n    // y exponent\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n    if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n      r = intPow(Ctor, x, k, pr);\r\n      return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\r\n    }\r\n\r\n    s = x.s;\r\n\r\n    // if x is negative\r\n    if (s < 0) {\r\n\r\n      // if y is not an integer\r\n      if (e < y.d.length - 1) return new Ctor(NaN);\r\n\r\n      // Result is positive if x is negative and the last digit of integer y is even.\r\n      if ((y.d[e] & 1) == 0) s = 1;\r\n\r\n      // if x.eq(-1)\r\n      if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\r\n        x.s = s;\r\n        return x;\r\n      }\r\n    }\r\n\r\n    // Estimate result exponent.\r\n    // x^y = 10^e,  where e = y * log10(x)\r\n    // log10(x) = log10(x_significand) + x_exponent\r\n    // log10(x_significand) = ln(x_significand) / ln(10)\r\n    k = mathpow(+x, yn);\r\n    e = k == 0 || !isFinite(k)\r\n      ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\r\n      : new Ctor(k + '').e;\r\n\r\n    // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\r\n\r\n    // Overflow/underflow?\r\n    if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\r\n\r\n    external = false;\r\n    Ctor.rounding = x.s = 1;\r\n\r\n    // Estimate the extra guard digits needed to ensure five correct rounding digits from\r\n    // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\r\n    // new Decimal(2.32456).pow('2087987436534566.46411')\r\n    // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n    k = Math.min(12, (e + '').length);\r\n\r\n    // r = x^y = exp(y*ln(x))\r\n    r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\r\n\r\n    // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\r\n    if (r.d) {\r\n\r\n      // Truncate to the required precision plus five rounding digits.\r\n      r = finalise(r, pr + 5, 1);\r\n\r\n      // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\r\n      // the result.\r\n      if (checkRoundingDigits(r.d, pr, rm)) {\r\n        e = pr + 10;\r\n\r\n        // Truncate to the increased precision plus five rounding digits.\r\n        r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\r\n\r\n        // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\r\n        if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\r\n          r = finalise(r, pr + 1, 0);\r\n        }\r\n      }\r\n    }\r\n\r\n    r.s = s;\r\n    external = true;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), sd, rm);\r\n      str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n   * omitted.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toSD() digits out of range: {sd}'\r\n   * 'toSD() digits not an integer: {sd}'\r\n   * 'toSD() rounding mode not an integer: {rm}'\r\n   * 'toSD() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toSignificantDigits = P.toSD = function (sd, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    return finalise(new Ctor(x), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   *\r\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n   *\r\n   */\r\n  P.toString = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n   *\r\n   */\r\n  P.truncated = P.trunc = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   * Unlike `toString`, negative zero will include the minus sign.\r\n   *\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n  // Add aliases to match BigDecimal method names.\r\n  // P.add = P.plus;\r\n  P.subtract = P.minus;\r\n  P.multiply = P.times;\r\n  P.divide = P.div;\r\n  P.remainder = P.mod;\r\n  P.compareTo = P.cmp;\r\n  P.negate = P.neg;\r\n   */\r\n\r\n\r\n  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n  /*\r\n   *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\r\n   *                           finiteToString, naturalExponential, naturalLogarithm\r\n   *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n   *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n   *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n   *  convertBase              toStringBinary, parseOther\r\n   *  cos                      P.cos\r\n   *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n   *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n   *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n   *                           taylorSeries, atan2, parseOther\r\n   *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n   *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n   *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n   *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n   *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n   *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n   *                           naturalLogarithm, ceil, floor, round, trunc\r\n   *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n   *                           toStringBinary\r\n   *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n   *  getLn10                  P.logarithm, naturalLogarithm\r\n   *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n   *  getPrecision             P.precision, P.toFraction\r\n   *  getZeroString            digitsToString, finiteToString\r\n   *  intPow                   P.toPower, parseOther\r\n   *  isOdd                    toLessThanHalfPi\r\n   *  maxOrMin                 max, min\r\n   *  naturalExponential       P.naturalExponential, P.toPower\r\n   *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n   *                           P.toPower, naturalExponential\r\n   *  nonFiniteToString        finiteToString, toStringBinary\r\n   *  parseDecimal             Decimal\r\n   *  parseOther               Decimal\r\n   *  sin                      P.sin\r\n   *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n   *  toLessThanHalfPi         P.cos, P.sin\r\n   *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n   *  truncate                 intPow\r\n   *\r\n   *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n   *                           naturalLogarithm, config, parseOther, random, Decimal\r\n   */\r\n\r\n\r\n  function digitsToString(d) {\r\n    var i, k, ws,\r\n      indexOfLastWord = d.length - 1,\r\n      str = '',\r\n      w = d[0];\r\n\r\n    if (indexOfLastWord > 0) {\r\n      str += w;\r\n      for (i = 1; i < indexOfLastWord; i++) {\r\n        ws = d[i] + '';\r\n        k = LOG_BASE - ws.length;\r\n        if (k) str += getZeroString(k);\r\n        str += ws;\r\n      }\r\n\r\n      w = d[i];\r\n      ws = w + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n    } else if (w === 0) {\r\n      return '0';\r\n    }\r\n\r\n    // Remove trailing zeros of last w.\r\n    for (; w % 10 === 0;) w /= 10;\r\n\r\n    return str + w;\r\n  }\r\n\r\n\r\n  function checkInt32(i, min, max) {\r\n    if (i !== ~~i || i < min || i > max) {\r\n      throw Error(invalidArgument + i);\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n   * `repeating == null` if caller is `log` or `pow`,\r\n   * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n   */\r\n  function checkRoundingDigits(d, i, rm, repeating) {\r\n    var di, k, r, rd;\r\n\r\n    // Get the length of the first word of the array d.\r\n    for (k = d[0]; k >= 10; k /= 10) --i;\r\n\r\n    // Is the rounding digit in the first word of d?\r\n    if (--i < 0) {\r\n      i += LOG_BASE;\r\n      di = 0;\r\n    } else {\r\n      di = Math.ceil((i + 1) / LOG_BASE);\r\n      i %= LOG_BASE;\r\n    }\r\n\r\n    // i is the index (0 - 6) of the rounding digit.\r\n    // E.g. if within the word 3487563 the first rounding digit is 5,\r\n    // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\r\n    k = mathpow(10, LOG_BASE - i);\r\n    rd = d[di] % k | 0;\r\n\r\n    if (repeating == null) {\r\n      if (i < 3) {\r\n        if (i == 0) rd = rd / 100 | 0;\r\n        else if (i == 1) rd = rd / 10 | 0;\r\n        r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n      } else {\r\n        r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\r\n            (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\r\n      }\r\n    } else {\r\n      if (i < 4) {\r\n        if (i == 0) rd = rd / 1000 | 0;\r\n        else if (i == 1) rd = rd / 100 | 0;\r\n        else if (i == 2) rd = rd / 10 | 0;\r\n        r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n      } else {\r\n        r = ((repeating || rm < 4) && rd + 1 == k ||\r\n        (!repeating && rm > 3) && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  // Convert string of `baseIn` to an array of numbers of `baseOut`.\r\n  // Eg. convertBase('255', 10, 16) returns [15, 15].\r\n  // Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\n  function convertBase(str, baseIn, baseOut) {\r\n    var j,\r\n      arr = [0],\r\n      arrL,\r\n      i = 0,\r\n      strL = str.length;\r\n\r\n    for (; i < strL;) {\r\n      for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\r\n      arr[0] += NUMERALS.indexOf(str.charAt(i++));\r\n      for (j = 0; j < arr.length; j++) {\r\n        if (arr[j] > baseOut - 1) {\r\n          if (arr[j + 1] === void 0) arr[j + 1] = 0;\r\n          arr[j + 1] += arr[j] / baseOut | 0;\r\n          arr[j] %= baseOut;\r\n        }\r\n      }\r\n    }\r\n\r\n    return arr.reverse();\r\n  }\r\n\r\n\r\n  /*\r\n   * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function cosine(Ctor, x) {\r\n    var k, y,\r\n      len = x.d.length;\r\n\r\n    // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\r\n    // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      y = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      y = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    Ctor.precision += k;\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\r\n\r\n    // Reverse argument reduction\r\n    for (var i = k; i--;) {\r\n      var cos2x = x.times(x);\r\n      x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\r\n    }\r\n\r\n    Ctor.precision -= k;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Perform division in the specified base.\r\n   */\r\n  var divide = (function () {\r\n\r\n    // Assumes non-zero x and k, and hence non-zero result.\r\n    function multiplyInteger(x, k, base) {\r\n      var temp,\r\n        carry = 0,\r\n        i = x.length;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        temp = x[i] * k + carry;\r\n        x[i] = temp % base | 0;\r\n        carry = temp / base | 0;\r\n      }\r\n\r\n      if (carry) x.unshift(carry);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, r;\r\n\r\n      if (aL != bL) {\r\n        r = aL > bL ? 1 : -1;\r\n      } else {\r\n        for (i = r = 0; i < aL; i++) {\r\n          if (a[i] != b[i]) {\r\n            r = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return r;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1;) a.shift();\r\n    }\r\n\r\n    return function (x, y, pr, rm, dp, base) {\r\n      var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\r\n        yL, yz,\r\n        Ctor = x.constructor,\r\n        sign = x.s == y.s ? 1 : -1,\r\n        xd = x.d,\r\n        yd = y.d;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n        return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\r\n          !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\r\n\r\n          // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.\r\n          xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\r\n      }\r\n\r\n      if (base) {\r\n        logBase = 1;\r\n        e = x.e - y.e;\r\n      } else {\r\n        base = BASE;\r\n        logBase = LOG_BASE;\r\n        e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\r\n      }\r\n\r\n      yL = yd.length;\r\n      xL = xd.length;\r\n      q = new Ctor(sign);\r\n      qd = q.d = [];\r\n\r\n      // Result exponent may be one less than e.\r\n      // The digit array of a Decimal from toStringBinary may have trailing zeros.\r\n      for (i = 0; yd[i] == (xd[i] || 0); i++);\r\n\r\n      if (yd[i] > (xd[i] || 0)) e--;\r\n\r\n      if (pr == null) {\r\n        sd = pr = Ctor.precision;\r\n        rm = Ctor.rounding;\r\n      } else if (dp) {\r\n        sd = pr + (x.e - y.e) + 1;\r\n      } else {\r\n        sd = pr;\r\n      }\r\n\r\n      if (sd < 0) {\r\n        qd.push(1);\r\n        more = true;\r\n      } else {\r\n\r\n        // Convert precision in number of base 10 digits to base 1e7 digits.\r\n        sd = sd / logBase + 2 | 0;\r\n        i = 0;\r\n\r\n        // divisor < 1e7\r\n        if (yL == 1) {\r\n          k = 0;\r\n          yd = yd[0];\r\n          sd++;\r\n\r\n          // k is the carry.\r\n          for (; (i < xL || k) && sd--; i++) {\r\n            t = k * base + (xd[i] || 0);\r\n            qd[i] = t / yd | 0;\r\n            k = t % yd | 0;\r\n          }\r\n\r\n          more = k || i < xL;\r\n\r\n        // divisor >= 1e7\r\n        } else {\r\n\r\n          // Normalise xd and yd so highest order digit of yd is >= base/2\r\n          k = base / (yd[0] + 1) | 0;\r\n\r\n          if (k > 1) {\r\n            yd = multiplyInteger(yd, k, base);\r\n            xd = multiplyInteger(xd, k, base);\r\n            yL = yd.length;\r\n            xL = xd.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xd.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL;) rem[remL++] = 0;\r\n\r\n          yz = yd.slice();\r\n          yz.unshift(0);\r\n          yd0 = yd[0];\r\n\r\n          if (yd[1] >= base / 2) ++yd0;\r\n\r\n          do {\r\n            k = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yd, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, k.\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // k will be how many times the divisor goes into the current remainder.\r\n              k = rem0 / yd0 | 0;\r\n\r\n              //  Algorithm:\r\n              //  1. product = divisor * trial digit (k)\r\n              //  2. if product > remainder: product -= divisor, k--\r\n              //  3. remainder -= product\r\n              //  4. if product was < remainder at 2:\r\n              //    5. compare new remainder and divisor\r\n              //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n              if (k > 1) {\r\n                if (k >= base) k = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiplyInteger(yd, k, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                cmp = compare(prod, rem, prodL, remL);\r\n\r\n                // product > remainder.\r\n                if (cmp == 1) {\r\n                  k--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yd, prodL, base);\r\n                }\r\n              } else {\r\n\r\n                // cmp is -1.\r\n                // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n                // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n                if (k == 0) cmp = k = 1;\r\n                prod = yd.slice();\r\n              }\r\n\r\n              prodL = prod.length;\r\n              if (prodL < remL) prod.unshift(0);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n\r\n              // If product was < previous remainder.\r\n              if (cmp == -1) {\r\n                remL = rem.length;\r\n\r\n                // Compare divisor and new remainder.\r\n                cmp = compare(yd, rem, yL, remL);\r\n\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                if (cmp < 1) {\r\n                  k++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yd, remL, base);\r\n                }\r\n              }\r\n\r\n              remL = rem.length;\r\n            } else if (cmp === 0) {\r\n              k++;\r\n              rem = [0];\r\n            }    // if cmp === 1, k will be 0\r\n\r\n            // Add the next digit, k, to the result array.\r\n            qd[i++] = k;\r\n\r\n            // Update the remainder.\r\n            if (cmp && rem[0]) {\r\n              rem[remL++] = xd[xi] || 0;\r\n            } else {\r\n              rem = [xd[xi]];\r\n              remL = 1;\r\n            }\r\n\r\n          } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n\r\n          more = rem[0] !== void 0;\r\n        }\r\n\r\n        // Leading zero?\r\n        if (!qd[0]) qd.shift();\r\n      }\r\n\r\n      // logBase is 1 when divide is being used for base conversion.\r\n      if (logBase == 1) {\r\n        q.e = e;\r\n        inexact = more;\r\n      } else {\r\n\r\n        // To calculate q.e, first get the number of digits of qd[0].\r\n        for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\r\n        q.e = i + e * logBase - 1;\r\n\r\n        finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n   * Check for over/under-flow.\r\n   */\r\n   function finalise(x, sd, rm, isTruncated) {\r\n    var digits, i, j, k, rd, roundUp, w, xd, xdi,\r\n      Ctor = x.constructor;\r\n\r\n    // Don't round if sd is null or undefined.\r\n    out: if (sd != null) {\r\n      xd = x.d;\r\n\r\n      // Infinity/NaN.\r\n      if (!xd) return x;\r\n\r\n      // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // w: the word of xd containing rd, a base 1e7 number.\r\n      // xdi: the index of w within xd.\r\n      // digits: the number of digits of w.\r\n      // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n      // they had leading zeros)\r\n      // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n      // Get the length of the first word of the digits array xd.\r\n      for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\r\n      i = sd - digits;\r\n\r\n      // Is the rounding digit in the first word of xd?\r\n      if (i < 0) {\r\n        i += LOG_BASE;\r\n        j = sd;\r\n        w = xd[xdi = 0];\r\n\r\n        // Get the rounding digit at index j of w.\r\n        rd = w / mathpow(10, digits - j - 1) % 10 | 0;\r\n      } else {\r\n        xdi = Math.ceil((i + 1) / LOG_BASE);\r\n        k = xd.length;\r\n        if (xdi >= k) {\r\n          if (isTruncated) {\r\n\r\n            // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\r\n            for (; k++ <= xdi;) xd.push(0);\r\n            w = rd = 0;\r\n            digits = 1;\r\n            i %= LOG_BASE;\r\n            j = i - LOG_BASE + 1;\r\n          } else {\r\n            break out;\r\n          }\r\n        } else {\r\n          w = k = xd[xdi];\r\n\r\n          // Get the number of digits of w.\r\n          for (digits = 1; k >= 10; k /= 10) digits++;\r\n\r\n          // Get the index of rd within w.\r\n          i %= LOG_BASE;\r\n\r\n          // Get the index of rd within w, adjusted for leading zeros.\r\n          // The number of leading zeros of w is given by LOG_BASE - digits.\r\n          j = i - LOG_BASE + digits;\r\n\r\n          // Get the rounding digit at index j of w.\r\n          rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\r\n        }\r\n      }\r\n\r\n      // Are there any non-zero digits after the rounding digit?\r\n      isTruncated = isTruncated || sd < 0 ||\r\n        xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\r\n\r\n      // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\r\n      // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\r\n      // will give 714.\r\n\r\n      roundUp = rm < 4\r\n        ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n        : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n            rm == (x.s < 0 ? 8 : 7));\r\n\r\n      if (sd < 1 || !xd[0]) {\r\n        xd.length = 0;\r\n        if (roundUp) {\r\n\r\n          // Convert sd to decimal places.\r\n          sd -= x.e + 1;\r\n\r\n          // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n          xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n          x.e = -sd || 0;\r\n        } else {\r\n\r\n          // Zero.\r\n          xd[0] = x.e = 0;\r\n        }\r\n\r\n        return x;\r\n      }\r\n\r\n      // Remove excess digits.\r\n      if (i == 0) {\r\n        xd.length = xdi;\r\n        k = 1;\r\n        xdi--;\r\n      } else {\r\n        xd.length = xdi + 1;\r\n        k = mathpow(10, LOG_BASE - i);\r\n\r\n        // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n        // j > 0 means i > number of leading zeros of w.\r\n        xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\r\n      }\r\n\r\n      if (roundUp) {\r\n        for (;;) {\r\n\r\n          // Is the digit to be rounded up in the first word of xd?\r\n          if (xdi == 0) {\r\n\r\n            // i will be the length of xd[0] before k is added.\r\n            for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\r\n            j = xd[0] += k;\r\n            for (k = 1; j >= 10; j /= 10) k++;\r\n\r\n            // if i != k the length has increased.\r\n            if (i != k) {\r\n              x.e++;\r\n              if (xd[0] == BASE) xd[0] = 1;\r\n            }\r\n\r\n            break;\r\n          } else {\r\n            xd[xdi] += k;\r\n            if (xd[xdi] != BASE) break;\r\n            xd[xdi--] = 0;\r\n            k = 1;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n    }\r\n\r\n    if (external) {\r\n\r\n      // Overflow?\r\n      if (x.e > Ctor.maxE) {\r\n\r\n        // Infinity.\r\n        x.d = null;\r\n        x.e = NaN;\r\n\r\n      // Underflow?\r\n      } else if (x.e < Ctor.minE) {\r\n\r\n        // Zero.\r\n        x.e = 0;\r\n        x.d = [0];\r\n        // Ctor.underflow = true;\r\n      } // else Ctor.underflow = false;\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function finiteToString(x, isExp, sd) {\r\n    if (!x.isFinite()) return nonFiniteToString(x);\r\n    var k,\r\n      e = x.e,\r\n      str = digitsToString(x.d),\r\n      len = str.length;\r\n\r\n    if (isExp) {\r\n      if (sd && (k = sd - len) > 0) {\r\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n      } else if (len > 1) {\r\n        str = str.charAt(0) + '.' + str.slice(1);\r\n      }\r\n\r\n      str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\r\n    } else if (e < 0) {\r\n      str = '0.' + getZeroString(-e - 1) + str;\r\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n    } else if (e >= len) {\r\n      str += getZeroString(e + 1 - len);\r\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n    } else {\r\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n      if (sd && (k = sd - len) > 0) {\r\n        if (e + 1 === len) str += '.';\r\n        str += getZeroString(k);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // Calculate the base 10 exponent from the base 1e7 exponent.\r\n  function getBase10Exponent(digits, e) {\r\n    var w = digits[0];\r\n\r\n    // Add the number of digits of the first word of the digits array.\r\n    for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\r\n    return e;\r\n  }\r\n\r\n\r\n  function getLn10(Ctor, sd, pr) {\r\n    if (sd > LN10_PRECISION) {\r\n\r\n      // Reset global state in case the exception is caught.\r\n      external = true;\r\n      if (pr) Ctor.precision = pr;\r\n      throw Error(precisionLimitExceeded);\r\n    }\r\n    return finalise(new Ctor(LN10), sd, 1, true);\r\n  }\r\n\r\n\r\n  function getPi(Ctor, sd, rm) {\r\n    if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\r\n    return finalise(new Ctor(PI), sd, rm, true);\r\n  }\r\n\r\n\r\n  function getPrecision(digits) {\r\n    var w = digits.length - 1,\r\n      len = w * LOG_BASE + 1;\r\n\r\n    w = digits[w];\r\n\r\n    // If non-zero...\r\n    if (w) {\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      for (; w % 10 == 0; w /= 10) len--;\r\n\r\n      // Add the number of digits of the first word.\r\n      for (w = digits[0]; w >= 10; w /= 10) len++;\r\n    }\r\n\r\n    return len;\r\n  }\r\n\r\n\r\n  function getZeroString(k) {\r\n    var zs = '';\r\n    for (; k--;) zs += '0';\r\n    return zs;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n   * integer of type number.\r\n   *\r\n   * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n   *\r\n   */\r\n  function intPow(Ctor, x, n, pr) {\r\n    var isTruncated,\r\n      r = new Ctor(1),\r\n\r\n      // Max n of 9007199254740991 takes 53 loop iterations.\r\n      // Maximum digits array length; leaves [28, 34] guard digits.\r\n      k = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n    external = false;\r\n\r\n    for (;;) {\r\n      if (n % 2) {\r\n        r = r.times(x);\r\n        if (truncate(r.d, k)) isTruncated = true;\r\n      }\r\n\r\n      n = mathfloor(n / 2);\r\n      if (n === 0) {\r\n\r\n        // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\r\n        n = r.d.length - 1;\r\n        if (isTruncated && r.d[n] === 0) ++r.d[n];\r\n        break;\r\n      }\r\n\r\n      x = x.times(x);\r\n      truncate(x.d, k);\r\n    }\r\n\r\n    external = true;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  function isOdd(n) {\r\n    return n.d[n.d.length - 1] & 1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Handle `max` and `min`. `ltgt` is 'lt' or 'gt'.\r\n   */\r\n  function maxOrMin(Ctor, args, ltgt) {\r\n    var y,\r\n      x = new Ctor(args[0]),\r\n      i = 0;\r\n\r\n    for (; ++i < args.length;) {\r\n      y = new Ctor(args[i]);\r\n      if (!y.s) {\r\n        x = y;\r\n        break;\r\n      } else if (x[ltgt](y)) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   * Taylor/Maclaurin series.\r\n   *\r\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n   *\r\n   * Argument reduction:\r\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n   *   exp(x) = exp(x / 2^k)^(2^k)\r\n   *\r\n   * Previously, the argument was initially reduced by\r\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n   * found to be slower than just dividing repeatedly by 32 as above.\r\n   *\r\n   * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n   * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n   *\r\n   *  exp(Infinity)  = Infinity\r\n   *  exp(-Infinity) = 0\r\n   *  exp(NaN)       = NaN\r\n   *  exp(±0)        = 1\r\n   *\r\n   *  exp(x) is non-terminating for any finite, non-zero x.\r\n   *\r\n   *  The result will always be correctly rounded.\r\n   *\r\n   */\r\n  function naturalExponential(x, sd) {\r\n    var denominator, guard, j, pow, sum, t, wpr,\r\n      rep = 0,\r\n      i = 0,\r\n      k = 0,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // 0/NaN/Infinity?\r\n    if (!x.d || !x.d[0] || x.e > 17) {\r\n\r\n      return new Ctor(x.d\r\n        ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\r\n        : x.s ? x.s < 0 ? 0 : x : 0 / 0);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    t = new Ctor(0.03125);\r\n\r\n    // while abs(x) >= 0.1\r\n    while (x.e > -2) {\r\n\r\n      // x = x / 2^5\r\n      x = x.times(t);\r\n      k += 5;\r\n    }\r\n\r\n    // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\r\n    // necessary to ensure the first 4 rounding digits are correct.\r\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n    wpr += guard;\r\n    denominator = pow = sum = new Ctor(1);\r\n    Ctor.precision = wpr;\r\n\r\n    for (;;) {\r\n      pow = finalise(pow.times(x), wpr, 1);\r\n      denominator = denominator.times(++i);\r\n      t = sum.plus(divide(pow, denominator, wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        j = k;\r\n        while (j--) sum = finalise(sum.times(sum), wpr, 1);\r\n\r\n        // Check to see if the first 4 rounding digits are [49]999.\r\n        // If so, repeat the summation with a higher precision, otherwise\r\n        // e.g. with precision: 18, rounding: 1\r\n        // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n\r\n          if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += 10;\r\n            denominator = pow = t = new Ctor(1);\r\n            i = 0;\r\n            rep++;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   *  ln(-n)        = NaN\r\n   *  ln(0)         = -Infinity\r\n   *  ln(-0)        = -Infinity\r\n   *  ln(1)         = 0\r\n   *  ln(Infinity)  = Infinity\r\n   *  ln(-Infinity) = NaN\r\n   *  ln(NaN)       = NaN\r\n   *\r\n   *  ln(n) (n != 1) is non-terminating.\r\n   *\r\n   */\r\n  function naturalLogarithm(y, sd) {\r\n    var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\r\n      n = 1,\r\n      guard = 10,\r\n      x = y,\r\n      xd = x.d,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // Is x negative or Infinity, NaN, 0 or 1?\r\n    if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\r\n      return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    Ctor.precision = wpr += guard;\r\n    c = digitsToString(xd);\r\n    c0 = c.charAt(0);\r\n\r\n    if (Math.abs(e = x.e) < 1.5e15) {\r\n\r\n      // Argument reduction.\r\n      // The series converges faster the closer the argument is to 1, so using\r\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n      // later be divided by this number, then separate out the power of 10 using\r\n      // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n      // max n is 6 (gives 0.7 - 1.3)\r\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n        x = x.times(y);\r\n        c = digitsToString(x.d);\r\n        c0 = c.charAt(0);\r\n        n++;\r\n      }\r\n\r\n      e = x.e;\r\n\r\n      if (c0 > 1) {\r\n        x = new Ctor('0.' + c);\r\n        e++;\r\n      } else {\r\n        x = new Ctor(c0 + '.' + c.slice(1));\r\n      }\r\n    } else {\r\n\r\n      // The argument reduction method above may result in overflow if the argument y is a massive\r\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n      x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n      Ctor.precision = pr;\r\n\r\n      return sd == null ? finalise(x, pr, rm, external = true) : x;\r\n    }\r\n\r\n    // x1 is x reduced to a value near 1.\r\n    x1 = x;\r\n\r\n    // Taylor series.\r\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n    sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\r\n    x2 = finalise(x.times(x), wpr, 1);\r\n    denominator = 3;\r\n\r\n    for (;;) {\r\n      numerator = finalise(numerator.times(x2), wpr, 1);\r\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        sum = sum.times(2);\r\n\r\n        // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\r\n        // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\r\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n        sum = divide(sum, new Ctor(n), wpr, 1);\r\n\r\n        // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n        // been repeated previously) and the first 4 rounding digits 9999?\r\n        // If so, restart the summation with a higher precision, otherwise\r\n        // e.g. with precision: 12, rounding: 1\r\n        // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n          if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += guard;\r\n            t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\r\n            x2 = finalise(x.times(x), wpr, 1);\r\n            denominator = rep = 1;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n      denominator += 2;\r\n    }\r\n  }\r\n\r\n\r\n  // ±Infinity, NaN.\r\n  function nonFiniteToString(x) {\r\n    // Unsigned.\r\n    return String(x.s * x.s / 0);\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from string `str`.\r\n   */\r\n  function parseDecimal(x, str) {\r\n    var e, i, len;\r\n\r\n    // Decimal point?\r\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = str.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +str.slice(i + 1);\r\n      str = str.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\r\n    str = str.slice(i, len);\r\n\r\n    if (str) {\r\n      len -= i;\r\n      x.e = e = e - i - 1;\r\n      x.d = [];\r\n\r\n      // Transform base\r\n\r\n      // e is the base 10 exponent.\r\n      // i is where to slice str to get the first word of the digits array.\r\n      i = (e + 1) % LOG_BASE;\r\n      if (e < 0) i += LOG_BASE;\r\n\r\n      if (i < len) {\r\n        if (i) x.d.push(+str.slice(0, i));\r\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n        str = str.slice(i);\r\n        i = LOG_BASE - str.length;\r\n      } else {\r\n        i -= len;\r\n      }\r\n\r\n      for (; i--;) str += '0';\r\n      x.d.push(+str);\r\n\r\n      if (external) {\r\n\r\n        // Overflow?\r\n        if (x.e > x.constructor.maxE) {\r\n\r\n          // Infinity.\r\n          x.d = null;\r\n          x.e = NaN;\r\n\r\n        // Underflow?\r\n        } else if (x.e < x.constructor.minE) {\r\n\r\n          // Zero.\r\n          x.e = 0;\r\n          x.d = [0];\r\n          // x.constructor.underflow = true;\r\n        } // else x.constructor.underflow = false;\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.e = 0;\r\n      x.d = [0];\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n   */\r\n  function parseOther(x, str) {\r\n    var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\r\n\r\n    if (str === 'Infinity' || str === 'NaN') {\r\n      if (!+str) x.s = NaN;\r\n      x.e = NaN;\r\n      x.d = null;\r\n      return x;\r\n    }\r\n\r\n    if (isHex.test(str))  {\r\n      base = 16;\r\n      str = str.toLowerCase();\r\n    } else if (isBinary.test(str))  {\r\n      base = 2;\r\n    } else if (isOctal.test(str))  {\r\n      base = 8;\r\n    } else {\r\n      throw Error(invalidArgument + str);\r\n    }\r\n\r\n    // Is there a binary exponent part?\r\n    i = str.search(/p/i);\r\n\r\n    if (i > 0) {\r\n      p = +str.slice(i + 1);\r\n      str = str.substring(2, i);\r\n    } else {\r\n      str = str.slice(2);\r\n    }\r\n\r\n    // Convert `str` as an integer then divide the result by `base` raised to a power such that the\r\n    // fraction part will be restored.\r\n    i = str.indexOf('.');\r\n    isFloat = i >= 0;\r\n    Ctor = x.constructor;\r\n\r\n    if (isFloat) {\r\n      str = str.replace('.', '');\r\n      len = str.length;\r\n      i = len - i;\r\n\r\n      // log[10](16) = 1.2041... , log[10](88) = 1.9444....\r\n      divisor = intPow(Ctor, new Ctor(base), i, i * 2);\r\n    }\r\n\r\n    xd = convertBase(str, base, BASE);\r\n    xe = xd.length - 1;\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xe; xd[i] === 0; --i) xd.pop();\r\n    if (i < 0) return new Ctor(x.s * 0);\r\n    x.e = getBase10Exponent(xd, xe);\r\n    x.d = xd;\r\n    external = false;\r\n\r\n    // At what precision to perform the division to ensure exact conversion?\r\n    // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\r\n    // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\r\n    // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\r\n    // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\r\n    // Therefore using 4 * the number of digits of str will always be enough.\r\n    if (isFloat) x = divide(x, divisor, len * 4);\r\n\r\n    // Multiply by the binary exponent part if present.\r\n    if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\r\n    external = true;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function sine(Ctor, x) {\r\n    var k,\r\n      len = x.d.length;\r\n\r\n    if (len < 3) return taylorSeries(Ctor, 2, x, x);\r\n\r\n    // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\r\n    // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\r\n    // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    k = 1.4 * Math.sqrt(len);\r\n    k = k > 16 ? 16 : k | 0;\r\n\r\n    x = x.times(1 / tinyPow(5, k));\r\n    x = taylorSeries(Ctor, 2, x, x);\r\n\r\n    // Reverse argument reduction\r\n    var sin2_x,\r\n      d5 = new Ctor(5),\r\n      d16 = new Ctor(16),\r\n      d20 = new Ctor(20);\r\n    for (; k--;) {\r\n      sin2_x = x.times(x);\r\n      x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  // Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\r\n  function taylorSeries(Ctor, n, x, y, isHyperbolic) {\r\n    var j, t, u, x2,\r\n      i = 1,\r\n      pr = Ctor.precision,\r\n      k = Math.ceil(pr / LOG_BASE);\r\n\r\n    external = false;\r\n    x2 = x.times(x);\r\n    u = new Ctor(y);\r\n\r\n    for (;;) {\r\n      t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      u = isHyperbolic ? y.plus(t) : y.minus(t);\r\n      y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      t = u.plus(y);\r\n\r\n      if (t.d[k] !== void 0) {\r\n        for (j = k; t.d[j] === u.d[j] && j--;);\r\n        if (j == -1) break;\r\n      }\r\n\r\n      j = u;\r\n      u = y;\r\n      y = t;\r\n      t = j;\r\n      i++;\r\n    }\r\n\r\n    external = true;\r\n    t.d.length = k + 1;\r\n\r\n    return t;\r\n  }\r\n\r\n\r\n  // Exponent e must be positive and non-zero.\r\n  function tinyPow(b, e) {\r\n    var n = b;\r\n    while (--e) n *= b;\r\n    return n;\r\n  }\r\n\r\n\r\n  // Return the absolute value of `x` reduced to less than or equal to half pi.\r\n  function toLessThanHalfPi(Ctor, x) {\r\n    var t,\r\n      isNeg = x.s < 0,\r\n      pi = getPi(Ctor, Ctor.precision, 1),\r\n      halfPi = pi.times(0.5);\r\n\r\n    x = x.abs();\r\n\r\n    if (x.lte(halfPi)) {\r\n      quadrant = isNeg ? 4 : 1;\r\n      return x;\r\n    }\r\n\r\n    t = x.divToInt(pi);\r\n\r\n    if (t.isZero()) {\r\n      quadrant = isNeg ? 3 : 2;\r\n    } else {\r\n      x = x.minus(t.times(pi));\r\n\r\n      // 0 <= x < pi\r\n      if (x.lte(halfPi)) {\r\n        quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\r\n        return x;\r\n      }\r\n\r\n      quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\r\n    }\r\n\r\n    return x.minus(pi).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return the value of Decimal `x` as a string in base `baseOut`.\r\n   *\r\n   * If the optional `sd` argument is present include a binary exponent suffix.\r\n   */\r\n  function toStringBinary(x, baseOut, sd, rm) {\r\n    var base, e, i, k, len, roundUp, str, xd, y,\r\n      Ctor = x.constructor,\r\n      isExp = sd !== void 0;\r\n\r\n    if (isExp) {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    } else {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    }\r\n\r\n    if (!x.isFinite()) {\r\n      str = nonFiniteToString(x);\r\n    } else {\r\n      str = finiteToString(x);\r\n      i = str.indexOf('.');\r\n\r\n      // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\r\n      // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\r\n      // minBinaryExponent = floor(decimalExponent * log[2](10))\r\n      // log[2](10) = 3.321928094887362347870319429489390175864\r\n\r\n      if (isExp) {\r\n        base = 2;\r\n        if (baseOut == 16) {\r\n          sd = sd * 4 - 3;\r\n        } else if (baseOut == 8) {\r\n          sd = sd * 3 - 2;\r\n        }\r\n      } else {\r\n        base = baseOut;\r\n      }\r\n\r\n      // Convert the number as an integer then divide the result by its base raised to a power such\r\n      // that the fraction part will be restored.\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        str = str.replace('.', '');\r\n        y = new Ctor(1);\r\n        y.e = str.length - i;\r\n        y.d = convertBase(finiteToString(y), 10, base);\r\n        y.e = y.d.length;\r\n      }\r\n\r\n      xd = convertBase(str, 10, base);\r\n      e = len = xd.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xd[--len] == 0;) xd.pop();\r\n\r\n      if (!xd[0]) {\r\n        str = isExp ? '0p+0' : '0';\r\n      } else {\r\n        if (i < 0) {\r\n          e--;\r\n        } else {\r\n          x = new Ctor(x);\r\n          x.d = xd;\r\n          x.e = e;\r\n          x = divide(x, y, sd, rm, 0, base);\r\n          xd = x.d;\r\n          e = x.e;\r\n          roundUp = inexact;\r\n        }\r\n\r\n        // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        i = xd[sd];\r\n        k = base / 2;\r\n        roundUp = roundUp || xd[sd + 1] !== void 0;\r\n\r\n        roundUp = rm < 4\r\n          ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\r\n          : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\r\n            rm === (x.s < 0 ? 8 : 7));\r\n\r\n        xd.length = sd;\r\n\r\n        if (roundUp) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (; ++xd[--sd] > base - 1;) {\r\n            xd[sd] = 0;\r\n            if (!sd) {\r\n              ++e;\r\n              xd.unshift(1);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n\r\n        // Add binary exponent suffix?\r\n        if (isExp) {\r\n          if (len > 1) {\r\n            if (baseOut == 16 || baseOut == 8) {\r\n              i = baseOut == 16 ? 4 : 3;\r\n              for (--len; len % i; len++) str += '0';\r\n              xd = convertBase(str, base, baseOut);\r\n              for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n              // xd[0] will always be be 1\r\n              for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n            } else {\r\n              str = str.charAt(0) + '.' + str.slice(1);\r\n            }\r\n          }\r\n\r\n          str =  str + (e < 0 ? 'p' : 'p+') + e;\r\n        } else if (e < 0) {\r\n          for (; ++e;) str = '0' + str;\r\n          str = '0.' + str;\r\n        } else {\r\n          if (++e > len) for (e -= len; e-- ;) str += '0';\r\n          else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\r\n        }\r\n      }\r\n\r\n      str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\r\n    }\r\n\r\n    return x.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Does not strip trailing zeros.\r\n  function truncate(arr, len) {\r\n    if (arr.length > len) {\r\n      arr.length = len;\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  // Decimal methods\r\n\r\n\r\n  /*\r\n   *  abs\r\n   *  acos\r\n   *  acosh\r\n   *  add\r\n   *  asin\r\n   *  asinh\r\n   *  atan\r\n   *  atanh\r\n   *  atan2\r\n   *  cbrt\r\n   *  ceil\r\n   *  clone\r\n   *  config\r\n   *  cos\r\n   *  cosh\r\n   *  div\r\n   *  exp\r\n   *  floor\r\n   *  hypot\r\n   *  ln\r\n   *  log\r\n   *  log2\r\n   *  log10\r\n   *  max\r\n   *  min\r\n   *  mod\r\n   *  mul\r\n   *  pow\r\n   *  random\r\n   *  round\r\n   *  set\r\n   *  sign\r\n   *  sin\r\n   *  sinh\r\n   *  sqrt\r\n   *  sub\r\n   *  tan\r\n   *  tanh\r\n   *  trunc\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function abs(x) {\r\n    return new this(x).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function acos(x) {\r\n    return new this(x).acos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function acosh(x) {\r\n    return new this(x).acosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function add(x, y) {\r\n    return new this(x).plus(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function asin(x) {\r\n    return new this(x).asin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function asinh(x) {\r\n    return new this(x).asinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function atan(x) {\r\n    return new this(x).atan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function atanh(x) {\r\n    return new this(x).atanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n   * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi, pi]\r\n   *\r\n   * y {number|string|Decimal} The y-coordinate.\r\n   * x {number|string|Decimal} The x-coordinate.\r\n   *\r\n   * atan2(±0, -0)               = ±pi\r\n   * atan2(±0, +0)               = ±0\r\n   * atan2(±0, -x)               = ±pi for x > 0\r\n   * atan2(±0, x)                = ±0 for x > 0\r\n   * atan2(-y, ±0)               = -pi/2 for y > 0\r\n   * atan2(y, ±0)                = pi/2 for y > 0\r\n   * atan2(±y, -Infinity)        = ±pi for finite y > 0\r\n   * atan2(±y, +Infinity)        = ±0 for finite y > 0\r\n   * atan2(±Infinity, x)         = ±pi/2 for finite x\r\n   * atan2(±Infinity, -Infinity) = ±3*pi/4\r\n   * atan2(±Infinity, +Infinity) = ±pi/4\r\n   * atan2(NaN, x) = NaN\r\n   * atan2(y, NaN) = NaN\r\n   *\r\n   */\r\n  function atan2(y, x) {\r\n    y = new this(y);\r\n    x = new this(x);\r\n    var r,\r\n      pr = this.precision,\r\n      rm = this.rounding,\r\n      wpr = pr + 4;\r\n\r\n    // Either NaN\r\n    if (!y.s || !x.s) {\r\n      r = new this(NaN);\r\n\r\n    // Both ±Infinity\r\n    } else if (!y.d && !x.d) {\r\n      r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\r\n      r.s = y.s;\r\n\r\n    // x is ±Infinity or y is ±0\r\n    } else if (!x.d || y.isZero()) {\r\n      r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\r\n      r.s = y.s;\r\n\r\n    // y is ±Infinity or x is ±0\r\n    } else if (!y.d || x.isZero()) {\r\n      r = getPi(this, wpr, 1).times(0.5);\r\n      r.s = y.s;\r\n\r\n    // Both non-zero and finite\r\n    } else if (x.s < 0) {\r\n      this.precision = wpr;\r\n      this.rounding = 1;\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n      x = getPi(this, wpr, 1);\r\n      this.precision = pr;\r\n      this.rounding = rm;\r\n      r = y.s < 0 ? r.minus(x) : r.plus(x);\r\n    } else {\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function cbrt(x) {\r\n    return new this(x).cbrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ceil(x) {\r\n    return finalise(x = new this(x), x.e + 1, 2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Configure global settings for a Decimal constructor.\r\n   *\r\n   * `obj` is an object with one or more of the following properties,\r\n   *\r\n   *   precision  {number}\r\n   *   rounding   {number}\r\n   *   toExpNeg   {number}\r\n   *   toExpPos   {number}\r\n   *   maxE       {number}\r\n   *   minE       {number}\r\n   *   modulo     {number}\r\n   *   crypto     {boolean|number}\r\n   *   defaults   {true}\r\n   *\r\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n   *\r\n   */\r\n  function config(obj) {\r\n    if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\r\n    var i, p, v,\r\n      useDefaults = obj.defaults === true,\r\n      ps = [\r\n        'precision', 1, MAX_DIGITS,\r\n        'rounding', 0, 8,\r\n        'toExpNeg', -EXP_LIMIT, 0,\r\n        'toExpPos', 0, EXP_LIMIT,\r\n        'maxE', 0, EXP_LIMIT,\r\n        'minE', -EXP_LIMIT, 0,\r\n        'modulo', 0, 9\r\n      ];\r\n\r\n    for (i = 0; i < ps.length; i += 3) {\r\n      if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\r\n      if ((v = obj[p]) !== void 0) {\r\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\r\n    if ((v = obj[p]) !== void 0) {\r\n      if (v === true || v === false || v === 0 || v === 1) {\r\n        if (v) {\r\n          if (typeof crypto != 'undefined' && crypto &&\r\n            (crypto.getRandomValues || crypto.randomBytes)) {\r\n            this[p] = true;\r\n          } else {\r\n            throw Error(cryptoUnavailable);\r\n          }\r\n        } else {\r\n          this[p] = false;\r\n        }\r\n      } else {\r\n        throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cos(x) {\r\n    return new this(x).cos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cosh(x) {\r\n    return new this(x).cosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n   * constructor.\r\n   *\r\n   */\r\n  function clone(obj) {\r\n    var i, p, ps;\r\n\r\n    /*\r\n     * The Decimal constructor and exported function.\r\n     * Return a new Decimal instance.\r\n     *\r\n     * v {number|string|Decimal} A numeric value.\r\n     *\r\n     */\r\n    function Decimal(v) {\r\n      var e, i, t,\r\n        x = this;\r\n\r\n      // Decimal called without new.\r\n      if (!(x instanceof Decimal)) return new Decimal(v);\r\n\r\n      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n      // which points to Object.\r\n      x.constructor = Decimal;\r\n\r\n      // Duplicate.\r\n      if (v instanceof Decimal) {\r\n        x.s = v.s;\r\n\r\n        if (external) {\r\n          if (!v.d || v.e > Decimal.maxE) {\r\n\r\n            // Infinity.\r\n            x.e = NaN;\r\n            x.d = null;\r\n          } else if (v.e < Decimal.minE) {\r\n\r\n            // Zero.\r\n            x.e = 0;\r\n            x.d = [0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.d = v.d.slice();\r\n          }\r\n        } else {\r\n          x.e = v.e;\r\n          x.d = v.d ? v.d.slice() : v.d;\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      t = typeof v;\r\n\r\n      if (t === 'number') {\r\n        if (v === 0) {\r\n          x.s = 1 / v < 0 ? -1 : 1;\r\n          x.e = 0;\r\n          x.d = [0];\r\n          return;\r\n        }\r\n\r\n        if (v < 0) {\r\n          v = -v;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 1;\r\n        }\r\n\r\n        // Fast path for small integers.\r\n        if (v === ~~v && v < 1e7) {\r\n          for (e = 0, i = v; i >= 10; i /= 10) e++;\r\n\r\n          if (external) {\r\n            if (e > Decimal.maxE) {\r\n              x.e = NaN;\r\n              x.d = null;\r\n            } else if (e < Decimal.minE) {\r\n              x.e = 0;\r\n              x.d = [0];\r\n            } else {\r\n              x.e = e;\r\n              x.d = [v];\r\n            }\r\n          } else {\r\n            x.e = e;\r\n            x.d = [v];\r\n          }\r\n\r\n          return;\r\n\r\n        // Infinity, NaN.\r\n        } else if (v * 0 !== 0) {\r\n          if (!v) x.s = NaN;\r\n          x.e = NaN;\r\n          x.d = null;\r\n          return;\r\n        }\r\n\r\n        return parseDecimal(x, v.toString());\r\n\r\n      } else if (t !== 'string') {\r\n        throw Error(invalidArgument + v);\r\n      }\r\n\r\n      // Minus sign?\r\n      if ((i = v.charCodeAt(0)) === 45) {\r\n        v = v.slice(1);\r\n        x.s = -1;\r\n      } else {\r\n        // Plus sign?\r\n        if (i === 43) v = v.slice(1);\r\n        x.s = 1;\r\n      }\r\n\r\n      return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\r\n    }\r\n\r\n    Decimal.prototype = P;\r\n\r\n    Decimal.ROUND_UP = 0;\r\n    Decimal.ROUND_DOWN = 1;\r\n    Decimal.ROUND_CEIL = 2;\r\n    Decimal.ROUND_FLOOR = 3;\r\n    Decimal.ROUND_HALF_UP = 4;\r\n    Decimal.ROUND_HALF_DOWN = 5;\r\n    Decimal.ROUND_HALF_EVEN = 6;\r\n    Decimal.ROUND_HALF_CEIL = 7;\r\n    Decimal.ROUND_HALF_FLOOR = 8;\r\n    Decimal.EUCLID = 9;\r\n\r\n    Decimal.config = Decimal.set = config;\r\n    Decimal.clone = clone;\r\n    Decimal.isDecimal = isDecimalInstance;\r\n\r\n    Decimal.abs = abs;\r\n    Decimal.acos = acos;\r\n    Decimal.acosh = acosh;        // ES6\r\n    Decimal.add = add;\r\n    Decimal.asin = asin;\r\n    Decimal.asinh = asinh;        // ES6\r\n    Decimal.atan = atan;\r\n    Decimal.atanh = atanh;        // ES6\r\n    Decimal.atan2 = atan2;\r\n    Decimal.cbrt = cbrt;          // ES6\r\n    Decimal.ceil = ceil;\r\n    Decimal.cos = cos;\r\n    Decimal.cosh = cosh;          // ES6\r\n    Decimal.div = div;\r\n    Decimal.exp = exp;\r\n    Decimal.floor = floor;\r\n    Decimal.hypot = hypot;        // ES6\r\n    Decimal.ln = ln;\r\n    Decimal.log = log;\r\n    Decimal.log10 = log10;        // ES6\r\n    Decimal.log2 = log2;          // ES6\r\n    Decimal.max = max;\r\n    Decimal.min = min;\r\n    Decimal.mod = mod;\r\n    Decimal.mul = mul;\r\n    Decimal.pow = pow;\r\n    Decimal.random = random;\r\n    Decimal.round = round;\r\n    Decimal.sign = sign;          // ES6\r\n    Decimal.sin = sin;\r\n    Decimal.sinh = sinh;          // ES6\r\n    Decimal.sqrt = sqrt;\r\n    Decimal.sub = sub;\r\n    Decimal.tan = tan;\r\n    Decimal.tanh = tanh;          // ES6\r\n    Decimal.trunc = trunc;        // ES6\r\n\r\n    if (obj === void 0) obj = {};\r\n    if (obj) {\r\n      if (obj.defaults !== true) {\r\n        ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\r\n        for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n      }\r\n    }\r\n\r\n    Decimal.config(obj);\r\n\r\n    return Decimal;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function div(x, y) {\r\n    return new this(x).div(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The power to which to raise the base of the natural log.\r\n   *\r\n   */\r\n  function exp(x) {\r\n    return new this(x).exp();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function floor(x) {\r\n    return finalise(x = new this(x), x.e + 1, 3);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function hypot() {\r\n    var i, n,\r\n      t = new this(0);\r\n\r\n    external = false;\r\n\r\n    for (i = 0; i < arguments.length;) {\r\n      n = new this(arguments[i++]);\r\n      if (!n.d) {\r\n        if (n.s) {\r\n          external = true;\r\n          return new this(1 / 0);\r\n        }\r\n        t = n;\r\n      } else if (t.d) {\r\n        t = t.plus(n.times(n));\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return t.sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  function isDecimalInstance(obj) {\r\n    return obj instanceof Decimal || obj && obj.name === '[object Decimal]' || false;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ln(x) {\r\n    return new this(x).ln();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n   * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * log[y](x)\r\n   *\r\n   * x {number|string|Decimal} The argument of the logarithm.\r\n   * y {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  function log(x, y) {\r\n    return new this(x).log(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log2(x) {\r\n    return new this(x).log(2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log10(x) {\r\n    return new this(x).log(10);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function max() {\r\n    return maxOrMin(this, arguments, 'lt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function min() {\r\n    return maxOrMin(this, arguments, 'gt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mod(x, y) {\r\n    return new this(x).mod(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mul(x, y) {\r\n    return new this(x).mul(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The base.\r\n   * y {number|string|Decimal} The exponent.\r\n   *\r\n   */\r\n  function pow(x, y) {\r\n    return new this(x).pow(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n   * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n   * are produced).\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n   *\r\n   */\r\n  function random(sd) {\r\n    var d, e, k, n,\r\n      i = 0,\r\n      r = new this(1),\r\n      rd = [];\r\n\r\n    if (sd === void 0) sd = this.precision;\r\n    else checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    k = Math.ceil(sd / LOG_BASE);\r\n\r\n    if (!this.crypto) {\r\n      for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n\r\n    // Browsers supporting crypto.getRandomValues.\r\n    } else if (crypto.getRandomValues) {\r\n      d = crypto.getRandomValues(new Uint32Array(k));\r\n\r\n      for (; i < k;) {\r\n        n = d[i];\r\n\r\n        // 0 <= n < 4294967296\r\n        // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n        if (n >= 4.29e9) {\r\n          d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\r\n        } else {\r\n\r\n          // 0 <= n <= 4289999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd[i++] = n % 1e7;\r\n        }\r\n      }\r\n\r\n    // Node.js supporting crypto.randomBytes.\r\n    } else if (crypto.randomBytes) {\r\n\r\n      // buffer\r\n      d = crypto.randomBytes(k *= 4);\r\n\r\n      for (; i < k;) {\r\n\r\n        // 0 <= n < 2147483648\r\n        n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\r\n\r\n        // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n        if (n >= 2.14e9) {\r\n          crypto.randomBytes(4).copy(d, i);\r\n        } else {\r\n\r\n          // 0 <= n <= 2139999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd.push(n % 1e7);\r\n          i += 4;\r\n        }\r\n      }\r\n\r\n      i = k / 4;\r\n    } else {\r\n      throw Error(cryptoUnavailable);\r\n    }\r\n\r\n    k = rd[--i];\r\n    sd %= LOG_BASE;\r\n\r\n    // Convert trailing digits to zeros according to sd.\r\n    if (k && sd) {\r\n      n = mathpow(10, LOG_BASE - sd);\r\n      rd[i] = (k / n | 0) * n;\r\n    }\r\n\r\n    // Remove trailing words which are zero.\r\n    for (; rd[i] === 0; i--) rd.pop();\r\n\r\n    // Zero?\r\n    if (i < 0) {\r\n      e = 0;\r\n      rd = [0];\r\n    } else {\r\n      e = -1;\r\n\r\n      // Remove leading words which are zero and adjust exponent accordingly.\r\n      for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\r\n\r\n      // Count the digits of the first word of rd to determine leading zeros.\r\n      for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\r\n\r\n      // Adjust the exponent for leading zeros of the first word of rd.\r\n      if (k < LOG_BASE) e -= LOG_BASE - k;\r\n    }\r\n\r\n    r.e = e;\r\n    r.d = rd;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n   *\r\n   * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function round(x) {\r\n    return finalise(x = new this(x), x.e + 1, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if x > 0,\r\n   *  -1    if x < 0,\r\n   *   0    if x is 0,\r\n   *  -0    if x is -0,\r\n   *   NaN  otherwise\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sign(x) {\r\n    x = new this(x);\r\n    return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sin(x) {\r\n    return new this(x).sin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sinh(x) {\r\n    return new this(x).sinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sqrt(x) {\r\n    return new this(x).sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function sub(x, y) {\r\n    return new this(x).sub(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tan(x) {\r\n    return new this(x).tan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tanh(x) {\r\n    return new this(x).tanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` truncated to an integer.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function trunc(x) {\r\n    return finalise(x = new this(x), x.e + 1, 1);\r\n  }\r\n\r\n\r\n  // Create and configure initial Decimal constructor.\r\n  Decimal = clone(DEFAULTS);\r\n\r\n  Decimal['default'] = Decimal.Decimal = Decimal;\r\n\r\n  // Create the internal constants from their string values.\r\n  LN10 = new Decimal(LN10);\r\n  PI = new Decimal(PI);\r\n\r\n\r\n  // Export.\r\n\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () {\r\n      return Decimal;\r\n    });\r\n\r\n  // Node and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    if (typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol') {\r\n      P[Symbol.for('nodejs.util.inspect.custom')] = P.toString;\r\n      P[Symbol.toStringTag] = 'Decimal';\r\n    }\r\n\r\n    module.exports = Decimal;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalScope) {\r\n      globalScope = typeof self != 'undefined' && self && self.self == self ? self : window;\r\n    }\r\n\r\n    noConflict = globalScope.Decimal;\r\n    Decimal.noConflict = function () {\r\n      globalScope.Decimal = noConflict;\r\n      return Decimal;\r\n    };\r\n\r\n    globalScope.Decimal = Decimal;\r\n  }\r\n})(this);\r\n"},"lineCount":4879}},"error":null,"hash":"9bbaa6828e417efa1cf987ca350651fd","cacheData":{"env":{}}}