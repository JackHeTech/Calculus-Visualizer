{"id":"node_modules/escape-latex/dist/index.js","dependencies":[{"name":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\package.json","includedInParent":true,"mtime":1579751683112},{"name":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\node_modules\\escape-latex\\package.json","includedInParent":true,"mtime":1579751682412}],"generated":{"js":"\"use strict\";\n\n// Map the characters to escape to their escaped values. The list is derived\n// from http://www.cespedes.org/blog/85/how-to-escape-latex-special-characters\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar defaultEscapes = {\n  \"{\": \"\\\\{\",\n  \"}\": \"\\\\}\",\n  \"\\\\\": \"\\\\textbackslash{}\",\n  \"#\": \"\\\\#\",\n  $: \"\\\\$\",\n  \"%\": \"\\\\%\",\n  \"&\": \"\\\\&\",\n  \"^\": \"\\\\textasciicircum{}\",\n  _: \"\\\\_\",\n  \"~\": \"\\\\textasciitilde{}\"\n};\nvar formatEscapes = {\n  \"\\u2013\": \"\\\\--\",\n  \"\\u2014\": \"\\\\---\",\n  \" \": \"~\",\n  \"\\t\": \"\\\\qquad{}\",\n  \"\\r\\n\": \"\\\\newline{}\",\n  \"\\n\": \"\\\\newline{}\"\n};\n\nvar defaultEscapeMapFn = function defaultEscapeMapFn(defaultEscapes, formatEscapes) {\n  return _extends({}, defaultEscapes, formatEscapes);\n};\n\n/**\n * Escape a string to be used in LaTeX documents.\n * @param {string} str the string to be escaped.\n * @param {boolean} params.preserveFormatting whether formatting escapes should\n *  be performed (default: false).\n * @param {function} params.escapeMapFn the function to modify the escape maps.\n * @return {string} the escaped string, ready to be used in LaTeX.\n */\nmodule.exports = function (str) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$preserveFormatti = _ref.preserveFormatting,\n      preserveFormatting = _ref$preserveFormatti === undefined ? false : _ref$preserveFormatti,\n      _ref$escapeMapFn = _ref.escapeMapFn,\n      escapeMapFn = _ref$escapeMapFn === undefined ? defaultEscapeMapFn : _ref$escapeMapFn;\n\n  var runningStr = String(str);\n  var result = \"\";\n\n  var escapes = escapeMapFn(_extends({}, defaultEscapes), preserveFormatting ? _extends({}, formatEscapes) : {});\n  var escapeKeys = Object.keys(escapes); // as it is reused later on\n\n  // Algorithm: Go through the string character by character, if it matches\n  // with one of the special characters then we'll replace it with the escaped\n  // version.\n\n  var _loop = function _loop() {\n    var specialCharFound = false;\n    escapeKeys.forEach(function (key, index) {\n      if (specialCharFound) {\n        return;\n      }\n      if (runningStr.length >= key.length && runningStr.slice(0, key.length) === key) {\n        result += escapes[escapeKeys[index]];\n        runningStr = runningStr.slice(key.length, runningStr.length);\n        specialCharFound = true;\n      }\n    });\n    if (!specialCharFound) {\n      result += runningStr.slice(0, 1);\n      runningStr = runningStr.slice(1, runningStr.length);\n    }\n  };\n\n  while (runningStr) {\n    _loop();\n  }\n  return result;\n};"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/escape-latex/dist/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/escape-latex/dist/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}}],"sources":{"node_modules/escape-latex/dist/index.js":"\"use strict\";\n\n// Map the characters to escape to their escaped values. The list is derived\n// from http://www.cespedes.org/blog/85/how-to-escape-latex-special-characters\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar defaultEscapes = {\n  \"{\": \"\\\\{\",\n  \"}\": \"\\\\}\",\n  \"\\\\\": \"\\\\textbackslash{}\",\n  \"#\": \"\\\\#\",\n  $: \"\\\\$\",\n  \"%\": \"\\\\%\",\n  \"&\": \"\\\\&\",\n  \"^\": \"\\\\textasciicircum{}\",\n  _: \"\\\\_\",\n  \"~\": \"\\\\textasciitilde{}\"\n};\nvar formatEscapes = {\n  \"\\u2013\": \"\\\\--\",\n  \"\\u2014\": \"\\\\---\",\n  \" \": \"~\",\n  \"\\t\": \"\\\\qquad{}\",\n  \"\\r\\n\": \"\\\\newline{}\",\n  \"\\n\": \"\\\\newline{}\"\n};\n\nvar defaultEscapeMapFn = function defaultEscapeMapFn(defaultEscapes, formatEscapes) {\n  return _extends({}, defaultEscapes, formatEscapes);\n};\n\n/**\n * Escape a string to be used in LaTeX documents.\n * @param {string} str the string to be escaped.\n * @param {boolean} params.preserveFormatting whether formatting escapes should\n *  be performed (default: false).\n * @param {function} params.escapeMapFn the function to modify the escape maps.\n * @return {string} the escaped string, ready to be used in LaTeX.\n */\nmodule.exports = function (str) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$preserveFormatti = _ref.preserveFormatting,\n      preserveFormatting = _ref$preserveFormatti === undefined ? false : _ref$preserveFormatti,\n      _ref$escapeMapFn = _ref.escapeMapFn,\n      escapeMapFn = _ref$escapeMapFn === undefined ? defaultEscapeMapFn : _ref$escapeMapFn;\n\n  var runningStr = String(str);\n  var result = \"\";\n\n  var escapes = escapeMapFn(_extends({}, defaultEscapes), preserveFormatting ? _extends({}, formatEscapes) : {});\n  var escapeKeys = Object.keys(escapes); // as it is reused later on\n\n  // Algorithm: Go through the string character by character, if it matches\n  // with one of the special characters then we'll replace it with the escaped\n  // version.\n\n  var _loop = function _loop() {\n    var specialCharFound = false;\n    escapeKeys.forEach(function (key, index) {\n      if (specialCharFound) {\n        return;\n      }\n      if (runningStr.length >= key.length && runningStr.slice(0, key.length) === key) {\n        result += escapes[escapeKeys[index]];\n        runningStr = runningStr.slice(key.length, runningStr.length);\n        specialCharFound = true;\n      }\n    });\n    if (!specialCharFound) {\n      result += runningStr.slice(0, 1);\n      runningStr = runningStr.slice(1, runningStr.length);\n    }\n  };\n\n  while (runningStr) {\n    _loop();\n  }\n  return result;\n};"},"lineCount":80}},"error":null,"hash":"cfa9d96445fdbb7197db16b798fe6e14","cacheData":{"env":{}}}