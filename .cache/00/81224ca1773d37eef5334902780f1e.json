{"id":"node_modules/mathjs/es/type/chain/function/chain.js","dependencies":[{"name":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\package.json","includedInParent":true,"mtime":1579751683112},{"name":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\node_modules\\mathjs\\package.json","includedInParent":true,"mtime":1579751683012},{"name":"../../../utils/factory","loc":{"line":1,"column":24},"parent":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\node_modules\\mathjs\\es\\type\\chain\\function\\chain.js","resolved":"C:\\Users\\bugat\\developer\\CalculusVisualizer\\node_modules\\mathjs\\es\\utils\\factory.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createChain = void 0;\n\nvar _factory = require(\"../../../utils/factory\");\n\nvar name = 'chain';\nvar dependencies = ['typed', 'Chain'];\nvar createChain =\n/* #__PURE__ */\n(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      Chain = _ref.Chain;\n  /**\n   * Wrap any value in a chain, allowing to perform chained operations on\n   * the value.\n   *\n   * All methods available in the math.js library can be called upon the chain,\n   * and then will be evaluated with the value itself as first argument.\n   * The chain can be closed by executing `chain.done()`, which returns\n   * the final value.\n   *\n   * The chain has a number of special functions:\n   *\n   * - `done()`     Finalize the chain and return the chain's value.\n   * - `valueOf()`  The same as `done()`\n   * - `toString()` Executes `math.format()` onto the chain's value, returning\n   *                a string representation of the value.\n   *\n   * Syntax:\n   *\n   *    math.chain(value)\n   *\n   * Examples:\n   *\n   *     math.chain(3)\n   *         .add(4)\n   *         .subtract(2)\n   *         .done()     // 5\n   *\n   *     math.chain( [[1, 2], [3, 4]] )\n   *         .subset(math.index(0, 0), 8)\n   *         .multiply(3)\n   *         .done()     // [[24, 6], [9, 12]]\n   *\n   * @param {*} [value]   A value of any type on which to start a chained operation.\n   * @return {math.Chain} The created chain\n   */\n\n  return typed(name, {\n    '': function _() {\n      return new Chain();\n    },\n    any: function any(value) {\n      return new Chain(value);\n    }\n  });\n});\nexports.createChain = createChain;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":2,"column":0}},{"name":"name","generated":{"line":10,"column":4},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":2,"column":4}},{"generated":{"line":10,"column":8},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":2,"column":8}},{"generated":{"line":10,"column":11},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":2,"column":11}},{"generated":{"line":10,"column":18},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":2,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":3,"column":0}},{"name":"dependencies","generated":{"line":11,"column":4},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":3,"column":4}},{"generated":{"line":11,"column":16},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":3,"column":16}},{"generated":{"line":11,"column":19},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":3,"column":19}},{"generated":{"line":11,"column":20},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":3,"column":20}},{"generated":{"line":11,"column":27},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":3,"column":19}},{"generated":{"line":11,"column":29},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":3,"column":29}},{"generated":{"line":11,"column":36},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":3,"column":19}},{"generated":{"line":11,"column":37},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":3,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":4,"column":7}},{"name":"createChain","generated":{"line":12,"column":4},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":4,"column":11}},{"generated":{"line":12,"column":15},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":4,"column":22}},{"generated":{"line":13,"column":0},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":5,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":6,"column":0}},{"name":"name","generated":{"line":14,"column":22},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":6,"column":8}},{"generated":{"line":14,"column":26},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":6,"column":0}},{"name":"dependencies","generated":{"line":14,"column":28},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":6,"column":14}},{"generated":{"line":14,"column":40},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":42},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":6,"column":28}},{"name":"_ref","generated":{"line":14,"column":52},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":6,"column":38}},{"generated":{"line":14,"column":56},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":6,"column":28}},{"generated":{"line":14,"column":58},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":6,"column":44}},{"generated":{"line":15,"column":0},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":7,"column":2}},{"name":"typed","generated":{"line":15,"column":6},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":7,"column":6}},{"generated":{"line":15,"column":11},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":7,"column":11}},{"name":"_ref","generated":{"line":15,"column":14},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":7,"column":14}},{"generated":{"line":15,"column":18},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":7,"column":18}},{"name":"typed","generated":{"line":15,"column":19},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":7,"column":19}},{"generated":{"line":15,"column":24},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":7,"column":2}},{"generated":{"line":16,"column":0},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":7,"column":2}},{"name":"Chain","generated":{"line":16,"column":6},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":8,"column":6}},{"generated":{"line":16,"column":11},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":8,"column":11}},{"name":"_ref","generated":{"line":16,"column":14},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":8,"column":14}},{"generated":{"line":16,"column":18},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":8,"column":18}},{"name":"Chain","generated":{"line":16,"column":19},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":8,"column":19}},{"generated":{"line":16,"column":24},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":7,"column":2}},{"generated":{"line":17,"column":0},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":10,"column":2}},{"generated":{"line":53,"column":0},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":45,"column":2}},{"name":"typed","generated":{"line":53,"column":9},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":45,"column":9}},{"generated":{"line":53,"column":14},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":45,"column":14}},{"name":"name","generated":{"line":53,"column":15},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":45,"column":15}},{"generated":{"line":53,"column":19},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":45,"column":14}},{"generated":{"line":53,"column":21},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":45,"column":21}},{"generated":{"line":54,"column":0},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":46,"column":4}},{"generated":{"line":54,"column":8},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":46,"column":8}},{"name":"_","generated":{"line":54,"column":17},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":46,"column":17}},{"generated":{"line":54,"column":18},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":46,"column":8}},{"generated":{"line":54,"column":21},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":46,"column":21}},{"generated":{"line":55,"column":0},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":47,"column":6}},{"generated":{"line":55,"column":13},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":47,"column":13}},{"name":"Chain","generated":{"line":55,"column":17},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":47,"column":17}},{"generated":{"line":55,"column":22},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":47,"column":13}},{"generated":{"line":55,"column":24},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":47,"column":6}},{"generated":{"line":56,"column":0},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":48,"column":5}},{"generated":{"line":56,"column":5},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":45,"column":21}},{"name":"any","generated":{"line":57,"column":0},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":49,"column":4}},{"name":"any","generated":{"line":57,"column":4},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":49,"column":4}},{"generated":{"line":57,"column":7},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":49,"column":7}},{"generated":{"line":57,"column":9},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":49,"column":9}},{"name":"any","generated":{"line":57,"column":18},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":49,"column":18}},{"generated":{"line":57,"column":21},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":49,"column":9}},{"name":"value","generated":{"line":57,"column":22},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":49,"column":22}},{"generated":{"line":57,"column":27},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":49,"column":9}},{"generated":{"line":57,"column":29},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":49,"column":29}},{"generated":{"line":58,"column":0},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":50,"column":6}},{"generated":{"line":58,"column":13},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":50,"column":13}},{"name":"Chain","generated":{"line":58,"column":17},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":50,"column":17}},{"generated":{"line":58,"column":22},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":50,"column":13}},{"name":"value","generated":{"line":58,"column":23},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":50,"column":23}},{"generated":{"line":58,"column":28},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":50,"column":13}},{"generated":{"line":58,"column":29},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":50,"column":6}},{"generated":{"line":59,"column":0},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":51,"column":5}},{"generated":{"line":60,"column":0},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":45,"column":21}},{"generated":{"line":60,"column":3},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":45,"column":14}},{"generated":{"line":60,"column":4},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":45,"column":2}},{"generated":{"line":61,"column":0},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":53,"column":1}},{"generated":{"line":61,"column":1},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":6,"column":0}},{"generated":{"line":61,"column":2},"source":"node_modules/mathjs/es/type/chain/function/chain.js","original":{"line":4,"column":7}}],"sources":{"node_modules/mathjs/es/type/chain/function/chain.js":"import { factory } from '../../../utils/factory';\nvar name = 'chain';\nvar dependencies = ['typed', 'Chain'];\nexport var createChain =\n/* #__PURE__ */\nfactory(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      Chain = _ref.Chain;\n\n  /**\n   * Wrap any value in a chain, allowing to perform chained operations on\n   * the value.\n   *\n   * All methods available in the math.js library can be called upon the chain,\n   * and then will be evaluated with the value itself as first argument.\n   * The chain can be closed by executing `chain.done()`, which returns\n   * the final value.\n   *\n   * The chain has a number of special functions:\n   *\n   * - `done()`     Finalize the chain and return the chain's value.\n   * - `valueOf()`  The same as `done()`\n   * - `toString()` Executes `math.format()` onto the chain's value, returning\n   *                a string representation of the value.\n   *\n   * Syntax:\n   *\n   *    math.chain(value)\n   *\n   * Examples:\n   *\n   *     math.chain(3)\n   *         .add(4)\n   *         .subtract(2)\n   *         .done()     // 5\n   *\n   *     math.chain( [[1, 2], [3, 4]] )\n   *         .subset(math.index(0, 0), 8)\n   *         .multiply(3)\n   *         .done()     // [[24, 6], [9, 12]]\n   *\n   * @param {*} [value]   A value of any type on which to start a chained operation.\n   * @return {math.Chain} The created chain\n   */\n  return typed(name, {\n    '': function _() {\n      return new Chain();\n    },\n    any: function any(value) {\n      return new Chain(value);\n    }\n  });\n});"},"lineCount":null}},"error":null,"hash":"52e75acae32023a1c491b5284370ec68","cacheData":{"env":{}}}